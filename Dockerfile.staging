# Staging Dockerfile - builds from repository root
# Multi-stage build optimized for Render deployment

FROM node:18-alpine AS base
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm@8.15.3

# Dependencies stage
FROM base AS deps
WORKDIR /app

# Copy package files from the frontend directory
COPY frontend/pyfactor_next/package.json frontend/pyfactor_next/pnpm-lock.yaml ./

# Install dependencies with frozen lockfile
RUN pnpm install --frozen-lockfile

# Build stage
FROM base AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy the entire frontend directory
COPY frontend/pyfactor_next .

# Accept build args for environment variables
ARG NEXT_PUBLIC_API_URL=https://dott-api-staging.onrender.com
ARG NEXT_PUBLIC_BASE_URL=https://staging.dottapps.com
ARG NEXT_PUBLIC_BACKEND_URL=https://dott-api-staging.onrender.com
ARG NEXT_PUBLIC_AUTH0_DOMAIN=dev-cbyy63jovi6zrcos.us.auth0.com
ARG NEXT_PUBLIC_AUTH0_CLIENT_ID=9i7GSU4bgh6hFtMXnQACwiRxTudpuOSF
ARG NEXT_PUBLIC_AUTH0_AUDIENCE=https://api-staging.dottapps.com
ARG AUTH0_SECRET
ARG AUTH0_BASE_URL=https://staging.dottapps.com
ARG AUTH0_ISSUER_BASE_URL=https://dev-cbyy63jovi6zrcos.us.auth0.com
ARG AUTH0_CLIENT_ID=9i7GSU4bgh6hFtMXnQACwiRxTudpuOSF
ARG AUTH0_CLIENT_SECRET
ARG NEXT_PUBLIC_CRISP_WEBSITE_ID
ARG NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
ARG NEXT_PUBLIC_GOOGLE_MAPS_API_KEY
ARG NEXT_PUBLIC_ENVIRONMENT=staging
ARG NEXT_PUBLIC_SHOW_STAGING_BANNER=true

# Set build-time environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=3584"

# Build the Next.js application
RUN pnpm build

# Production stage
FROM node:18-alpine AS runner
WORKDIR /app

# Add non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

# Set runtime environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=10000
ENV HOSTNAME="0.0.0.0"

# Use non-root user
USER nextjs

# Expose port
EXPOSE 10000

# Start the application
CMD ["node", "server.js"]