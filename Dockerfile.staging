# Staging Dockerfile - Simplified version
# Builds from repository root with frontend code
# Updated: 2025-09-13 - Multi-stage build for Render

# Stage 1: Dependencies
FROM node:18-alpine AS deps

# Install dependencies
RUN apk add --no-cache libc6-compat

# Install pnpm
RUN npm install -g pnpm@8.15.3

# Set working directory
WORKDIR /app

# Copy package files from frontend
COPY frontend/pyfactor_next/package*.json ./
COPY frontend/pyfactor_next/pnpm-lock.yaml* ./

# Install dependencies
RUN pnpm install --frozen-lockfile --ignore-scripts || pnpm install

# Stage 2: Builder
FROM node:18-alpine AS builder

# Install pnpm
RUN npm install -g pnpm@8.15.3

WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy all frontend code
COPY frontend/pyfactor_next/ ./

# Build arguments
ARG NEXT_PUBLIC_API_URL=https://dott-api-staging.onrender.com
ARG NEXT_PUBLIC_BASE_URL=https://staging.dottapps.com
ARG NEXT_PUBLIC_BACKEND_URL=https://dott-api-staging.onrender.com
ARG NEXT_PUBLIC_AUTH0_DOMAIN=dev-cbyy63jovi6zrcos.us.auth0.com
ARG NEXT_PUBLIC_AUTH0_CLIENT_ID=9i7GSU4bgh6hFtMXnQACwiRxTudpuOSF
ARG NEXT_PUBLIC_AUTH0_AUDIENCE=https://api-staging.dottapps.com
ARG AUTH0_SECRET
ARG AUTH0_BASE_URL=https://staging.dottapps.com
ARG AUTH0_ISSUER_BASE_URL=https://dev-cbyy63jovi6zrcos.us.auth0.com
ARG AUTH0_CLIENT_ID=9i7GSU4bgh6hFtMXnQACwiRxTudpuOSF
ARG AUTH0_CLIENT_SECRET
ARG NEXT_PUBLIC_CRISP_WEBSITE_ID
ARG NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
ARG NEXT_PUBLIC_GOOGLE_MAPS_API_KEY
ARG NEXT_PUBLIC_ENVIRONMENT=staging
ARG NEXT_PUBLIC_SHOW_STAGING_BANNER=true

# Environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=3584"

# Build the application
RUN pnpm build

# Stage 3: Runner
FROM node:18-alpine AS runner

# Install pnpm
RUN npm install -g pnpm@8.15.3

WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_OPTIONS="--max-old-space-size=3584"
ENV PORT=10000
ENV HOSTNAME="0.0.0.0"

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

# Change ownership
RUN chown -R nextjs:nodejs /app

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 10000

# Start the application
CMD ["pnpm", "next", "start", "-p", "10000"]