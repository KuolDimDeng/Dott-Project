# Generated by Django migration

from django.db import migrations


def set_tenant_first_user_as_owner(apps, schema_editor):
    """
    For each tenant, set the first user (by creation date) as OWNER.
    This handles existing data where users might have the default role.
    """
    User = apps.get_model('custom_auth', 'User')
    Tenant = apps.get_model('custom_auth', 'Tenant')
    
    # For each tenant, find the first user and set them as OWNER
    for tenant in Tenant.objects.all():
        first_user = User.objects.filter(tenant=tenant).order_by('date_joined').first()
        if first_user and first_user.role != 'OWNER':
            first_user.role = 'OWNER'
            first_user.save()


def reverse_set_tenant_first_user_as_owner(apps, schema_editor):
    """
    Reverse operation - set all users back to default role
    """
    User = apps.get_model('custom_auth', 'User')
    User.objects.filter(role='OWNER').update(role='USER')


class Migration(migrations.Migration):

    dependencies = [
        ('custom_auth', '0003_populate_page_permissions'),
    ]

    operations = [
        migrations.RunPython(set_tenant_first_user_as_owner, reverse_set_tenant_first_user_as_owner),
    ]