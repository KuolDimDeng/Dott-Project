# Generated by Django migration

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('custom_auth', '0001_initial'),
    ]

    operations = [
        # Update User role field to have choices
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(
                choices=[('OWNER', 'Owner'), ('ADMIN', 'Admin'), ('USER', 'User')],
                default='USER',
                max_length=10
            ),
        ),
        
        # Create PagePermission model
        migrations.CreateModel(
            name='PagePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('path', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'page_permissions',
                'ordering': ['category', 'name'],
            },
        ),
        
        # Create RoleTemplate model
        migrations.CreateModel(
            name='RoleTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'role_templates',
            },
        ),
        
        # Create UserInvitation model
        migrations.CreateModel(
            name='UserInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254)),
                ('role', models.CharField(choices=[('OWNER', 'Owner'), ('ADMIN', 'Admin'), ('USER', 'User')], default='USER', max_length=10)),
                ('invitation_token', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('accepted', 'Accepted'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField()),
                ('page_permissions', models.JSONField(blank=True, default=dict)),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.tenant')),
            ],
            options={
                'db_table': 'user_invitations',
                'ordering': ['-created_at'],
            },
        ),
        
        # Create UserPageAccess model
        migrations.CreateModel(
            name='UserPageAccess',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.pagepermission')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.tenant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_access', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_page_access',
                'unique_together': {('user', 'page', 'tenant')},
            },
        ),
        
        # Create RoleTemplatePages model
        migrations.CreateModel(
            name='RoleTemplatePages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_read', models.BooleanField(default=True)),
                ('can_write', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.pagepermission')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='custom_auth.roletemplate')),
            ],
            options={
                'db_table': 'role_template_pages',
                'unique_together': {('template', 'page')},
            },
        ),
        
        # Add pages field to RoleTemplate
        migrations.AddField(
            model_name='roletemplate',
            name='pages',
            field=models.ManyToManyField(through='custom_auth.RoleTemplatePages', to='custom_auth.pagepermission'),
        ),
    ]