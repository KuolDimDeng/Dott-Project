# Generated by Django 5.2.5 on 2025-08-30 18:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('transport', '0002_initial'),
        ('crm', '0001_initial'),
        ('payments', '0001_initial'),
        ('banking', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('tenant_id', models.UUIDField(blank=True, db_index=True, help_text='Tenant isolation field', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reference_number', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('origin_address', models.TextField(help_text='Starting point address')),
                ('destination_address', models.TextField(help_text='Final destination address')),
                ('origin_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('origin_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('destination_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('destination_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('estimated_distance', models.DecimalField(blank=True, decimal_places=2, help_text='Distance in miles', max_digits=10, null=True)),
                ('estimated_duration', models.DurationField(blank=True, help_text='Estimated travel time', null=True)),
                ('estimated_fuel_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Calculated fuel cost', max_digits=10, null=True)),
                ('cargo_description', models.TextField()),
                ('weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in pounds', max_digits=10, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=2, help_text='Volume in cubic feet', max_digits=10, null=True)),
                ('cargo_value', models.DecimalField(blank=True, decimal_places=2, help_text='Declared cargo value', max_digits=10, null=True)),
                ('agreed_rate', models.DecimalField(decimal_places=2, help_text='Agreed payment rate', max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('scheduled_pickup', models.DateTimeField(help_text='Scheduled pickup time')),
                ('scheduled_delivery', models.DateTimeField(help_text='Scheduled delivery time')),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_completion', models.DateTimeField(blank=True, null=True)),
                ('payment_status', models.CharField(choices=[('pending', 'Payment Pending'), ('paid', 'Paid'), ('partial', 'Partially Paid'), ('overdue', 'Overdue'), ('disputed', 'Disputed')], default='pending', max_length=50)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips_created', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transport_trips', to='crm.customer')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to='transport.driver')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to='transport.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='TripStop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stop_order', models.PositiveIntegerField(help_text='Order of this stop in the route')),
                ('address', models.TextField(help_text='Full address of the stop')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('google_place_id', models.CharField(blank=True, help_text='Google Places API place ID', max_length=255, null=True)),
                ('stop_type', models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery'), ('fuel', 'Fuel Stop'), ('rest', 'Rest Stop'), ('toll', 'Toll Payment'), ('inspection', 'Inspection Point'), ('customer_visit', 'Customer Visit'), ('warehouse', 'Warehouse Stop'), ('other', 'Other')], default='delivery', max_length=50)),
                ('estimated_arrival', models.DateTimeField()),
                ('actual_arrival', models.DateTimeField(blank=True, null=True)),
                ('estimated_departure', models.DateTimeField()),
                ('actual_departure', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('completion_timestamp', models.DateTimeField(blank=True, null=True)),
                ('proof_photo', models.ImageField(blank=True, null=True, upload_to='transport/proof/')),
                ('customer_signature', models.TextField(blank=True, help_text='Base64 encoded signature', null=True)),
                ('delivered_to_name', models.CharField(blank=True, max_length=255, null=True)),
                ('delivered_to_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('access_code', models.CharField(blank=True, help_text='Building/gate access code', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(blank=True, help_text='Customer associated with this stop', null=True, on_delete=django.db.models.deletion.SET_NULL, to='crm.customer')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='transport.trip')),
            ],
            options={
                'ordering': ['trip', 'stop_order'],
            },
        ),
        migrations.CreateModel(
            name='TripPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_method', models.CharField(choices=[('STRIPE', 'Credit/Debit Card'), ('M_PESA', 'M-Pesa'), ('MTN_MOMO', 'MTN Mobile Money'), ('FLUTTERWAVE', 'Flutterwave'), ('BANK_TRANSFER', 'Bank Transfer'), ('WISE', 'Wise Transfer'), ('CASH', 'Cash Payment'), ('OTHER', 'Other Method')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Amount after platform fees', max_digits=10)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('mpesa_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('wise_transfer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_phone', models.CharField(blank=True, help_text='For mobile money payments', max_length=20, null=True)),
                ('customer_email', models.EmailField(blank=True, help_text='For payment receipts', null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('settlement_status', models.CharField(choices=[('pending', 'Settlement Pending'), ('processing', 'Processing Settlement'), ('completed', 'Settlement Completed'), ('failed', 'Settlement Failed'), ('manual', 'Manual Settlement Required')], default='pending', max_length=50)),
                ('settlement_date', models.DateTimeField(blank=True, null=True)),
                ('settlement_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Payment Pending'), ('processing', 'Processing'), ('completed', 'Payment Completed'), ('failed', 'Payment Failed'), ('cancelled', 'Payment Cancelled'), ('refunded', 'Payment Refunded')], default='pending', max_length=50)),
                ('payment_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receipt_sent', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('driver_bank_account', models.ForeignKey(blank=True, help_text="Driver's bank account for settlement", null=True, on_delete=django.db.models.deletion.SET_NULL, to='banking.wiseitem')),
                ('payment_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentprovider')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='transport.trip')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='tripstop',
            constraint=models.UniqueConstraint(fields=('trip', 'stop_order'), name='unique_stop_order_per_trip'),
        ),
    ]
