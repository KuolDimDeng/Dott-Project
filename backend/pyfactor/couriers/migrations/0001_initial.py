# Generated by Django 5.0.6
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models, connection
import django.db.models.deletion
import uuid
from decimal import Decimal


def check_and_create_tables(apps, schema_editor):
    """Check if tables exist and create them if they don't"""
    with connection.cursor() as cursor:
        # Check if CourierCompany table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'couriers_couriercompany'
            );
        """)
        couriercompany_exists = cursor.fetchone()[0]
        
        # Check if CourierProfile table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'couriers_courierprofile'
            );
        """)
        courierprofile_exists = cursor.fetchone()[0]
        
        # Check if DeliveryOrder table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'couriers_deliveryorder'
            );
        """)
        deliveryorder_exists = cursor.fetchone()[0]
        
        # Check if CourierEarnings table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'couriers_courierearnings'
            );
        """)
        courierearnings_exists = cursor.fetchone()[0]
        
        # Check if CourierCompanyBranch table exists
        cursor.execute("""
            SELECT EXISTS (
                SELECT FROM information_schema.tables 
                WHERE table_name = 'couriers_couriercompanybranch'
            );
        """)
        couriercompanybranch_exists = cursor.fetchone()[0]
        
        if couriercompany_exists and courierprofile_exists and deliveryorder_exists and courierearnings_exists and couriercompanybranch_exists:
            print("✅ All courier tables already exist")
            return
        else:
            print("⚠️ Some courier tables are missing, will be created by migration")


def reverse_check(apps, schema_editor):
    """Reverse migration for the check function"""
    pass


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('custom_auth', '0001_initial'),
        ('users', '0001_initial'),
        ('transport', '0001_ensure_base_tables'),
    ]

    operations = [
        migrations.RunPython(check_and_create_tables, reverse_check),
        migrations.CreateModel(
            name='CourierCompany',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('legal_name', models.CharField(max_length=200)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True)),
                ('headquarters_address', models.TextField()),
                ('headquarters_city', models.CharField(max_length=100)),
                ('headquarters_country', models.CharField(max_length=2)),
                ('coverage_cities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, size=None)),
                ('coverage_countries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2), default=list, size=None)),
                ('fleet_size', models.IntegerField(default=0)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('insurance_provider', models.CharField(blank=True, max_length=100)),
                ('insurance_policy_number', models.CharField(blank=True, max_length=100)),
                ('insurance_expiry', models.DateField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('webhook_url', models.URLField(blank=True)),
                ('platform_commission_rate', models.DecimalField(decimal_places=2, default=Decimal('15.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('company_courier_commission', models.DecimalField(decimal_places=2, default=Decimal('70.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('suspended', 'Suspended'), ('terminated', 'Terminated')], default='pending', max_length=20)),
                ('is_exclusive', models.BooleanField(default=False)),
                ('priority_rank', models.IntegerField(default=100)),
                ('verified', models.BooleanField(default=False)),
                ('verification_documents', models.JSONField(default=dict)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('successful_deliveries', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('bank_account_number', models.CharField(blank=True, max_length=100)),
                ('bank_routing_number', models.CharField(blank=True, max_length=100)),
                ('payment_terms', models.IntegerField(default=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('supports_express_delivery', models.BooleanField(default=False)),
                ('supports_scheduled_delivery', models.BooleanField(default=True)),
                ('supports_cash_on_delivery', models.BooleanField(default=True)),
                ('supports_refrigerated', models.BooleanField(default=False)),
                ('supports_fragile', models.BooleanField(default=True)),
                ('max_package_weight_kg', models.DecimalField(decimal_places=2, default=Decimal('50.00'), max_digits=10)),
                ('max_package_dimension_cm', models.IntegerField(default=200)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_courier_companies', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courier_companies', to='custom_auth.tenant')),
            ],
            options={
                'verbose_name_plural': 'Courier Companies',
                'ordering': ['priority_rank', 'name'],
                'indexes': [
                    models.Index(fields=['status', 'priority_rank'], name='couriers_co_status_a6e4a5_idx'),
                    models.Index(fields=['headquarters_country', 'headquarters_city'], name='couriers_co_headqua_0e5b73_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='CourierCompanyBranch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('branch_name', models.CharField(max_length=100)),
                ('branch_code', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=2)),
                ('address', models.TextField()),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('manager_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('max_daily_deliveries', models.IntegerField(default=100)),
                ('current_active_couriers', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('operating_hours', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='couriers.couriercompany')),
            ],
            options={
                'ordering': ['company', 'city'],
                'unique_together': {('company', 'branch_code')},
            },
        ),
        migrations.CreateModel(
            name='CourierProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employment_type', models.CharField(choices=[('independent', 'Independent Courier'), ('company', 'Company Employee'), ('partner', 'Partner Driver')], default='independent', max_length=20)),
                ('company_employee_id', models.CharField(blank=True, max_length=50)),
                ('vehicle_type', models.CharField(choices=[('bicycle', 'Bicycle'), ('motorcycle', 'Motorcycle'), ('car', 'Car'), ('van', 'Van/Pickup'), ('truck', 'Truck'), ('scooter', 'E-Scooter')], max_length=20)),
                ('vehicle_make', models.CharField(blank=True, max_length=50)),
                ('vehicle_model', models.CharField(blank=True, max_length=50)),
                ('vehicle_year', models.IntegerField(blank=True, null=True)),
                ('vehicle_color', models.CharField(blank=True, max_length=30)),
                ('vehicle_registration', models.CharField(max_length=50, unique=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('license_expiry', models.DateField()),
                ('license_front_photo', models.TextField(help_text='Base64 encoded license front')),
                ('license_back_photo', models.TextField(help_text='Base64 encoded license back')),
                ('id_type', models.CharField(choices=[('national_id', 'National ID'), ('passport', 'Passport'), ('voter_id', 'Voter ID')], max_length=20)),
                ('id_number', models.CharField(max_length=50, unique=True)),
                ('id_front_photo', models.TextField(help_text='Base64 encoded ID front')),
                ('id_back_photo', models.TextField(blank=True, help_text='Base64 encoded ID back')),
                ('selfie_with_id', models.TextField(help_text='Base64 encoded selfie holding ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('service_radius_km', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('max_package_weight_kg', models.DecimalField(decimal_places=2, default=20.0, max_digits=5)),
                ('accepts_cash', models.BooleanField(default=True)),
                ('accepts_fragile', models.BooleanField(default=False)),
                ('accepts_food_delivery', models.BooleanField(default=True)),
                ('accepts_scheduled', models.BooleanField(default=True)),
                ('city', models.CharField(max_length=100)),
                ('area', models.CharField(blank=True, max_length=100)),
                ('preferred_areas', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('last_location_update', models.DateTimeField(blank=True, null=True)),
                ('availability_status', models.CharField(choices=[('online', 'Online - Available'), ('busy', 'Busy - On Delivery'), ('offline', 'Offline'), ('break', 'On Break')], default='offline', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('total_deliveries', models.IntegerField(default=0)),
                ('successful_deliveries', models.IntegerField(default=0)),
                ('failed_deliveries', models.IntegerField(default=0)),
                ('cancelled_deliveries', models.IntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3)),
                ('total_ratings', models.IntegerField(default=0)),
                ('on_time_percentage', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=5)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('unpaid_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=Decimal('75.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('trust_level', models.IntegerField(choices=[(1, 'New'), (2, 'Regular'), (3, 'Trusted'), (4, 'Premium'), (5, 'Elite')], default=1)),
                ('trust_score', models.IntegerField(default=0)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('deactivated_at', models.DateTimeField(blank=True, null=True)),
                ('deactivation_reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('business', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courier_business_profile', to='users.business')),
                ('company_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='couriers', to='couriers.couriercompanybranch')),
                ('courier_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='couriers', to='couriers.couriercompany')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courier_profiles', to='custom_auth.tenant')),
                ('transport_driver', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courier_profile', to='transport.driver')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='courier_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='couriers_verified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-average_rating', '-total_deliveries'],
                'indexes': [
                    models.Index(fields=['availability_status', 'city'], name='couriers_co_availab_8c9e4f_idx'),
                    models.Index(fields=['is_verified', 'is_active'], name='couriers_co_is_veri_c8b9f3_idx'),
                    models.Index(fields=['current_latitude', 'current_longitude'], name='couriers_co_current_d9a2e1_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='CourierEarnings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('delivery_id', models.UUIDField()),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('delivery_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('platform_commission', models.DecimalField(decimal_places=2, max_digits=10)),
                ('company_commission', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('courier_earning', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tips', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('bonus', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('net_earning', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('processing', 'Processing'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('payment_method', models.CharField(blank=True, choices=[('mpesa', 'M-Pesa'), ('bank', 'Bank Transfer'), ('cash', 'Cash Pickup')], max_length=20)),
                ('payment_reference', models.CharField(blank=True, max_length=100)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('week_number', models.IntegerField()),
                ('month', models.IntegerField()),
                ('year', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('courier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='couriers.courierprofile')),
                ('paid_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courier_payments_made', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courier_earnings', to='custom_auth.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [
                    models.Index(fields=['courier', 'payment_status'], name='couriers_co_courier_f3d9c1_idx'),
                    models.Index(fields=['year', 'month', 'week_number'], name='couriers_co_year_b8e2f0_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='DeliveryOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consumer_order_id', models.UUIDField(blank=True, null=True)),
                ('pickup_address', models.TextField()),
                ('pickup_latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('pickup_longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('pickup_contact_name', models.CharField(max_length=100)),
                ('pickup_contact_phone', models.CharField(max_length=20)),
                ('delivery_address', models.TextField()),
                ('delivery_latitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('delivery_longitude', models.DecimalField(decimal_places=7, max_digits=10)),
                ('delivery_contact_name', models.CharField(max_length=100)),
                ('delivery_contact_phone', models.CharField(max_length=20)),
                ('package_description', models.TextField()),
                ('package_weight_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('package_dimensions', models.CharField(blank=True, max_length=50)),
                ('is_fragile', models.BooleanField(default=False)),
                ('requires_signature', models.BooleanField(default=False)),
                ('delivery_instructions', models.TextField(blank=True)),
                ('estimated_distance_km', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_duration_minutes', models.IntegerField()),
                ('delivery_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('express', 'Express'), ('scheduled', 'Scheduled')], default='normal', max_length=20)),
                ('scheduled_pickup_time', models.DateTimeField(blank=True, null=True)),
                ('scheduled_delivery_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Assignment'), ('assigned', 'Courier Assigned'), ('accepted', 'Accepted by Courier'), ('en_route_pickup', 'En Route to Pickup'), ('arrived_pickup', 'Arrived at Pickup'), ('picked_up', 'Package Picked Up'), ('en_route_delivery', 'En Route to Delivery'), ('arrived_delivery', 'Arrived at Delivery'), ('delivered', 'Delivered'), ('failed', 'Delivery Failed'), ('cancelled', 'Cancelled'), ('returned', 'Returned to Sender')], default='pending', max_length=30)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('picked_up_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('delivery_proof', models.TextField(blank=True, help_text='Base64 encoded delivery photo')),
                ('recipient_signature', models.TextField(blank=True, help_text='Base64 encoded signature')),
                ('delivery_notes', models.TextField(blank=True)),
                ('customer_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('customer_review', models.TextField(blank=True)),
                ('courier_rating', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('courier_feedback', models.TextField(blank=True)),
                ('tracking_number', models.CharField(max_length=50, unique=True)),
                ('qr_code', models.TextField(blank=True, help_text='QR code for tracking')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_orders', to='users.business')),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_deliveries', to=settings.AUTH_USER_MODEL)),
                ('courier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delivery_orders', to='couriers.courierprofile')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_delivery_orders', to=settings.AUTH_USER_MODEL)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_orders', to='custom_auth.tenant')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [
                    models.Index(fields=['status', 'priority'], name='couriers_de_status_1a9f8e_idx'),
                    models.Index(fields=['courier', 'status'], name='couriers_de_courier_2b8d7f_idx'),
                    models.Index(fields=['tracking_number'], name='couriers_de_trackin_3c7e6d_idx'),
                ],
            },
        ),
    ]