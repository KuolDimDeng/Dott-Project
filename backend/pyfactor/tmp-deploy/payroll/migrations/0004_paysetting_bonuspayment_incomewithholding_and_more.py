# Generated by Django 5.1.7 on 2025-04-28 16:48

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0011_benefits'),
        ('payroll', '0003_remove_timesheet_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaySetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('pay_frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('BIWEEKLY', 'Bi-Weekly'), ('SEMIMONTHLY', 'Semi-Monthly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], default='BIWEEKLY', max_length=12)),
                ('pay_days', models.JSONField(blank=True, default=list, help_text='Days of month for payment (for Semi-Monthly)', null=True)),
                ('pay_weekday', models.IntegerField(blank=True, help_text='0=Monday, 6=Sunday', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('enable_direct_deposit', models.BooleanField(default=True)),
                ('enable_bonuses', models.BooleanField(default=True)),
                ('enable_commissions', models.BooleanField(default=False)),
                ('enable_recurring_allowances', models.BooleanField(default=False)),
                ('enable_overtime', models.BooleanField(default=True)),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=Decimal('1.5'), max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('1.0'))])),
                ('processing_lead_time', models.IntegerField(default=3)),
                ('notify_employees_on_payday', models.BooleanField(default=True)),
                ('notify_payroll_admins_before_processing', models.BooleanField(default=True)),
                ('admin_notification_days', models.IntegerField(default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pay Setting',
                'verbose_name_plural': 'Pay Settings',
            },
        ),
        migrations.CreateModel(
            name='BonusPayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('bonus_type', models.CharField(choices=[('PERFORMANCE', 'Performance Bonus'), ('HOLIDAY', 'Holiday Bonus'), ('SIGNING', 'Signing Bonus'), ('RETENTION', 'Retention Bonus'), ('REFERRAL', 'Referral Bonus'), ('SPOT', 'Spot Bonus'), ('OTHER', 'Other Bonus')], max_length=15)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_by', models.UUIDField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bonuses', to='hr.employee')),
                ('payroll_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bonus_payments', to='payroll.payrolltransaction')),
            ],
            options={
                'verbose_name': 'Bonus Payment',
                'verbose_name_plural': 'Bonus Payments',
            },
        ),
        migrations.CreateModel(
            name='IncomeWithholding',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('tax_year', models.IntegerField()),
                ('filing_status', models.CharField(choices=[('S', 'Single or Married filing separately'), ('M', 'Married filing jointly'), ('H', 'Head of household')], default='S', max_length=2)),
                ('multiple_jobs', models.BooleanField(default=False, help_text='Multiple Jobs or Spouse Works (Step 2)')),
                ('claim_dependents', models.BooleanField(default=False)),
                ('dependent_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Claim Dependents Amount (Step 3)', max_digits=10)),
                ('other_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Other Income (Step 4a)', max_digits=10)),
                ('deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Deductions (Step 4b)', max_digits=10)),
                ('extra_withholding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Extra Withholding (Step 4c)', max_digits=10)),
                ('state_code', models.CharField(blank=True, max_length=2, null=True)),
                ('state_allowances', models.IntegerField(default=0)),
                ('state_additional_withholding', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_electronically_signed', models.BooleanField(default=False)),
                ('signature_date', models.DateField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address used for e-signature', null=True)),
                ('w4_form_file', models.FileField(blank=True, null=True, upload_to='withholding_forms/')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('last_updated_by', models.UUIDField(blank=True, null=True)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='income_withholding', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Income Withholding',
                'verbose_name_plural': 'Income Withholdings',
            },
        ),
        migrations.CreateModel(
            name='PaymentDepositMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('method_type', models.CharField(choices=[('DIRECT_DEPOSIT', 'Direct Deposit (Bank)'), ('PAYPAL', 'PayPal'), ('VENMO', 'Venmo'), ('CASHAPP', 'Cash App'), ('CHECK', 'Physical Check'), ('CRYPTO', 'Cryptocurrency'), ('MOBILE_MONEY', 'Mobile Money'), ('OTHER', 'Other')], default='DIRECT_DEPOSIT', max_length=20)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('routing_number_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('account_type', models.CharField(blank=True, choices=[('CHECKING', 'Checking'), ('SAVINGS', 'Savings')], max_length=10, null=True)),
                ('email', models.EmailField(blank=True, help_text='Email for PayPal, Venmo, etc.', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='Phone for mobile money services', max_length=20, null=True)),
                ('username', models.CharField(blank=True, help_text='Username for services like Cash App', max_length=100, null=True)),
                ('wallet_address', models.CharField(blank=True, max_length=100, null=True)),
                ('crypto_currency', models.CharField(blank=True, max_length=10, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_provider_id', models.CharField(blank=True, max_length=100, null=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_methods', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Payment Deposit Method',
                'verbose_name_plural': 'Payment Deposit Methods',
            },
        ),
        migrations.CreateModel(
            name='PayStatement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('statement_type', models.CharField(choices=[('REGULAR', 'Regular Payroll'), ('BONUS', 'Bonus Payment'), ('CORRECTION', 'Correction/Adjustment'), ('TERMINATION', 'Termination Pay'), ('OTHER', 'Other Payment')], default='REGULAR', max_length=15)),
                ('pay_period_start', models.DateField()),
                ('pay_period_end', models.DateField()),
                ('pay_date', models.DateField()),
                ('gross_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_pay', models.DecimalField(decimal_places=2, max_digits=10)),
                ('regular_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('overtime_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('pto_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('sick_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('holiday_hours', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=6)),
                ('federal_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('state_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('local_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('medicare', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('social_security', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('health_insurance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('dental_insurance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('vision_insurance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('retirement_401k', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('ytd_gross', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('ytd_net', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('ytd_federal_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('ytd_state_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('ytd_medicare', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('ytd_social_security', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('additional_info', models.JSONField(blank=True, default=dict, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='pay_statements/%Y/%m/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pay_statements', to='hr.employee')),
                ('payroll_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pay_statement', to='payroll.payrolltransaction')),
            ],
            options={
                'verbose_name': 'Pay Statement',
                'verbose_name_plural': 'Pay Statements',
                'ordering': ['-pay_date'],
            },
        ),
    ]
