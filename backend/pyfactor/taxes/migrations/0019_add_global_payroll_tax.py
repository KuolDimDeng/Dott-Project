# Generated by Django 4.2.15 on 2025-08-03

from django.db import migrations, models
import django.core.validators
import django_countries.fields
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('taxes', '0018_add_tax_validation_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalPayrollTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(db_index=True, max_length=2)),
                ('country_name', models.CharField(max_length=100)),
                ('region_code', models.CharField(blank=True, db_index=True, max_length=10)),
                ('region_name', models.CharField(blank=True, max_length=100)),
                ('employee_social_security_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employee social security/pension rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employee_medicare_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employee healthcare/medicare rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employee_unemployment_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employee unemployment insurance rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employee_other_rate', models.DecimalField(decimal_places=4, default=0, help_text='Other employee taxes rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employer_social_security_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employer social security/pension rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employer_medicare_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employer healthcare/medicare rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employer_unemployment_rate', models.DecimalField(decimal_places=4, default=0, help_text='Employer unemployment insurance rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('employer_other_rate', models.DecimalField(decimal_places=4, default=0, help_text='Other employer taxes rate as decimal', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('social_security_wage_cap', models.DecimalField(blank=True, decimal_places=2, help_text='Annual wage cap for social security tax', max_digits=12, null=True)),
                ('medicare_additional_threshold', models.DecimalField(blank=True, decimal_places=2, help_text='Threshold for additional medicare tax', max_digits=12, null=True)),
                ('medicare_additional_rate', models.DecimalField(decimal_places=4, default=0, help_text='Additional medicare tax rate above threshold', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('tax_authority_name', models.CharField(blank=True, help_text='Name of the payroll tax authority', max_length=200)),
                ('filing_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('semi_monthly', 'Semi-Monthly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], default='monthly', help_text='How often payroll taxes must be filed', max_length=20)),
                ('deposit_schedule', models.CharField(choices=[('same_day', 'Same Day'), ('next_day', 'Next Business Day'), ('semi_weekly', 'Semi-Weekly'), ('monthly', 'Monthly')], default='monthly', help_text='When payroll tax deposits are due', max_length=20)),
                ('filing_day_of_month', models.IntegerField(blank=True, help_text='Day of month when filing is due', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('quarter_end_filing_days', models.IntegerField(default=30, help_text='Days after quarter end to file quarterly returns')),
                ('year_end_filing_days', models.IntegerField(default=31, help_text='Days after year end to file annual returns')),
                ('online_filing_available', models.BooleanField(default=False, help_text='Whether online filing is available')),
                ('online_portal_name', models.CharField(blank=True, help_text='Name of online filing portal', max_length=100)),
                ('online_portal_url', models.URLField(blank=True, help_text='URL of online filing portal', max_length=500)),
                ('employee_tax_form', models.CharField(blank=True, help_text='Main employee withholding form (e.g., W-4, TD1)', max_length=50)),
                ('employer_return_form', models.CharField(blank=True, help_text='Main employer return form (e.g., 941, T4)', max_length=50)),
                ('year_end_employee_form', models.CharField(blank=True, help_text='Year-end employee form (e.g., W-2, T4)', max_length=50)),
                ('has_state_taxes', models.BooleanField(default=False, help_text='Whether states/provinces have additional payroll taxes')),
                ('has_local_taxes', models.BooleanField(default=False, help_text='Whether cities/localities have payroll taxes')),
                ('requires_registration', models.BooleanField(default=True, help_text='Whether employer registration is required')),
                ('registration_info', models.TextField(blank=True, help_text='Information about employer registration process')),
                ('ai_populated', models.BooleanField(default=True)),
                ('ai_confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI confidence in this data (0-1)', max_digits=3, null=True)),
                ('ai_source_notes', models.TextField(blank=True, help_text='Where AI found this information')),
                ('ai_last_verified', models.DateTimeField(default=django.utils.timezone.now)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(db_index=True, default=True)),
                ('manually_verified', models.BooleanField(default=False)),
                ('manual_notes', models.TextField(blank=True)),
                ('manual_filing_fee', models.DecimalField(decimal_places=2, default=65.0, help_text='Fee for self-service filing (USD)', max_digits=6)),
                ('assisted_filing_fee', models.DecimalField(decimal_places=2, default=125.0, help_text='Fee for full-service filing (USD)', max_digits=6)),
                ('filing_instructions', models.TextField(blank=True, help_text='Basic instructions for payroll tax filing')),
                ('common_mistakes', models.JSONField(blank=True, default=list, help_text='Common filing mistakes to avoid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Global Payroll Tax',
                'verbose_name_plural': 'Global Payroll Taxes',
                'ordering': ['country', 'region_code', '-effective_date'],
            },
        ),
        migrations.AddIndex(
            model_name='globalpayrolltax',
            index=models.Index(fields=['country', 'is_current'], name='taxes_globa_country_8e5d91_idx'),
        ),
        migrations.AddIndex(
            model_name='globalpayrolltax',
            index=models.Index(fields=['country', 'region_code', 'is_current'], name='taxes_globa_country_e1e0f9_idx'),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='payroll_tax_enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employee_social_security_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employee social security rate (leave blank to use global)', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employee_medicare_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employee medicare rate', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employee_unemployment_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employee unemployment rate', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employer_social_security_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employer social security rate', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employer_medicare_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employer medicare rate', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='override_employer_unemployment_rate',
            field=models.DecimalField(blank=True, decimal_places=4, help_text='Override employer unemployment rate', max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='payroll_tax_registration_number',
            field=models.CharField(blank=True, help_text='Employer tax ID/registration number', max_length=100),
        ),
        migrations.AddField(
            model_name='tenanttaxsettings',
            name='payroll_filing_frequency',
            field=models.CharField(blank=True, choices=[('', 'Use Default'), ('weekly', 'Weekly'), ('bi_weekly', 'Bi-Weekly'), ('semi_monthly', 'Semi-Monthly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], default='', help_text='Override filing frequency (leave blank to use default)', max_length=20),
        ),
    ]