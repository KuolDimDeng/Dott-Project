# Generated by Django 4.2.16 on 2025-06-29 05:28

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('taxes', '0004_taxdataentrycontrol_taxdataabusereport_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TaxSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.UUIDField(db_index=True, help_text='The tenant ID this record belongs to. Used by Row Level Security.', null=True)),
                ('business_name', models.CharField(max_length=255)),
                ('business_type', models.CharField(choices=[('retail', 'Retail'), ('service', 'Service'), ('manufacturing', 'Manufacturing'), ('consulting', 'Consulting'), ('restaurant', 'Restaurant'), ('ecommerce', 'E-commerce'), ('other', 'Other')], default='retail', max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('state_province', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('sales_tax_rate', models.DecimalField(decimal_places=2, default=0, help_text='Sales tax rate as a percentage (e.g., 8.75)', max_digits=5)),
                ('income_tax_rate', models.DecimalField(decimal_places=2, default=0, help_text='Income/corporate tax rate as a percentage', max_digits=5)),
                ('payroll_tax_rate', models.DecimalField(decimal_places=2, default=0, help_text='Combined employer payroll tax rate as a percentage', max_digits=5)),
                ('filing_website', models.URLField(blank=True, max_length=500)),
                ('filing_address', models.TextField(blank=True)),
                ('filing_deadlines', models.TextField(blank=True)),
                ('ai_suggested', models.BooleanField(default=False, help_text='Whether these rates were suggested by AI')),
                ('ai_confidence_score', models.IntegerField(blank=True, help_text='AI confidence score (0-100) for the suggestions', null=True)),
                ('approved_by_name', models.CharField(blank=True, help_text='Digital signature - full name of approver', max_length=255)),
                ('approved_by_signature', models.CharField(blank=True, help_text='Digital signature text', max_length=255)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approval_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('confirmation_email_sent', models.BooleanField(default=False)),
                ('confirmation_email_sent_at', models.DateTimeField(blank=True, null=True)),
                ('confirmation_email_sent_to', models.EmailField(blank=True, max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tax Settings',
                'verbose_name_plural': 'Tax Settings',
                'db_table': 'tax_settings',
            },
        ),
        migrations.CreateModel(
            name='TaxRateCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(db_index=True, max_length=100)),
                ('state_province', models.CharField(db_index=True, max_length=100)),
                ('city', models.CharField(db_index=True, max_length=100)),
                ('business_type', models.CharField(db_index=True, max_length=50)),
                ('sales_tax_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('income_tax_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('payroll_tax_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('filing_website', models.URLField(blank=True, max_length=500)),
                ('filing_address', models.TextField(blank=True)),
                ('filing_deadlines', models.TextField(blank=True)),
                ('confidence_score', models.IntegerField(default=0)),
                ('source', models.CharField(choices=[('claude_api', 'Claude AI API'), ('manual', 'Manual Entry'), ('verified', 'Verified by Admin')], default='claude_api', max_length=50)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('hit_count', models.IntegerField(default=0)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tax Rate Cache',
                'verbose_name_plural': 'Tax Rate Cache',
                'db_table': 'tax_rate_cache',
                'indexes': [models.Index(fields=['expires_at'], name='tax_rate_ca_expires_0a7f04_idx'), models.Index(fields=['last_accessed'], name='tax_rate_ca_last_ac_f413ff_idx')],
                'unique_together': {('country', 'state_province', 'city', 'business_type')},
            },
        ),
        migrations.CreateModel(
            name='TaxApiUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tenant_id', models.UUIDField(db_index=True, help_text='The tenant ID this record belongs to. Used by Row Level Security.', null=True)),
                ('month_year', models.CharField(db_index=True, help_text='Format: YYYY-MM', max_length=7)),
                ('api_calls_count', models.IntegerField(default=0)),
                ('cache_hits_count', models.IntegerField(default=0)),
                ('monthly_limit', models.IntegerField(default=5)),
                ('plan_type', models.CharField(choices=[('free', 'Free'), ('basic', 'Basic'), ('premium', 'Premium')], default='free', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tax API Usage',
                'verbose_name_plural': 'Tax API Usage',
                'db_table': 'tax_api_usage',
                'unique_together': {('tenant_id', 'month_year')},
            },
        ),
    ]
