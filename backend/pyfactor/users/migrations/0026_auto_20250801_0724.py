# Generated by Django 4.2.16 on 2025-08-01 07:24

from django.db import migrations, models


def add_currency_fields_safe(apps, schema_editor):
    """Safely add currency fields only if they don't exist"""
    from django.db import connection
    
    cursor = connection.cursor()
    table_name = 'users_business_details'
    
    # Check which columns already exist
    cursor.execute("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_name = %s AND column_name IN (
            'preferred_currency_code', 'preferred_currency_name', 'currency_updated_at',
            'show_usd_on_invoices', 'show_usd_on_quotes', 'show_usd_on_reports'
        )
    """, [table_name])
    
    existing_columns = [row[0] for row in cursor.fetchall()]
    
    # Add columns that don't exist
    columns_to_add = {
        'preferred_currency_code': "VARCHAR(3) DEFAULT 'USD'",
        'preferred_currency_name': "VARCHAR(50) DEFAULT 'US Dollar'",
        'currency_updated_at': "TIMESTAMP NULL",
        'show_usd_on_invoices': "BOOLEAN DEFAULT TRUE",
        'show_usd_on_quotes': "BOOLEAN DEFAULT TRUE", 
        'show_usd_on_reports': "BOOLEAN DEFAULT FALSE"
    }
    
    for column_name, column_def in columns_to_add.items():
        if column_name not in existing_columns:
            cursor.execute(f"ALTER TABLE {table_name} ADD COLUMN {column_name} {column_def}")
            print(f"Added column: {column_name}")
        else:
            print(f"Column already exists: {column_name}")


def reverse_add_currency_fields_safe(apps, schema_editor):
    """Remove currency fields if they exist"""
    from django.db import connection
    
    cursor = connection.cursor()
    table_name = 'users_business_details'
    
    columns_to_remove = [
        'preferred_currency_code', 'preferred_currency_name', 'currency_updated_at',
        'show_usd_on_invoices', 'show_usd_on_quotes', 'show_usd_on_reports'
    ]
    
    for column_name in columns_to_remove:
        try:
            cursor.execute(f"ALTER TABLE {table_name} DROP COLUMN IF EXISTS {column_name}")
        except Exception as e:
            print(f"Error removing column {column_name}: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0025_add_inventory_valuation_method'),
    ]

    operations = [
        migrations.RunPython(add_currency_fields_safe, reverse_add_currency_fields_safe),
    ]