# Generated by Django 5.1.7 on 2025-04-05 14:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import hr.models
import phonenumber_field.modelfields
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0013_initial_structure'),
    ]

    operations = [
        migrations.CreateModel(
            name='PreboardingForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_number', models.CharField(editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(default=hr.models.get_current_datetime)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], max_length=1, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married'), ('D', 'Divorced'), ('W', 'Widowed')], max_length=1, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('postcode', models.CharField(blank=True, max_length=20, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('date_joined', models.DateField(default=hr.models.get_current_datetime)),
                ('last_work_date', models.DateField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('EMPLOYEE', 'Employee')], default='EMPLOYEE', max_length=20)),
                ('site_access_privileges', models.JSONField(default=list)),
                ('email', models.EmailField(default='', max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('skills', models.TextField(blank=True, null=True)),
                ('documents', models.FileField(blank=True, null=True, upload_to='employee_documents/')),
                ('wage_per_hour', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('hours_per_day', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('24'))])),
                ('overtime_rate', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('days_per_week', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('employment_type', models.CharField(choices=[('FT', 'Full-time'), ('PT', 'Part-time')], default='FT', max_length=2)),
                ('onboarded', models.BooleanField(default=False)),
                ('security_number_type', models.CharField(choices=[('SSN', 'Social Security Number (US)'), ('NIN', 'National Insurance Number (UK)'), ('SIN', 'Social Insurance Number (Canada)'), ('TFN', 'Tax File Number (Australia)'), ('NRIC', 'National Registration Identity Card (Singapore)'), ('AADHAAR', 'Aadhaar Number (India)'), ('CPF', 'CPF Number (Brazil)'), ('CURP', 'CURP (Mexico)'), ('DNI', 'DNI Number (Spain, Argentina, Peru)'), ('HKID', 'Hong Kong Identity Card'), ('NINO', 'National Identity Number (Sweden)'), ('BSN', 'Citizen Service Number (Netherlands)'), ('PESEL', 'PESEL Number (Poland)'), ('RUT', 'RUT Number (Chile)'), ('CNIC', 'CNIC Number (Pakistan)'), ('GSTIN', 'GSTIN Number (India for businesses)'), ('MYKAD', 'MyKad Number (Malaysia)'), ('KTP', 'KTP Number (Indonesia)'), ('PAN', 'PAN Card Number (India)'), ('NIF', 'NIF Number (Portugal)'), ('STCN', 'Social Tag Card Number (China)'), ('IRD', 'IRD Number (New Zealand)'), ('PPS', 'PPS Number (Ireland)'), ('NPWP', 'NPWP Number (Indonesia for tax)'), ('CUIT', 'CUIT Number (Argentina)'), ('IQAMA', 'Iqama Number (Saudi Arabia)'), ('EKTP', 'eKTP Number (Indonesia)'), ('NIS', 'NIS Number (Brazil)'), ('KITAS', 'KITAS Number (Indonesia for foreigners)'), ('OTHER', 'Other National ID')], default='SSN', max_length=10)),
                ('stripe_person_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ssn_stored_in_stripe', models.BooleanField(default=False)),
                ('bank_account_stored_in_stripe', models.BooleanField(default=False)),
                ('tax_id_stored_in_stripe', models.BooleanField(default=False)),
                ('payment_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('mpesa_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('paypal_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile_wallet_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_wallet_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ssn_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('bank_account_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('tax_filing_status', models.CharField(blank=True, choices=[('S', 'Single'), ('M', 'Married Filing Jointly'), ('S', 'Married Filing Separately'), ('H', 'Head of Household')], max_length=1, null=True)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('probation', models.BooleanField(default=True)),
                ('probation_end_date', models.DateField(blank=True, null=True)),
                ('health_insurance_enrollment', models.BooleanField(default=False)),
                ('pension_enrollment', models.BooleanField(default=False)),
                ('termination_date', models.DateField(blank=True, null=True)),
                ('reason_for_leaving', models.TextField(blank=True, null=True)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('password_setup_token', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='employee_set', related_query_name='employee', to='auth.group', verbose_name='groups')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subordinates', to='hr.employee')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='employee_set', related_query_name='employee', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.role')),
            ],
        ),
        migrations.CreateModel(
            name='AccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=100)),
                ('can_view', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.role')),
            ],
        ),
    ]
