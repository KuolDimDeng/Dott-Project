# Generated by Django 5.1.7 on 2025-04-28 01:44

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0009_merge_20250427_1301'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceSetting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('review_frequency', models.CharField(choices=[('ANNUAL', 'Annual'), ('SEMI_ANNUAL', 'Semi-Annual'), ('QUARTERLY', 'Quarterly'), ('MONTHLY', 'Monthly')], default='ANNUAL', max_length=15)),
                ('goal_frequency', models.CharField(choices=[('ANNUAL', 'Annual'), ('SEMI_ANNUAL', 'Semi-Annual'), ('QUARTERLY', 'Quarterly'), ('MONTHLY', 'Monthly')], default='ANNUAL', max_length=15)),
                ('require_self_assessment', models.BooleanField(default=True)),
                ('require_peer_feedback', models.BooleanField(default=False)),
                ('require_manager_approval', models.BooleanField(default=True)),
                ('use_custom_rating_scale', models.BooleanField(default=False)),
                ('custom_rating_definitions', models.JSONField(blank=True, default=dict)),
                ('managers_can_view_all_reviews', models.BooleanField(default=False)),
                ('employees_can_view_team_metrics', models.BooleanField(default=False)),
                ('send_review_reminders', models.BooleanField(default=True)),
                ('days_before_reminder', models.PositiveIntegerField(default=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Performance Setting',
                'verbose_name_plural': 'Performance Settings',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('applicable_departments', models.JSONField(blank=True, default=list)),
                ('applicable_roles', models.JSONField(blank=True, default=list)),
                ('weight', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Performance Metric',
                'verbose_name_plural': 'Performance Metrics',
                'unique_together': {('business_id', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PerformanceReview',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('review_number', models.CharField(editable=False, max_length=20, null=True, unique=True)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('review_type', models.CharField(choices=[('ANNUAL', 'Annual Review'), ('SEMI_ANNUAL', 'Semi-Annual Review'), ('QUARTERLY', 'Quarterly Review'), ('PROBATION', 'Probation Review'), ('PROJECT', 'Project-based Review'), ('PEER', 'Peer Review'), ('SELF', 'Self Review')], default='ANNUAL', max_length=15)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('IN_PROGRESS', 'In Progress'), ('PENDING_APPROVAL', 'Pending Approval'), ('COMPLETED', 'Completed')], default='DRAFT', max_length=16)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('review_date', models.DateField()),
                ('overall_rating', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Unsatisfactory'), (2, 'Needs Improvement'), (3, 'Meets Expectations'), (4, 'Exceeds Expectations'), (5, 'Outstanding')], null=True)),
                ('strengths', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('goals_achieved', models.TextField(blank=True, null=True)),
                ('general_comments', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('employee_feedback', models.TextField(blank=True, null=True)),
                ('employee_acknowledgement', models.BooleanField(default=False)),
                ('employee_acknowledgement_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reviews', to='hr.employee')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='hr.employee')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_conducted', to='hr.employee')),
            ],
            options={
                'verbose_name': 'Performance Review',
                'verbose_name_plural': 'Performance Reviews',
            },
        ),
        migrations.CreateModel(
            name='PerformanceGoal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('PERFORMANCE', 'Performance'), ('DEVELOPMENT', 'Development'), ('BEHAVIORAL', 'Behavioral'), ('STRATEGIC', 'Strategic'), ('PROJECT', 'Project')], max_length=15)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('start_date', models.DateField()),
                ('target_date', models.DateField()),
                ('success_criteria', models.TextField()),
                ('status', models.CharField(choices=[('NOT_STARTED', 'Not Started'), ('IN_PROGRESS', 'In Progress'), ('DEFERRED', 'Deferred'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='NOT_STARTED', max_length=15)),
                ('progress', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_goals', to='hr.employee')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_goals', to='hr.employee')),
                ('related_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_goals', to='hr.performancereview')),
            ],
            options={
                'verbose_name': 'Performance Goal',
                'verbose_name_plural': 'Performance Goals',
            },
        ),
        migrations.CreateModel(
            name='FeedbackRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('business_id', models.UUIDField(blank=True, null=True)),
                ('feedback_type', models.CharField(choices=[('POSITIVE', 'Positive'), ('CONSTRUCTIVE', 'Constructive'), ('COACHING', 'Coaching'), ('RECOGNITION', 'Recognition')], max_length=15)),
                ('content', models.TextField()),
                ('context', models.TextField(blank=True, null=True)),
                ('related_project', models.CharField(blank=True, max_length=200, null=True)),
                ('is_shared', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_received', to='hr.employee')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_given', to='hr.employee')),
                ('related_review', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_feedback', to='hr.performancereview')),
            ],
            options={
                'verbose_name': 'Feedback Record',
                'verbose_name_plural': 'Feedback Records',
            },
        ),
        migrations.CreateModel(
            name='PerformanceRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comments', models.TextField(blank=True, null=True)),
                ('examples', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.performancemetric')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='hr.performancereview')),
            ],
            options={
                'verbose_name': 'Performance Rating',
                'verbose_name_plural': 'Performance Ratings',
                'unique_together': {('review', 'metric')},
            },
        ),
    ]
