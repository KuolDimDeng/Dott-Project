import os
import psycopg2
from django.conf import settings

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'pyfactor.settings')
import django
django.setup()

# Get database settings
db_settings = settings.DATABASES['default']

# Connect to the database
conn = psycopg2.connect(
    host=db_settings['HOST'],
    port=db_settings['PORT'],
    dbname=db_settings['NAME'],
    user=db_settings['USER'],
    password=db_settings['PASSWORD'],
    sslmode='require'
)

cursor = conn.cursor()

# Create PayrollRun table if it doesn't exist
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_payrollrun" (
        "id" uuid NOT NULL PRIMARY KEY,
        "payroll_number" varchar(20) NOT NULL UNIQUE,
        "start_date" date NOT NULL,
        "end_date" date NOT NULL,
        "pay_date" date NOT NULL,
        "run_date" date NOT NULL,
        "accounting_period" varchar(7) NULL,
        "bank_account_id" uuid NULL,
        "filing_frequency" varchar(20) NULL,
        "total_amount" numeric(10, 2) NOT NULL,
        "status" varchar(20) NOT NULL,
        "country_code" varchar(2) NOT NULL,
        "is_international" boolean NOT NULL,
        "service_type" varchar(10) NOT NULL,
        "filing_instructions" text NULL,
        "tax_authority_links" jsonb NULL,
        "created_at" timestamp with time zone NOT NULL,
        "updated_at" timestamp with time zone NOT NULL,
        "tax_filings_created" boolean NOT NULL,
        "tax_filings_status" varchar(20) NOT NULL,
        "currency_code" varchar(3) NOT NULL,
        "currency_symbol" varchar(5) NOT NULL,
        "exchange_rate_to_usd" numeric(10, 6) NOT NULL,
        "show_usd_comparison" boolean NOT NULL,
        "tenant_id" uuid NULL
    );
""")

# Create other payroll tables
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_payrolltransaction" (
        "id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        "gross_pay" numeric(10, 2) NOT NULL,
        "net_pay" numeric(10, 2) NOT NULL,
        "taxes" numeric(10, 2) NOT NULL,
        "federal_tax" numeric(10, 2) NOT NULL,
        "state_tax" numeric(10, 2) NOT NULL,
        "state_code" varchar(2) NULL,
        "medicare_tax" numeric(10, 2) NOT NULL,
        "social_security_tax" numeric(10, 2) NOT NULL,
        "additional_withholdings" numeric(10, 2) NOT NULL,
        "employee_id" uuid NOT NULL,
        "payroll_run_id" uuid NOT NULL,
        "timesheet_id" uuid NULL,
        "tenant_id" uuid NULL
    );
""")

cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_taxform" (
        "id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        "form_type" varchar(20) NOT NULL,
        "tax_year" integer NOT NULL,
        "file" varchar(100) NOT NULL,
        "employee_id" uuid NOT NULL,
        "tenant_id" uuid NULL
    );
""")

# Create PaySetting table
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_paysetting" (
        "id" uuid NOT NULL PRIMARY KEY,
        "business_id" uuid NULL,
        "pay_frequency" varchar(12) NOT NULL,
        "pay_days" jsonb NULL,
        "pay_weekday" integer NULL,
        "enable_direct_deposit" boolean NOT NULL,
        "enable_bonuses" boolean NOT NULL,
        "enable_commissions" boolean NOT NULL,
        "enable_recurring_allowances" boolean NOT NULL,
        "enable_overtime" boolean NOT NULL,
        "overtime_rate" numeric(4, 2) NOT NULL,
        "processing_lead_time" integer NOT NULL,
        "notify_employees_on_payday" boolean NOT NULL,
        "notify_payroll_admins_before_processing" boolean NOT NULL,
        "admin_notification_days" integer NOT NULL,
        "created_at" timestamp with time zone NOT NULL,
        "updated_at" timestamp with time zone NOT NULL,
        "tenant_id" uuid NULL
    );
""")

# Create BonusPayment table
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_bonuspayment" (
        "id" uuid NOT NULL PRIMARY KEY,
        "employee_id" uuid NOT NULL,
        "business_id" uuid NULL,
        "bonus_type" varchar(15) NOT NULL,
        "amount" numeric(10, 2) NOT NULL,
        "description" text NULL,
        "is_approved" boolean NOT NULL,
        "approved_by" uuid NULL,
        "approved_at" timestamp with time zone NULL,
        "is_paid" boolean NOT NULL,
        "payment_date" date NULL,
        "payroll_transaction_id" bigint NULL,
        "created_at" timestamp with time zone NOT NULL,
        "updated_at" timestamp with time zone NOT NULL,
        "tenant_id" uuid NULL
    );
""")

# Create IncomeWithholding table
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_incomewithholding" (
        "id" uuid NOT NULL PRIMARY KEY,
        "employee_id" uuid NOT NULL UNIQUE,
        "business_id" uuid NULL,
        "tax_year" integer NOT NULL,
        "filing_status" varchar(2) NOT NULL,
        "multiple_jobs" boolean NOT NULL,
        "claim_dependents" boolean NOT NULL,
        "dependent_amount" numeric(10, 2) NOT NULL,
        "other_income" numeric(10, 2) NOT NULL,
        "deductions" numeric(10, 2) NOT NULL,
        "extra_withholding" numeric(10, 2) NOT NULL,
        "state_code" varchar(2) NULL,
        "state_allowances" integer NOT NULL,
        "state_additional_withholding" numeric(10, 2) NOT NULL,
        "is_electronically_signed" boolean NOT NULL,
        "signature_date" date NULL,
        "ip_address" inet NULL,
        "w4_form_file" varchar(100) NULL,
        "last_updated" timestamp with time zone NOT NULL,
        "last_updated_by" uuid NULL,
        "tenant_id" uuid NULL
    );
""")

# Create PaymentDepositMethod table
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_paymentdepositmethod" (
        "id" uuid NOT NULL PRIMARY KEY,
        "employee_id" uuid NOT NULL,
        "business_id" uuid NULL,
        "method_type" varchar(20) NOT NULL,
        "bank_name" varchar(100) NULL,
        "account_last_four" varchar(4) NULL,
        "routing_number_last_four" varchar(4) NULL,
        "account_type" varchar(10) NULL,
        "email" varchar(254) NULL,
        "phone" varchar(20) NULL,
        "username" varchar(100) NULL,
        "wallet_address" varchar(100) NULL,
        "crypto_currency" varchar(10) NULL,
        "is_default" boolean NOT NULL,
        "is_active" boolean NOT NULL,
        "created_at" timestamp with time zone NOT NULL,
        "updated_at" timestamp with time zone NOT NULL,
        "payment_provider_id" varchar(100) NULL,
        "tenant_id" uuid NULL
    );
""")

# Create PayStatement table
cursor.execute("""
    CREATE TABLE IF NOT EXISTS "payroll_paystatement" (
        "id" uuid NOT NULL PRIMARY KEY,
        "employee_id" uuid NOT NULL,
        "business_id" uuid NULL,
        "statement_type" varchar(15) NOT NULL,
        "pay_period_start" date NOT NULL,
        "pay_period_end" date NOT NULL,
        "pay_date" date NOT NULL,
        "gross_pay" numeric(10, 2) NOT NULL,
        "net_pay" numeric(10, 2) NOT NULL,
        "regular_hours" numeric(6, 2) NOT NULL,
        "overtime_hours" numeric(6, 2) NOT NULL,
        "pto_hours" numeric(6, 2) NOT NULL,
        "sick_hours" numeric(6, 2) NOT NULL,
        "holiday_hours" numeric(6, 2) NOT NULL,
        "federal_tax" numeric(10, 2) NOT NULL,
        "state_tax" numeric(10, 2) NOT NULL,
        "local_tax" numeric(10, 2) NOT NULL,
        "medicare" numeric(10, 2) NOT NULL,
        "social_security" numeric(10, 2) NOT NULL,
        "health_insurance" numeric(10, 2) NOT NULL,
        "dental_insurance" numeric(10, 2) NOT NULL,
        "vision_insurance" numeric(10, 2) NOT NULL,
        "retirement_401k" numeric(10, 2) NOT NULL,
        "other_deductions" numeric(10, 2) NOT NULL,
        "ytd_gross" numeric(12, 2) NOT NULL,
        "ytd_net" numeric(12, 2) NOT NULL,
        "ytd_federal_tax" numeric(10, 2) NOT NULL,
        "ytd_state_tax" numeric(10, 2) NOT NULL,
        "ytd_medicare" numeric(10, 2) NOT NULL,
        "ytd_social_security" numeric(10, 2) NOT NULL,
        "additional_info" jsonb NULL,
        "notes" text NULL,
        "pdf_file" varchar(100) NULL,
        "payroll_transaction_id" bigint NULL UNIQUE,
        "created_at" timestamp with time zone NOT NULL,
        "updated_at" timestamp with time zone NOT NULL,
        "tenant_id" uuid NULL
    );
""")

# Add indexes
cursor.execute("""
    CREATE INDEX IF NOT EXISTS "payroll_payrollrun_payroll_number_17dee363_like" 
    ON "payroll_payrollrun" ("payroll_number" varchar_pattern_ops);
""")

cursor.execute("""
    CREATE INDEX IF NOT EXISTS "payroll_payrolltransaction_employee_id_0a54a858" 
    ON "payroll_payrolltransaction" ("employee_id");
""")

cursor.execute("""
    CREATE INDEX IF NOT EXISTS "payroll_payrolltransaction_payroll_run_id_d6e5f787" 
    ON "payroll_payrolltransaction" ("payroll_run_id");
""")

# Add foreign key constraints
try:
    cursor.execute("""
        ALTER TABLE "payroll_payrolltransaction" 
        ADD CONSTRAINT "payroll_payrolltrans_employee_id_0a54a858_fk_hr_employ" 
        FOREIGN KEY ("employee_id") REFERENCES "hr_employee" ("id") 
        DEFERRABLE INITIALLY DEFERRED;
    """)
except psycopg2.errors.DuplicateObject:
    pass

try:
    cursor.execute("""
        ALTER TABLE "payroll_payrolltransaction" 
        ADD CONSTRAINT "payroll_payrolltrans_payroll_run_id_d6e5f787_fk_payroll_p" 
        FOREIGN KEY ("payroll_run_id") REFERENCES "payroll_payrollrun" ("id") 
        DEFERRABLE INITIALLY DEFERRED;
    """)
except psycopg2.errors.DuplicateObject:
    pass

conn.commit()
print("âœ… Successfully created all missing payroll tables!")

# Verify tables were created
cursor.execute("""
    SELECT table_name 
    FROM information_schema.tables 
    WHERE table_schema = 'public' 
    AND table_name LIKE 'payroll_%'
    ORDER BY table_name
""")

print("\nPayroll tables in database:")
for table in cursor.fetchall():
    print(f"  - {table[0]}")

cursor.close()
conn.close()