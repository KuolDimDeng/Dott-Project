# Generated by Django 5.0.6 on 2025-03-21 15:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomChargePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('unit', 'Per Unit'), ('hour', 'Per Hour'), ('day', 'Per Day'), ('week', 'Per Week'), ('month', 'Per Month'), ('custom', 'Custom')], max_length=10)),
                ('custom_unit', models.CharField(blank=True, max_length=50, null=True)),
                ('period', models.CharField(choices=[('hour', 'Hour'), ('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('custom', 'Custom')], max_length=10)),
                ('custom_period', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_code', models.CharField(max_length=20)),
                ('dept_name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('sku', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField(db_index=True, default=0)),
                ('reorder_level', models.IntegerField(default=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.category')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.location')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('ADJUST', 'Adjustment')], max_length=6)),
                ('quantity', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.inventoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_for_sale', models.BooleanField(default=True)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('salestax', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height_unit', models.CharField(choices=[('cm', 'Centimeter'), ('m', 'Meter'), ('in', 'Inch')], default='cm', max_length=10)),
                ('width_unit', models.CharField(choices=[('cm', 'Centimeter'), ('m', 'Meter'), ('in', 'Inch')], default='cm', max_length=10)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight_unit', models.CharField(choices=[('kg', 'Kilogram'), ('lb', 'Pound'), ('g', 'Gram')], default='kg', max_length=10)),
                ('charge_period', models.CharField(choices=[('hour', 'Hour'), ('day', 'Day'), ('month', 'Month'), ('year', 'Year')], default='day', max_length=10)),
                ('charge_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('product_code', models.CharField(db_index=True, editable=False, max_length=50, unique=True)),
                ('stock_quantity', models.IntegerField(db_index=True, default=0)),
                ('reorder_level', models.IntegerField(default=0)),
                ('custom_charge_plans', models.ManyToManyField(blank=True, to='inventory.customchargeplan')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='inventory.department')),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('material', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('condition', models.CharField(blank=True, max_length=50, null=True)),
                ('ingredients', models.TextField(blank=True, null=True)),
                ('allergens', models.TextField(blank=True, null=True)),
                ('nutritional_info', models.TextField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True)),
                ('load_capacity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('extra_fields', models.JSONField(blank=True, default=dict)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='type_fields', to='inventory.product')),
            ],
            options={
                'verbose_name': 'Product Type Field',
                'verbose_name_plural': 'Product Type Fields',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_for_sale', models.BooleanField(default=True)),
                ('is_for_rent', models.BooleanField(default=False)),
                ('salestax', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('height_unit', models.CharField(choices=[('cm', 'Centimeter'), ('m', 'Meter'), ('in', 'Inch')], default='cm', max_length=10)),
                ('width_unit', models.CharField(choices=[('cm', 'Centimeter'), ('m', 'Meter'), ('in', 'Inch')], default='cm', max_length=10)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weight_unit', models.CharField(choices=[('kg', 'Kilogram'), ('lb', 'Pound'), ('g', 'Gram')], default='kg', max_length=10)),
                ('charge_period', models.CharField(choices=[('hour', 'Hour'), ('day', 'Day'), ('month', 'Month'), ('year', 'Year')], default='day', max_length=10)),
                ('charge_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('service_code', models.CharField(db_index=True, editable=False, max_length=50, unique=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('is_recurring', models.BooleanField(db_index=True, default=False)),
                ('custom_charge_plans', models.ManyToManyField(blank=True, to='inventory.customchargeplan')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTypeFields',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=100, null=True)),
                ('skill_level', models.CharField(blank=True, max_length=50, null=True)),
                ('certification', models.CharField(blank=True, max_length=100, null=True)),
                ('experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('min_booking_notice', models.DurationField(blank=True, null=True)),
                ('buffer_time', models.DurationField(blank=True, null=True)),
                ('max_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('service_area', models.CharField(blank=True, max_length=100, null=True)),
                ('vehicle_requirements', models.TextField(blank=True, null=True)),
                ('extra_fields', models.JSONField(blank=True, default=dict)),
                ('service', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='type_fields', to='inventory.service')),
            ],
            options={
                'verbose_name': 'Service Type Field',
                'verbose_name_plural': 'Service Type Fields',
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='inventory_p_name_f6a6a1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['product_code'], name='inventory_p_product_ee59bd_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['stock_quantity', 'reorder_level'], name='inventory_p_stock_q_05543d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_for_sale', 'price'], name='inventory_p_is_for__3f6d83_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='inventory_p_created_081871_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_for_sale', 'stock_quantity'], name='inventory_p_is_for__585cac_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['department', 'stock_quantity'], name='inventory_p_departm_38d49e_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['name'], name='inventory_s_name_80acbf_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['service_code'], name='inventory_s_service_284e92_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_recurring'], name='inventory_s_is_recu_b8c568_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_for_sale', 'price'], name='inventory_s_is_for__b3db46_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['created_at'], name='inventory_s_created_4e6d87_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_for_sale', 'is_recurring'], name='inventory_s_is_for__32e1b6_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['name', 'sku'], name='inventory_i_name_1aa0b8_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['quantity', 'reorder_level'], name='inventory_i_quantit_76849a_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryitem',
            index=models.Index(fields=['category', 'supplier'], name='inventory_i_categor_a229da_idx'),
        ),
    ]
