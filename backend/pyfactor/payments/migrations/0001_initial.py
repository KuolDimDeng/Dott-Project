# Generated by Django 5.1.7 on 2025-03-29 19:51

import django.db.models.deletion
import django_countries.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hr', '0001_initial'),
        ('payroll', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('provider_type', models.CharField(choices=[('card_processor', 'Credit/Debit Card Processor'), ('bank_connector', 'Bank Connection Service'), ('mobile_money', 'Mobile Money Service'), ('direct_transfer', 'Direct Bank Transfer'), ('digital_wallet', 'Digital Wallet'), ('crypto', 'Cryptocurrency Service')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('api_key_name', models.CharField(blank=True, max_length=100, null=True)),
                ('api_secret_name', models.CharField(blank=True, max_length=100, null=True)),
                ('api_base_url', models.URLField(blank=True, null=True)),
                ('available_countries', models.JSONField(default=list, help_text='List of country codes where this provider is available')),
                ('supports_recurring', models.BooleanField(default=False)),
                ('supports_refunds', models.BooleanField(default=False)),
                ('is_mobile_money', models.BooleanField(default=False)),
                ('mobile_network_operator', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_currency', models.CharField(max_length=3)),
                ('to_currency', models.CharField(max_length=3)),
                ('rate', models.DecimalField(decimal_places=6, max_digits=15)),
                ('source', models.CharField(default='exchangerate-api', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('from_currency', 'to_currency')},
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method_type', models.CharField(choices=[('bank_account', 'Bank Account'), ('mobile_money', 'Mobile Money'), ('card', 'Credit/Debit Card'), ('digital_wallet', 'Digital Wallet'), ('cash', 'Cash Payment')], max_length=20)),
                ('nickname', models.CharField(blank=True, max_length=100)),
                ('is_default', models.BooleanField(default=False)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('routing_number_last_four', models.CharField(blank=True, max_length=4, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('mobile_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('wallet_id', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_token', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('external_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='users.business')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='hr.employee')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentprovider')),
            ],
            options={
                'unique_together': {('business', 'employee', 'provider', 'method_type', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='CountryPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2, unique=True)),
                ('currency_code', models.CharField(help_text='ISO 4217 currency code', max_length=3)),
                ('currency_symbol', models.CharField(max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('backup_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backup_for_countries', to='payments.paymentprovider')),
                ('bank_connector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_connector_for_countries', to='payments.paymentprovider')),
                ('mobile_money_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mobile_money_for_countries', to='payments.paymentprovider')),
                ('primary_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_for_countries', to='payments.paymentprovider')),
            ],
            options={
                'verbose_name_plural': 'Country payment methods',
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('payroll', 'Payroll Payment'), ('tax', 'Tax Payment'), ('vendor', 'Vendor Payment'), ('refund', 'Refund'), ('fee', 'Fee'), ('other', 'Other')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(max_length=3)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('provider_transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('provider_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('provider_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('converted_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to='users.business')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='hr.employee')),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='payments.paymentmethod')),
                ('payroll_run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_transactions', to='payroll.payrollrun')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='payments.paymentprovider')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('event_id', models.CharField(max_length=255)),
                ('payload', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentprovider')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhooks', to='payments.paymenttransaction')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('provider', 'event_id')},
            },
        ),
    ]
