# Generated by Django 4.2.16 on 2025-06-14 22:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('custom_auth', '0008_rename_custom_auth_accountdeletionlog_user_email_idx_custom_auth_user_em_b53a96_idx_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique session identifier', primary_key=True, serialize=False)),
                ('access_token_hash', models.CharField(help_text='Hashed access token for security', max_length=255)),
                ('refresh_token_hash', models.CharField(blank=True, help_text='Hashed refresh token if available', max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this session is currently active')),
                ('needs_onboarding', models.BooleanField(default=True, help_text='Whether user needs to complete onboarding')),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Whether user has completed onboarding')),
                ('onboarding_step', models.CharField(default='business_info', help_text='Current onboarding step', max_length=50)),
                ('subscription_plan', models.CharField(default='free', help_text="User's subscription plan", max_length=50)),
                ('subscription_status', models.CharField(default='active', help_text='Subscription status', max_length=50)),
                ('session_data', models.JSONField(default=dict, help_text='Additional session data')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When session was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last session update')),
                ('last_activity', models.DateTimeField(default=django.utils.timezone.now, help_text='Last user activity')),
                ('expires_at', models.DateTimeField(help_text='When session expires')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of session creation', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string', null=True)),
                ('session_type', models.CharField(choices=[('web', 'Web Browser'), ('mobile', 'Mobile App'), ('api', 'API Client')], default='web', help_text='Type of session', max_length=20)),
                ('tenant', models.ForeignKey(blank=True, help_text='Tenant context for this session', null=True, on_delete=django.db.models.deletion.CASCADE, to='custom_auth.tenant')),
                ('user', models.ForeignKey(help_text='User who owns this session', on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SessionEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('created', 'Session Created'), ('extended', 'Session Extended'), ('invalidated', 'Session Invalidated'), ('expired', 'Session Expired'), ('updated', 'Session Updated'), ('suspicious', 'Suspicious Activity')], max_length=20)),
                ('event_data', models.JSONField(default=dict, help_text='Additional event data')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='session_manager.usersession')),
            ],
            options={
                'db_table': 'session_events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['user', 'is_active'], name='user_sessio_user_id_bb1b83_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['session_id', 'expires_at'], name='user_sessio_session_10db89_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['tenant', 'is_active'], name='user_sessio_tenant__6e136b_idx'),
        ),
        migrations.AddIndex(
            model_name='usersession',
            index=models.Index(fields=['last_activity'], name='user_sessio_last_ac_7cb421_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionevent',
            index=models.Index(fields=['session', 'created_at'], name='session_eve_session_445439_idx'),
        ),
        migrations.AddIndex(
            model_name='sessionevent',
            index=models.Index(fields=['event_type', 'created_at'], name='session_eve_event_t_6bc1c5_idx'),
        ),
    ]
