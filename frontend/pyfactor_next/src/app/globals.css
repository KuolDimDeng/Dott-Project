@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom CSS variables for color theming */
:root {
  /* Light theme variables */
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
  --primary-main: #0a3977; /* Navy blue */
  --primary-light: #1a5bc0; /* Standard blue */
  --primary-dark: #041e42; /* Dark navy blue */
  --error-main: #d32f2f;
  --success-main: #2e7d32;
  --warning-main: #ed6c02;
  --info-main: #0288d1;
  --border-color: rgba(0, 0, 0, 0.12);
}


/* Base styles */
body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
    to bottom,
    transparent,
    rgb(var(--background-end-rgb))
  )
  rgb(var(--background-start-rgb));
  margin: 0;
  padding: 0;
  min-height: 100vh;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#__next {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* Scrollbar styles */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: rgba(var(--foreground-rgb), 0.2);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(var(--foreground-rgb), 0.3);
}

/* MUI overrides and customizations */
@layer components {
  .MuiListItemButton-root {
    @apply border-b-0 hover:bg-opacity-10 transition-colors duration-200;
  }

  .MuiButton-root {
    @apply shadow-none hover:shadow-md transition-shadow duration-200;
  }

  .MuiTextField-root {
    @apply w-full;
  }

  .MuiPaper-root {
    @apply shadow-md;
  }
}

/* Utility classes */
@layer utilities {
  .flex-center {
    @apply flex items-center justify-center;
  }

  .flex-between {
    @apply flex items-center justify-between;
  }

  .flex-around {
    @apply flex items-center justify-around;
  }

  .absolute-center {
    @apply absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2;
  }

  .text-gradient {
    @apply bg-clip-text text-transparent bg-gradient-to-r from-primary-light to-primary-dark;
  }
}

/* Image styles */
.image-container {
  @apply relative w-full h-full;
}

.image-container img {
  @apply object-contain w-full h-full;
}

.responsive-image {
  @apply w-full h-auto transition-transform duration-300 ease-in-out;
}

/* Animation classes */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.fade-in {
  animation: fadeIn 0.3s ease-in;
}

.slide-in {
  animation: slideIn 0.3s ease-out;
}

/* Loading animations */
.loading-spinner {
  @apply animate-spin rounded-full border-4 border-primary-light border-t-primary-main h-8 w-8;
}

/* Responsive typography */
@responsive {
  .text-responsive {
    @apply text-base md:text-lg lg:text-xl;
  }
}

/* Print styles */
@media print {
  body {
    background: none;
  }

  .no-print {
    display: none !important;
  }
}

.custom-toast-class {
  border-radius: 8px;
}

.custom-toast-class.Toastify__toast--success {
  border-left: 4px solid #4caf50;
}

.custom-toast-class.Toastify__toast--error {
  border-left: 4px solid #f44336;
}

.custom-toast-class.Toastify__toast--info {
  border-left: 4px solid #2196f3;
}

.custom-toast-class.Toastify__toast--warning {
  border-left: 4px solid #ff9800;
}

/* === INPUT INTERACTIVITY FIXES === */
/* More targeted approach to fix input issues without breaking other UI elements */

/* Make form controls in product forms interactive */
.product-form input, 
.product-form textarea, 
.product-form select, 
.product-form button,
.product-form .MuiInputBase-root,
.product-form .MuiOutlinedInput-input,
.product-form .MuiFilledInput-input {
  pointer-events: auto !important;
  position: relative !important; 
  z-index: 50 !important;
}

/* Ensure text visibility in ALL form inputs */
input, textarea, select, 
.MuiInputBase-input,
.MuiOutlinedInput-input,
.MuiFilledInput-input,
.MuiInput-input {
  pointer-events: auto !important;
  color: black !important; 
  caret-color: black !important;
  -webkit-text-fill-color: black !important;
  text-fill-color: black !important;
  opacity: 1 !important;
  user-select: text !important;
}

/* Add visual cue for focused inputs */
.product-form input:focus, 
.product-form textarea:focus, 
.product-form select:focus,
.product-form .MuiInputBase-root:focus-within {
  outline: 2px solid #4285f4 !important;
  outline-offset: 2px !important;
  box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.3) !important;
}

/* Fix specifically for MUI components in product forms */
.product-form .MuiTextField-root input,
.product-form .MuiInputBase-root input {
  pointer-events: auto !important;
}

/* Debug helper class */
.debug-input {
  border: 2px solid red !important;
  box-shadow: 0 0 10px rgba(255, 0, 0, 0.5) !important;
}

/* === END OF INPUT INTERACTIVITY FIXES === */

/* === GLOBAL INPUT FIX === */
/* Universal fix for all input fields across the application */

/* 
 * This comprehensive fix ensures that all input elements:
 * 1. Receive events normally without interference
 * 2. Have proper focus and interaction states
 * 3. Use native event handling without interference
 */

/* Base input elements */
input, 
textarea, 
select,
button,
[role="textbox"],
[contenteditable="true"] {
  /* Reset to normal DOM behavior */
  pointer-events: auto !important;
  position: relative !important;
  z-index: 1 !important; 
  cursor: auto !important;
  -webkit-user-select: auto !important;
  user-select: auto !important;
  -webkit-appearance: auto !important;
  appearance: auto !important;
}

/* MUI-specific component fixes */
.MuiInputBase-root, 
.MuiOutlinedInput-root,
.MuiFilledInput-root,
.MuiInput-root,
.MuiInputBase-input,
.MuiOutlinedInput-input,
.MuiFilledInput-input,
.MuiInput-input,
.MuiSelect-root,
.MuiAutocomplete-root,
.MuiButton-root,
.MuiIconButton-root,
.MuiCheckbox-root,
.MuiRadio-root,
.MuiSwitch-root,
.MuiSlider-root {
  pointer-events: auto !important;
  position: relative !important;
  z-index: 1 !important;
}

/* Make inputs visibly focusable with consistent styling */
input:focus, 
textarea:focus, 
select:focus,
button:focus,
.MuiInputBase-root:focus-within,
.MuiOutlinedInput-root:focus-within,
.MuiFilledInput-root:focus-within {
  outline: 2px solid #1976d2 !important;
  outline-offset: 1px !important;
}

/* Ensure inputs are visible when typing */
input, textarea, select {
  color: #000 !important;
  caret-color: #1976d2 !important;
  background-color: transparent !important; /* Keeps MUI styling intact */
}

/* Special fix for dashboards to prevent event capture */
.dashboard-container input,
.dashboard-container textarea,
.dashboard-container select,
form input,
form textarea,
form select,
.MuiPaper-root input,
.MuiPaper-root textarea,
.MuiPaper-root select {
  /* Enhanced protection against event capturers */
  pointer-events: auto !important;  
  position: relative !important;
  z-index: 2 !important; /* Higher than normal z-index */
}

/* === END OF GLOBAL INPUT FIX === */

/* === MUI Input Fix Styles === */
/* These styles follow MUI's recommendations for input handling */

/* Required keyframes for MUI TextField components */
@keyframes mui-auto-fill { from { display: block; } }
@keyframes mui-auto-fill-cancel { from { display: block; } }

/* Ensure inputs are properly styled */
.MuiInputBase-root {
  position: relative !important;
  z-index: 2 !important;
}

.MuiInputBase-input {
  color: rgba(0, 0, 0, 0.87) !important; 
  caret-color: black !important;
}

/* Ensure text fields in forms are interactive */
.MuiFormControl-root {
  position: relative !important;
  z-index: 1 !important;
}

/* Make form controls in product forms interactive */
.product-form .MuiInputBase-root,
.product-form .MuiOutlinedInput-input,
.product-form .MuiFilledInput-input {
  position: relative !important; 
  z-index: 2 !important;
}

/* Add visual cue for focused inputs */
.MuiInputBase-root.Mui-focused {
  border-color: var(--primary-main) !important;
}

/* === END OF MUI INPUT FIX === */