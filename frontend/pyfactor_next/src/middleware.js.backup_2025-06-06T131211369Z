import { NextResponse } from 'next/server';

export function middleware(request) {
  const { pathname } = request.nextUrl;
  
  // Force browser navigation for auth routes
  if (pathname.startsWith('/api/auth/')) {
    // For login, logout, and callback routes, we need browser navigation
    // not RSC payload fetching
    const authRoutes = ['/api/auth/login', '/api/auth/logout', '/api/auth/callback'];
    
    if (authRoutes.some(route => pathname.startsWith(route))) {
      // Set header to prevent RSC payload fetch
      const response = NextResponse.next();
      response.headers.set('x-middleware-rewrite', request.url);
      return response;
    }
  }
  
  return NextResponse.next();
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     */
    '/((?!_next/static|_next/image|favicon.ico).*)',
  ],
};
