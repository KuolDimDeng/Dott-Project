(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[69404],{14882:(t,n,e)=>{"use strict";e.d(n,{Ku:()=>l,WE:()=>d,n8:()=>u});var a=e(95155),r=e(12115);e(39786);var o=e(42749),i=e(51174),s=e(49852);let c=(0,r.createContext)({tenantId:null,tenantInfo:null,loading:!0,error:null,setTenantId:()=>{},fetchTenantInfo:()=>Promise.resolve(null),switchTenant:()=>Promise.resolve(!1),clearTenant:()=>{},initializeTenant:()=>Promise.resolve(),verifyTenantAccess:()=>Promise.resolve(!0)}),l=()=>{let t=(0,r.useContext)(c);return t||(o.vF.warn("[TenantContext] useTenant called outside of provider, returning empty context"),{tenantId:null,tenantInfo:null,loading:!1,error:null,setTenantId:()=>{},fetchTenantInfo:()=>Promise.resolve(null),switchTenant:()=>Promise.resolve(!1),clearTenant:()=>{},initializeTenant:()=>Promise.resolve(),verifyTenantAccess:()=>Promise.resolve(!0)})},u=l,d=t=>{let{children:n}=t,[e,l]=(0,r.useState)(null),[u,d]=(0,r.useState)(null),[f,g]=(0,r.useState)(!0),[I,v]=(0,r.useState)(null),[p,w]=(0,r.useState)([]),h=(0,r.useRef)({tenantInfo:0,tenantList:0}),T=(0,r.useRef)({tenantInfo:!1,tenantList:!1}),m=(0,r.useCallback)(()=>{let t=window.location.pathname;return"/"===t||""===t||"/index.html"===t||t.startsWith("/auth/")||"/about"===t||"/privacy"===t||"/terms"===t},[!0]);(0,r.useEffect)(()=>{m()&&g(!1)},[m]);let y=(0,r.useCallback)(async()=>{var t,n;try{let n=await fetch("/api/tenant/from-token");if(!n.ok){if(m()&&(401===n.status||403===n.status))return o.vF.debug("[TenantContext] Auth error on public page (expected)"),null;let e=await n.json();if("UserUnAuthenticatedException"===e.name||(null==(t=e.message)?void 0:t.includes("User needs to be authenticated")))throw Error("User needs to be authenticated");throw Error("Error getting tenant ID from token: ".concat(n.statusText))}return(await n.json()).tenantId}catch(t){if(m()&&("UserUnAuthenticatedException"===t.name||(null==(n=t.message)?void 0:n.includes("User needs to be authenticated"))))return o.vF.debug("[TenantContext] Auth error on public page (expected)"),null;throw t}},[m]),C=(0,r.useCallback)(async t=>{if(t&&t!==e&&(l(t),1))try{await (0,i.updateTenantIdInCognito)(t),o.vF.info("[TenantContext] Tenant ID updated in Cognito: ".concat(t))}catch(t){o.vF.error("[TenantContext] Error updating tenant ID in Cognito:",t)}},[e]),b=(0,r.useCallback)(async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;try{if(!t)return o.vF.warn("[TenantContext] No tenant ID provided to fetch info"),null;let n=Date.now();if(T.current.tenantInfo||n-h.current.tenantInfo<2e3)return o.vF.debug("[TenantContext] Skipping tenant info fetch (too frequent or in progress)"),u;T.current.tenantInfo=!0,g(!0);try{let n=await s.K.getTenantInfo(t);if(h.current.tenantInfo=Date.now(),n)return o.vF.info("[TenantContext] Fetched tenant info for: ".concat(t)),d(n),n;return o.vF.warn("[TenantContext] No tenant info returned for: ".concat(t)),null}catch(e){o.vF.warn("[TenantContext] Failed to fetch tenant info, using mock: ".concat(e.message));let n={id:t,name:"Tenant ".concat(t.substring(0,8)),description:"Mock tenant for development",isActive:!0};return d(n),n}}catch(t){return o.vF.error("[TenantContext] Error fetching tenant info: ".concat(t)),v(t),null}finally{g(!1),T.current.tenantInfo=!1}},[e,u]),_=(0,r.useCallback)(async t=>{try{if(!t)return o.vF.warn("[TenantContext] No tenant ID provided to switch to"),!1;return await C(t),await b(t),o.vF.info("[TenantContext] Successfully switched to tenant: ".concat(t)),!0}catch(t){return o.vF.error("[TenantContext] Error switching tenant:",t),!1}},[C,b]),D=(0,r.useCallback)(async()=>{try{await (0,i.updateTenantIdInCognito)(""),l(null),d(null),o.vF.info("[TenantContext] Tenant context cleared")}catch(t){o.vF.error("[TenantContext] Error clearing tenant ID in Cognito:",t)}},[]),E=(0,r.useCallback)(async()=>{if(m()){o.vF.debug("[TenantContext] Skipping tenant initialization for public page"),g(!1);return}try{g(!0)}catch(n){if(m())return o.vF.debug("[TenantContext] Error ignored on public page:",n.message),g(!1),null;{var t;let e=window.location.pathname;if((e.includes("/auth/signin")||e.includes("/auth/signup")||e.includes("/auth/verify")||e.includes("/auth/reset-password"))&&("UserUnAuthenticatedException"===n.name||(null==(t=n.message)?void 0:t.includes("User needs to be authenticated"))))return o.vF.debug("[TenantContext] User not authenticated on auth page (expected)"),g(!1),null}o.vF.error("[TenantContext] Error initializing tenant context:",n),v(n)}finally{g(!1)}},[m,y,b]),F=(0,r.useCallback)(async t=>{try{if(!t)return o.vF.warn("[TenantContext] No tenant ID provided to verify access"),!1;let n=await s.K.verifyTenantAccess(t);return o.vF.info("[TenantContext] User access to tenant ".concat(t,": ").concat(n)),n}catch(t){return o.vF.error("[TenantContext] Error verifying tenant access:",t),!1}},[]);return(0,r.useEffect)(()=>{E()},[E]),(0,a.jsx)(c.Provider,{value:{tenantId:e,tenantInfo:u,loading:f,error:I,setTenantId:C,fetchTenantInfo:b,switchTenant:_,clearTenant:D,initializeTenant:E,verifyTenantAccess:F},children:n})}},49852:(t,n,e)=>{"use strict";e.d(n,{K:()=>o});var a=e(29729),r=e(42749);let o={async getTenantInfo(t){try{if(!t)return r.vF.warn("[apiService] No tenant ID provided to getTenantInfo"),null;return(await a.Ay.get("/api/tenants/".concat(t))).data}catch(n){if(n.response&&404===n.response.status)return r.vF.warn("[apiService] Tenant not found: ".concat(t)),null;return r.vF.warn("[apiService] Error fetching tenant info: ".concat(n.message,". Using mock data.")),{id:t,name:"Business ".concat(t.substring(0,8)),type:"business",status:"active",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}}},async getUserTenants(){try{return(await a.Ay.get("/api/tenants")).data}catch(t){return r.vF.warn("[apiService] Error fetching user tenants: ".concat(t.message,". Using mock data.")),[{id:"11111111-1111-1111-1111-111111111111",name:"",type:"business",status:"active",isOwner:!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}]}}}},51174:(t,n,e)=>{"use strict";e.d(n,{$_:()=>l,BI:()=>h,FB:()=>T,Nf:()=>v,Pc:()=>d,fy:()=>m,getTenantId:()=>s,getTenantIdFromCognito:()=>I,h_:()=>g,isValidUUID:()=>c,jW:()=>w,oA:()=>u,pm:()=>p,updateTenantIdInCognito:()=>f});var a=e(81746),r=e(24818),o=e(62052);let i="tenantId",s=async()=>{try{var t,n,e,s,c,l;let u=await o.l.getItem(i);if(u)return u;let d=await (0,a.H)(),f=await (0,r.$)(),g=(null==d||null==(t=d.attributes)?void 0:t["custom:tenant_ID"])||(null==d||null==(n=d.attributes)?void 0:n["custom:tenantId"])||(null==f||null==(s=f.accessToken)||null==(e=s.payload)?void 0:e["custom:tenant_ID"])||(null==f||null==(l=f.accessToken)||null==(c=l.payload)?void 0:c["custom:tenantId"]);if(!g)throw Error("Tenant ID not found in user attributes or session");return await o.l.setItem(i,g),g}catch(t){throw console.error("Error getting tenant ID:",t),t}},c=t=>/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(t),l=async t=>{try{await o.l.setItem(i,t)}catch(t){throw console.error("Error storing tenant ID:",t),t}},u=async t=>{let{tenantId:n,metadata:e={}}=t;try{if(!n)return void console.error("Cannot store tenant info: No tenant ID provided");await o.l.setItem(i,n),window.__APP_CACHE||(window.__APP_CACHE={}),window.__APP_CACHE.tenant||(window.__APP_CACHE.tenant={}),window.__APP_CACHE.tenant.id=n,window.__APP_CACHE.tenant.metadata=e,window.__APP_CACHE.tenant.timestamp=Date.now();try{sessionStorage.setItem("tenant_id",n),sessionStorage.setItem("tenant_info",JSON.stringify({id:n,metadata:e,timestamp:Date.now()}))}catch(t){console.debug("Could not store tenant info in sessionStorage:",t)}console.debug("[TenantUtils] Stored tenant info for ID: ".concat(n))}catch(t){console.error("Error storing tenant info:",t)}},d=t=>t?t.charAt(0).toUpperCase()+t.slice(1).toLowerCase():t,f=async t=>{try{let{updateUserAttributes:n}=await Promise.all([e.e(58430),e.e(84620),e.e(23639),e.e(38501),e.e(31861),e.e(94901)]).then(e.bind(e,55158));await n({userAttributes:{"custom:tenant_ID":t}}),await l(t),console.debug("[TenantUtils] Updated tenant ID in Cognito: ".concat(t))}catch(n){console.error("Error updating tenant ID in Cognito:",n),await l(t)}},g=async t=>{try{await o.l.setItem("auth_tokens",t)}catch(t){throw console.error("Error setting tokens:",t),t}},I=async()=>{try{var t,n,e,s,c,l;let u=await o.l.getItem(i);if(u)return u;let d=await (0,a.H)(),f=await (0,r.$)(),g=(null==d||null==(t=d.attributes)?void 0:t["custom:tenant_ID"])||(null==d||null==(n=d.attributes)?void 0:n["custom:tenantId"])||(null==f||null==(s=f.accessToken)||null==(e=s.payload)?void 0:e["custom:tenant_ID"])||(null==f||null==(l=f.accessToken)||null==(c=l.payload)?void 0:c["custom:tenantId"]);if(!g)return null;return await o.l.setItem(i,g),g}catch(t){return console.error("Error getting tenant ID from Cognito:",t),null}},v=async t=>{try{if(!c(t))return!1;return(await fetch("/api/tenants/".concat(t,"/validate"))).ok}catch(t){return console.error("Error validating tenant ID:",t),!1}},p=t=>{let n=0;for(let e=0;e<t.length;e++)n=(n<<5)-n+t.charCodeAt(e),n&=n;return"00000000-0000-4000-a000-".concat(Math.abs(n).toString(16).padStart(12,"0"))},w=async()=>{try{let t=await s();if(!c(t))return console.error("Invalid tenant ID format:",t),null;return t}catch(t){return console.error("Error getting secure tenant ID:",t),null}},h=t=>c(t),T=t=>t?"tenant_".concat(t.replace(/-/g,"_")):"public",m=async()=>{try{let t=await s(),n={"Content-Type":"application/json","x-tenant-id":t};try{let{getCurrentUser:t}=await Promise.all([e.e(58430),e.e(84620),e.e(23639),e.e(38501),e.e(31861),e.e(94901)]).then(e.bind(e,55158)),a=await t();a&&a.userId&&(n["x-user-id"]=a.userId)}catch(t){}return n}catch(t){return console.error("Error getting tenant headers:",t),{"Content-Type":"application/json"}}}},54336:(t,n,e)=>{Promise.resolve().then(e.bind(e,66596))},66596:(t,n,e)=>{"use strict";e.d(n,{default:()=>l});var a=e(12115),r=e(14882),o=e(51174),i=e(42749),s=e(11024),c=e(52584);function l(t){let{tenantId:n}=t,{setTenantId:e}=(0,r.n8)();return(0,a.useEffect)(()=>{(async()=>{if(!n)return i.vF.warn("[TenantInitializer] No tenant ID provided");i.vF.info("[TenantInitializer] Initializing tenant:",n);try{e(n),(0,o.oA)({tenantId:n,metadata:{source:"TenantInitializer",timestamp:new Date().toISOString()}});try{let t=await (0,s.T)(),e=t["custom:tenant_ID"]||t["custom:tenantId"];e!==n&&(i.vF.info("[TenantInitializer] Updating Cognito tenant ID:",{from:e||"none",to:n}),await (0,c.u)({userAttributes:{"custom:tenant_ID":n,"custom:updated_at":new Date().toISOString()}}),await fetch("/api/tenant/ensure-db-record",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:n,email:t.email,forceUpdate:!0})}),i.vF.info("[TenantInitializer] Cognito and database updated with tenant ID:",n))}catch(t){i.vF.error("[TenantInitializer] Error updating Cognito attributes:",t);try{await fetch("/api/user/update-attributes",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({attributes:{"custom:tenant_ID":n}})}),i.vF.info("[TenantInitializer] Tenant ID updated via API fallback")}catch(t){i.vF.error("[TenantInitializer] API fallback also failed:",t)}}i.vF.info("[TenantInitializer] Tenant initialized successfully:",n)}catch(t){i.vF.error("[TenantInitializer] Error initializing tenant:",t)}})()},[n,e]),null}}},t=>{var n=n=>t(t.s=n);t.O(0,[54940,9296,79480,58430,20171,79189,62052,80019,29729,28441,31684,77358],()=>n(54336)),_N_E=t.O()}]);