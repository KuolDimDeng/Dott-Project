"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[47856],{47856:(t,n,e)=>{e.d(n,{E6:()=>l,J_:()=>s,Yc:()=>c,ed:()=>i});var a=e(42749);e(68084);var o=e(51174);e(12115);let r=null;function i(t){if(!t)return void a.vF.warn("[tenantContext] Attempted to set empty tenant ID");r!==t&&(a.vF.info("[tenantContext] Tenant ID updated: ".concat(t)),r=t)}function l(){return r}let s=t=>{let n;t&&t.headers&&((n="function"==typeof t.headers.get?t.headers.get("x-tenant-id"):t.headers["x-tenant-id"])||!t.data||!t.data.businessId||(n=t.data.businessId),n&&(a.vF.debug("[TenantContext] Extracted tenant ID from response: ".concat(n)),i(n)))},c=async()=>{a.vF.debug("[TenantContext] Initializing tenant context");try{a.vF.info("[TenantContext] Initializing tenant context");let t=await (0,o.Nf)();return t?(i(t),a.vF.info("[TenantContext] Tenant context initialized with ID: ".concat(t))):a.vF.warn("[TenantContext] No valid tenant ID found during initialization"),t}catch(n){a.vF.error("[TenantContext] Error getting tenant context:",n);let t="18609ed2-1a46-4d50-bc4e-483d6e3405ff";return a.vF.warn("[TenantContext] Error during initialization, using fallback: ".concat(t)),i(t),t}}},51174:(t,n,e)=>{e.d(n,{$_:()=>c,BI:()=>C,FB:()=>m,Nf:()=>f,Pc:()=>d,fy:()=>y,getTenantId:()=>l,getTenantIdFromCognito:()=>g,h_:()=>I,isValidUUID:()=>s,jW:()=>h,oA:()=>u,pm:()=>_,updateTenantIdInCognito:()=>w});var a=e(81746),o=e(24818),r=e(62052);let i="tenantId",l=async()=>{try{var t,n,e,l,s,c;let u=await r.l.getItem(i);if(u)return u;let d=await (0,a.H)(),w=await (0,o.$)(),I=(null==d||null==(t=d.attributes)?void 0:t["custom:tenant_ID"])||(null==d||null==(n=d.attributes)?void 0:n["custom:tenantId"])||(null==w||null==(l=w.accessToken)||null==(e=l.payload)?void 0:e["custom:tenant_ID"])||(null==w||null==(c=w.accessToken)||null==(s=c.payload)?void 0:s["custom:tenantId"]);if(!I)throw Error("Tenant ID not found in user attributes or session");return await r.l.setItem(i,I),I}catch(t){throw console.error("Error getting tenant ID:",t),t}},s=t=>/^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(t),c=async t=>{try{await r.l.setItem(i,t)}catch(t){throw console.error("Error storing tenant ID:",t),t}},u=async t=>{let{tenantId:n,metadata:e={}}=t;try{if(!n)return void console.error("Cannot store tenant info: No tenant ID provided");await r.l.setItem(i,n),window.__APP_CACHE||(window.__APP_CACHE={}),window.__APP_CACHE.tenant||(window.__APP_CACHE.tenant={}),window.__APP_CACHE.tenant.id=n,window.__APP_CACHE.tenant.metadata=e,window.__APP_CACHE.tenant.timestamp=Date.now();try{sessionStorage.setItem("tenant_id",n),sessionStorage.setItem("tenant_info",JSON.stringify({id:n,metadata:e,timestamp:Date.now()}))}catch(t){console.debug("Could not store tenant info in sessionStorage:",t)}console.debug("[TenantUtils] Stored tenant info for ID: ".concat(n))}catch(t){console.error("Error storing tenant info:",t)}},d=t=>t?t.charAt(0).toUpperCase()+t.slice(1).toLowerCase():t,w=async t=>{try{let{updateUserAttributes:n}=await Promise.all([e.e(58430),e.e(84620),e.e(23639),e.e(38501),e.e(31861),e.e(94901)]).then(e.bind(e,55158));await n({userAttributes:{"custom:tenant_ID":t}}),await c(t),console.debug("[TenantUtils] Updated tenant ID in Cognito: ".concat(t))}catch(n){console.error("Error updating tenant ID in Cognito:",n),await c(t)}},I=async t=>{try{await r.l.setItem("auth_tokens",t)}catch(t){throw console.error("Error setting tokens:",t),t}},g=async()=>{try{var t,n,e,l,s,c;let u=await r.l.getItem(i);if(u)return u;let d=await (0,a.H)(),w=await (0,o.$)(),I=(null==d||null==(t=d.attributes)?void 0:t["custom:tenant_ID"])||(null==d||null==(n=d.attributes)?void 0:n["custom:tenantId"])||(null==w||null==(l=w.accessToken)||null==(e=l.payload)?void 0:e["custom:tenant_ID"])||(null==w||null==(c=w.accessToken)||null==(s=c.payload)?void 0:s["custom:tenantId"]);if(!I)return null;return await r.l.setItem(i,I),I}catch(t){return console.error("Error getting tenant ID from Cognito:",t),null}},f=async t=>{try{if(!s(t))return!1;return(await fetch("/api/tenants/".concat(t,"/validate"))).ok}catch(t){return console.error("Error validating tenant ID:",t),!1}},_=t=>{let n=0;for(let e=0;e<t.length;e++)n=(n<<5)-n+t.charCodeAt(e),n&=n;return"00000000-0000-4000-a000-".concat(Math.abs(n).toString(16).padStart(12,"0"))},h=async()=>{try{let t=await l();if(!s(t))return console.error("Invalid tenant ID format:",t),null;return t}catch(t){return console.error("Error getting secure tenant ID:",t),null}},C=t=>s(t),m=t=>t?"tenant_".concat(t.replace(/-/g,"_")):"public",y=async()=>{try{let t=await l(),n={"Content-Type":"application/json","x-tenant-id":t};try{let{getCurrentUser:t}=await Promise.all([e.e(58430),e.e(84620),e.e(23639),e.e(38501),e.e(31861),e.e(94901)]).then(e.bind(e,55158)),a=await t();a&&a.userId&&(n["x-user-id"]=a.userId)}catch(t){}return n}catch(t){return console.error("Error getting tenant headers:",t),{"Content-Type":"application/json"}}}},68084:(t,n,e)=>{e.d(n,{P:()=>a});let a=(0,e(61421).vt)(t=>({isAuthenticated:!1,user:null,token:null,signOut:()=>t({isAuthenticated:!1,user:null,token:null}),setUser:n=>t({isAuthenticated:!0,user:n}),setToken:n=>t({token:n})}))}}]);