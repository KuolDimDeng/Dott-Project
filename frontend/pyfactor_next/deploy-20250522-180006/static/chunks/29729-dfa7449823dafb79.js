"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[29729],{29729:(e,t,n)=>{n.d(t,{Ay:()=>m,KK:()=>d,SP:()=>l,qN:()=>w,resetCircuitBreakers:()=>v,verifyBackendConnection:()=>k});var o=n(55166),r=n(68387),a=n(20171),s=n(42749);n(79189),n(49509);let i="https:"===window.location.protocol?window.location.origin:window.location.origin.replace("http:","https:"),c="https://api.dottapps.com",l=a.A.create({baseURL:"/api",timeout:3e4,headers:{"Content-Type":"application/json","X-Data-Source":"AWS_RDS","X-Database-Only":"true"},maxRedirects:0}),u=a.A.create({baseURL:c,timeout:3e4,headers:{"Content-Type":"application/json","X-Data-Source":"AWS_RDS","X-Database-Only":"true"},httpsAgent:void 0}),d=a.A.create((0,r._)((0,o._)({baseURL:"".concat(c,"/api/hr"),timeout:12e4,headers:{"Content-Type":"application/json","X-Data-Source":"AWS_RDS","X-Database-Only":"true","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, PUT, DELETE, OPTIONS","Access-Control-Allow-Headers":"Origin, X-Requested-With, Content-Type, Accept, Authorization, X-Tenant-ID, X-Business-ID, X-Schema-Name, X-Data-Source, X-Database-Only"}},{}),{maxRedirects:5,maxContentLength:0x3200000,validateStatus:function(e){return e>=200&&e<300||401===e||403===e},retry:3,retryDelay:1e3,cancelToken:void 0,signal:void 0,withCredentials:!0})),h=a.A.create({baseURL:"".concat(c,"/api/payroll"),timeout:6e4,headers:{"Content-Type":"application/json","X-Data-Source":"AWS_RDS","X-Database-Only":"true","X-Use-Mock-Data":"false"},maxRedirects:3,validateStatus:function(e){return e>=200&&e<300||401===e||403===e},withCredentials:!0});console.log("[AxiosConfig] Instances configured to use AWS RDS database:",{axiosInstance:!0,serverAxiosInstance:!0,backendHrApiInstance:!0,payrollApiInstance:!0}),l.interceptors.request.use(async e=>{try{var t;return e.headers=e.headers||{},e.headers["X-Data-Source"]="AWS_RDS",e.headers["X-Database-Only"]="true",e.headers["X-Use-Mock-Data"]="false",(null==(t=e.url)?void 0:t.includes("/payroll/"))&&(e.headers["X-Payroll-RDS"]="true"),e}catch(t){return s.vF.error("[AxiosConfig] Error in AWS RDS request interceptor:",t),e}}),u.interceptors.request.use(async e=>{try{return e.headers=e.headers||{},e.headers["X-Data-Source"]="AWS_RDS",e.headers["X-Database-Only"]="true",e.headers["X-Use-Mock-Data"]="false",e}catch(t){return s.vF.error("[AxiosConfig] Error in AWS RDS request interceptor:",t),e}}),d.interceptors.request.use(async e=>{try{var t,o,r,a;let i=null;if(null==(o=window.__APP_CACHE)||null==(t=o.tenant)?void 0:t.id)i=window.__APP_CACHE.tenant.id,s.vF.debug("[AxiosConfig] Using tenant ID from APP_CACHE for HR API: ".concat(i));else try{let{getTenantId:e}=await Promise.all([n.e(9296),n.e(79480),n.e(62052),n.e(45066)]).then(n.bind(n,51174));i=await e()}catch(e){s.vF.warn("[AxiosConfig] Could not load tenant ID:",null==e?void 0:e.message)}if(e.headers=e.headers||{},i&&(e.headers["X-Tenant-ID"]=i,e.params||(e.params={}),e.params.tenantId=i),e.headers["X-Data-Source"]="AWS_RDS",e.headers["X-Database-Only"]="true",e.headers["X-Use-Mock-Data"]="false",null==(a=window.__APP_CACHE)||null==(r=a.auth)?void 0:r.token){let t=window.__APP_CACHE.auth.token;t&&(s.vF.debug("[AxiosConfig] Using auth token from APP_CACHE for HR API"),e.headers.Authorization="Bearer ".concat(t))}return e}catch(t){return s.vF.error("[AxiosConfig] Error in HR API request interceptor:",t),e}}),h.interceptors.request.use(async e=>{try{var t,o,r,a;let i=null;if(null==(o=window.__APP_CACHE)||null==(t=o.tenant)?void 0:t.id)i=window.__APP_CACHE.tenant.id,s.vF.debug("[AxiosConfig] Using tenant ID from APP_CACHE for Payroll API: ".concat(i));else try{let{getTenantId:e}=await Promise.all([n.e(9296),n.e(79480),n.e(62052),n.e(45066)]).then(n.bind(n,51174));i=await e()}catch(e){s.vF.warn("[AxiosConfig] Could not load tenant ID:",null==e?void 0:e.message)}if(e.headers=e.headers||{},i&&(e.headers["X-Tenant-ID"]=i,e.params||(e.params={}),e.params.tenantId=i),e.headers["X-Data-Source"]="AWS_RDS",e.headers["X-Database-Only"]="true",e.headers["X-Use-Mock-Data"]="false",e.headers["X-Payroll-RDS"]="true",null==(a=window.__APP_CACHE)||null==(r=a.auth)?void 0:r.token){let t=window.__APP_CACHE.auth.token;t&&(s.vF.debug("[AxiosConfig] Using auth token from APP_CACHE for Payroll API"),e.headers.Authorization="Bearer ".concat(t))}return e}catch(t){return s.vF.error("[AxiosConfig] Error in Payroll API request interceptor:",t),e}});let C={};class f{canRequest(){if("CLOSED"===this.state)return!0;if("OPEN"===this.state){let e=Date.now();return!!this.lastFailureTime&&e-this.lastFailureTime>this.resetTimeout&&(this.state="HALF_OPEN",s.vF.info("[CircuitBreaker] ".concat(this.name," is now HALF_OPEN")),!0)}return!0}recordRequest(){this.requestCount++}recordSuccess(){"HALF_OPEN"===this.state&&(this.successCount++,this.successCount>=this.successThreshold&&(this.reset(),s.vF.info("[CircuitBreaker] ".concat(this.name," is now CLOSED (service recovered)")))),this.failureCount=0}recordFailure(){this.failureCount++,this.lastFailureTime=Date.now(),"CLOSED"===this.state&&this.failureCount>=this.failureThreshold?(this.state="OPEN",s.vF.warn("[CircuitBreaker] ".concat(this.name," is now OPEN (too many failures)"))):"HALF_OPEN"===this.state&&(this.state="OPEN",this.successCount=0,s.vF.warn("[CircuitBreaker] ".concat(this.name," is now OPEN (failed while testing)")))}reset(){this.state="CLOSED",this.failureCount=0,this.successCount=0,this.lastFailureTime=null}constructor(e){this.name=e,this.state="CLOSED",this.failureCount=0,this.successCount=0,this.lastFailureTime=null,this.failureThreshold=5,this.successThreshold=2,this.resetTimeout=3e4,this.requestCount=0}}let A=e=>(e||(e="default"),C[e]||(C[e]=new f(e)),C[e]),v=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return e?(A(e).reset(),s.vF.info("[CircuitBreaker] Circuit breaker for ".concat(e," has been reset"))):(Object.keys(C).forEach(e=>{C[e].reset()}),s.vF.info("[CircuitBreaker] All circuit breakers have been reset")),!0};v("/employees"),l.interceptors.request.use(async e=>{try{var t,a,i,c,l,u;e.url&&e.url.startsWith("http:")&&(e.url=e.url.replace("http:","https:"));try{let{getTenantId:t}=await Promise.all([n.e(9296),n.e(79480),n.e(62052),n.e(45066)]).then(n.bind(n,51174)),{fetchAuthSession:d}=await Promise.all([n.e(9296),n.e(79480),n.e(58430),n.e(84620),n.e(23639),n.e(38501),n.e(31861),n.e(26368)]).then(n.bind(n,55158));if(null==(i=window.__APP_CACHE)||null==(a=i.tenant)?void 0:a.id){let t=window.__APP_CACHE.tenant.id;e.headers=(0,r._)((0,o._)({},e.headers),{"X-Tenant-ID":t}),s.vF.debug("[AxiosConfig] Using tenant ID from APP_CACHE")}else{let n=await t();n&&(e.headers=(0,r._)((0,o._)({},e.headers),{"X-Tenant-ID":n}))}if(null==(l=window.__APP_CACHE)||null==(c=l.auth)?void 0:c.token)e.headers.Authorization="Bearer ".concat(window.__APP_CACHE.auth.token),s.vF.debug("[AxiosConfig] Using auth token from APP_CACHE");else try{let t=await d();(null==t||null==(u=t.tokens)?void 0:u.accessToken)&&(e.headers.Authorization="Bearer ".concat(t.tokens.accessToken.toString()))}catch(e){s.vF.warn("[AxiosConfig] Auth session error:",e.message)}}catch(e){s.vF.warn("[AxiosConfig] Import error in request interceptor:",e.message)}let d=(null==(t=e.url)?void 0:t.split("?")[0])||"",h=A(d);if(!h.canRequest())return s.vF.warn("[AxiosConfig] Circuit breaker open for ".concat(d,", rejecting request")),Promise.reject(Error("Circuit breaker open for ".concat(d)));return h.recordRequest(),e._circuitBreakerHandled=!0,e}catch(t){return s.vF.error("[AxiosConfig] Error in request interceptor:",t.message),e}},e=>Promise.reject(e)),l.interceptors.response.use(e=>{try{var t;let n=(null==(t=e.config.url)?void 0:t.split("?")[0])||"",o=A(n);e.config._circuitBreakerHandled&&o.recordSuccess()}catch(e){s.vF.error("[axiosConfig] Error in circuit breaker success handling:",e.message)}return e},async e=>{var t,n;let o=e.config;try{if(null==o?void 0:o._circuitBreakerHandled){let e=(null==(n=o.url)?void 0:n.split("?")[0])||"";A(e).recordFailure()}}catch(e){s.vF.error("[axiosConfig] Error in circuit breaker failure handling:",e.message)}if((null==(t=e.response)?void 0:t.status)===401&&!o._retry){o._retry=!0;try{return await refreshTokenAndRetry(o)}catch(e){return s.vF.error("[axiosConfig] Token refresh failed:",e.message),window.location.href="/login",Promise.reject(e)}}return"ECONNABORTED"!==e.code||o._abortRetry?Promise.reject(e):(s.vF.warn("[axiosConfig] Request aborted or timed out, retrying..."),o._abortRetry=!0,o.timeout=o.timeout?1.5*o.timeout:45e3,new Promise(e=>{setTimeout(()=>{e(l(o))},2e3)}))});let g=a.A.create({timeout:15e3,headers:{"Content-Type":"application/json"}});g.interceptors.request.use(e=>(e.baseURL||(e.baseURL="https://api.dottapps.com"),e),e=>Promise.reject(e)),g.interceptors.response.use(e=>e,e=>{var t,n,o;return"ECONNREFUSED"===e.code?(console.error("[ServerAxiosConfig] Connection refused to ".concat((null==(t=e.config)?void 0:t.url)||"unknown URL")),e.message="Connection to backend server failed (".concat(e.address,":").concat(e.port,")")):"ECONNABORTED"===e.code?(console.error("[ServerAxiosConfig] Connection timeout to ".concat((null==(n=e.config)?void 0:n.url)||"unknown URL")),e.message="Connection to backend server timed out"):"EPROTO"===e.code?(console.error("[ServerAxiosConfig] SSL Protocol error with ".concat((null==(o=e.config)?void 0:o.url)||"unknown URL")),e.message="SSL Protocol error - possible mismatch between HTTP/HTTPS"):console.error("[Server] API request error:",e.message),Promise.reject(e)}),a.A.create({baseURL:c,timeout:3e4,headers:{"Content-Type":"application/json"}}),a.A.create({baseURL:i,timeout:4e4,headers:{"Content-Type":"application/json"}}).interceptors.request.use(async e=>{try{var t;let n=await fetchAuthSession();if(null==n||null==(t=n.tokens)?void 0:t.accessToken){e.headers.Authorization="Bearer ".concat(n.tokens.accessToken.toString()),e.headers["x-id-token"]=n.tokens.accessToken.toString();{let t=localStorage.getItem("tenantId");t&&(e.headers["x-tenant-id"]=t)}}return e}catch(t){return console.warn("Failed to get auth session for enhanced API request",t),e}},e=>Promise.reject(e));let w=async function(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;for(let r=0;r<=n;r++)try{return await e()}catch(a){if(t=a,a.response&&a.response.status>=400&&a.response.status<500&&429!==a.response.status||r===n)throw a;let e=o*Math.pow(2,r);await new Promise(t=>setTimeout(t,e))}throw t},k=async()=>{var e,t,r,i,l,u,d;let h="".concat(c,"/api/hr/health");s.vF.info("[BackendConnectionCheck] Verifying backend connection to: ".concat(h)),v(),s.vF.info("[BackendConnectionCheck] All circuit breakers have been reset");try{let c=null;if(null==(t=window.__APP_CACHE)||null==(e=t.tenant)?void 0:e.id)c=window.__APP_CACHE.tenant.id,s.vF.debug("[BackendConnectionCheck] Using tenant ID from APP_CACHE: ".concat(c));else try{let{getTenantIdFromCognito:e}=await Promise.all([n.e(9296),n.e(79480),n.e(62052),n.e(45066)]).then(n.bind(n,51174));c=await e(),s.vF.debug("[BackendConnectionCheck] Using tenant ID from Cognito: ".concat(c))}catch(e){s.vF.warn("[BackendConnectionCheck] Could not get tenant ID from Cognito:",(null==e?void 0:e.message)||"Unknown error")}try{s.vF.info("[BackendConnectionCheck] Trying health check without headers first...");let e=await a.A.get(h,(0,o._)({timeout:5e3,validateStatus:()=>!0},!1));if(e.status>=200&&e.status<300)return s.vF.info("[BackendConnectionCheck] Connection successful without tenant header:",e.data),{success:!0,status:e.status,message:"Connection successful",responseTime:0,data:e.data};s.vF.info("[BackendConnectionCheck] Basic health check returned ".concat(e.status,", trying with tenant ID..."))}catch(t){let e={message:(null==t?void 0:t.message)||"Unknown error",code:(null==t?void 0:t.code)||"UNKNOWN",isAxiosError:(null==t?void 0:t.isAxiosError)||!1,status:(null==t||null==(r=t.response)?void 0:r.status)||0,statusText:(null==t||null==(i=t.response)?void 0:i.statusText)||"",url:h};s.vF.warn("[BackendConnectionCheck] Basic health check failed:",e)}let l=Date.now(),u=a.A.create((0,o._)({timeout:5e3,validateStatus:()=>!0},!1));s.vF.info("[BackendConnectionCheck] Sending OPTIONS preflight request...");try{await u.options(h),s.vF.info("[BackendConnectionCheck] Preflight request successful")}catch(t){let e={message:(null==t?void 0:t.message)||"Unknown preflight error",code:(null==t?void 0:t.code)||"PREFLIGHT_ERROR",method:"OPTIONS"};s.vF.warn("[BackendConnectionCheck] Preflight error (continuing anyway):",e)}let d={};c&&(d["X-Tenant-ID"]=c);let C=await u.get(h,{headers:d}),f=Date.now()-l,A=C.status>=200&&C.status<300;return A?s.vF.info("[BackendConnectionCheck] Connection successful (".concat(f,"ms):"),C.data):s.vF.warn("[BackendConnectionCheck] Connection returned non-success status ".concat(C.status," (").concat(f,"ms):"),C.data),{success:A,status:C.status,message:A?"Connection successful":"Received status code ".concat(C.status),responseTime:f,data:C.data}}catch(t){let e={message:(null==t?void 0:t.message)||"Unknown error",code:(null==t?void 0:t.code)||"ERROR",isAxiosError:(null==t?void 0:t.isAxiosError)||!1,status:(null==t||null==(l=t.response)?void 0:l.status)||0,statusText:(null==t||null==(u=t.response)?void 0:u.statusText)||"",url:h,timestamp:new Date().toISOString()};((null==t?void 0:t.code)==="ECONNREFUSED"||(null==t?void 0:t.code)==="ECONNABORTED"||(null==t||null==(d=t.message)?void 0:d.includes("timeout")))&&(e.diagnosticInfo={backendUrl:c,networkAvailable:"undefined"!=typeof navigator&&navigator.onLine,sslEnabled:c.startsWith("https"),port:new URL(c).port||(c.startsWith("https")?"443":"80")}),s.vF.error("[BackendConnectionCheck] Connection failed:",e);try{s.vF.info("[BackendConnectionCheck] Attempting fallback connection check...");let e=await fetch(h,{method:"GET",mode:"cors",cache:"no-cache",credentials:"omit",headers:{Accept:"application/json"},redirect:"follow",timeout:3e3,signal:AbortSignal.timeout(3e3)});if(e.ok){s.vF.info("[BackendConnectionCheck] Fallback connection check successful");let t=await e.text();return{success:!0,status:e.status,message:"Connection successful via fallback method",fallbackData:t}}s.vF.warn("[BackendConnectionCheck] Fallback check failed with status: ".concat(e.status))}catch(e){s.vF.warn("[BackendConnectionCheck] Fallback connection check also failed:",(null==e?void 0:e.message)||"Unknown error")}return{success:!1,status:e.status||0,message:"Connection failed: ".concat(e.message),errorDetails:e,error:(null==t?void 0:t.toString())||"Unknown error",timestamp:new Date().toISOString()}}},m=l},42749:(e,t,n)=>{n.d(t,{vF:()=>s});let o={debug:0,info:1,warn:2,error:3},r="info",a=()=>!1,s={setLevel(e){void 0!==o[e]&&(r=e)},getLevel:()=>r,debug:(e,t)=>{},info:(e,t)=>{o[r]<=o.info&&(a()?void 0!==t?console.info("[SERVER INFO] ".concat(e),t):console.info("[SERVER INFO] ".concat(e)):void 0!==t?console.info(e,t):console.info(e))},warn:(e,t)=>{o[r]<=o.warn&&(a()?void 0!==t?console.warn("[SERVER WARN] ".concat(e),t):console.warn("[SERVER WARN] ".concat(e)):void 0!==t?console.warn(e,t):console.warn(e))},error:(e,t)=>{o[r]<=o.error&&(a()?void 0!==t?console.error("[SERVER ERROR] ".concat(e),t):console.error("[SERVER ERROR] ".concat(e)):void 0!==t?console.error(e,t):console.error(e))}}}}]);