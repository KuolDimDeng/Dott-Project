"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[84620],{26829:(e,t,a)=>{a.d(t,{ZL:()=>l,pR:()=>c});var o=a(94225),i=a(39641);class s extends o.U{constructor(){super((0,i.p)())}}var r=a(61573);class n extends o.U{constructor(){super((0,i.C)())}}var h=a(95730);class g{constructor(e){this._storage=e}get storage(){if(!this._storage)throw new h.h;return this._storage}setItem(e,t){this.storage.setItem(e,t)}getItem(e){return this.storage.getItem(e)}removeItem(e){this.storage.removeItem(e)}clear(){this.storage.clear()}}class u extends g{constructor(){super((0,i.C)())}}let l=new s;new n;let c=new u;new o.U(new r._)},27079:(e,t,a)=>{a.d(t,{R:()=>h});var o=a(90808),i=a(2242),s=a(41811),r=a(55413),n=a(83854);let h=e=>(0,o.A)(r.e,(0,i._)("InitiateAuth"),(0,s.T)(),{...n.C,...e})},61433:(e,t,a)=>{a.d(t,{S:()=>h});var o=a(45103),i=a(65184),s=a(84295);let r="amplify-signin-with-hostedUI",n="CognitoIdentityServiceProvider";class h{constructor(e){this.keyValueStorage=e}async clearOAuthInflightData(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId);await Promise.all([this.keyValueStorage.removeItem(e.inflightOAuth),this.keyValueStorage.removeItem(e.oauthPKCE),this.keyValueStorage.removeItem(e.oauthState)])}async clearOAuthData(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId);return await this.clearOAuthInflightData(),await this.keyValueStorage.removeItem(r),this.keyValueStorage.removeItem(e.oauthSignIn)}loadOAuthState(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId);return this.keyValueStorage.getItem(e.oauthState)}storeOAuthState(e){(0,o.$y)(this.cognitoConfig);let t=g(n,this.cognitoConfig.userPoolClientId);return this.keyValueStorage.setItem(t.oauthState,e)}loadPKCE(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId);return this.keyValueStorage.getItem(e.oauthPKCE)}storePKCE(e){(0,o.$y)(this.cognitoConfig);let t=g(n,this.cognitoConfig.userPoolClientId);return this.keyValueStorage.setItem(t.oauthPKCE,e)}setAuthConfig(e){this.cognitoConfig=e}async loadOAuthInFlight(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId);return await this.keyValueStorage.getItem(e.inflightOAuth)==="true"}async storeOAuthInFlight(e){(0,o.$y)(this.cognitoConfig);let t=g(n,this.cognitoConfig.userPoolClientId);await this.keyValueStorage.setItem(t.inflightOAuth,`${e}`)}async loadOAuthSignIn(){(0,o.$y)(this.cognitoConfig);let e=g(n,this.cognitoConfig.userPoolClientId),t=await this.keyValueStorage.getItem(r),[a,i]=(await this.keyValueStorage.getItem(e.oauthSignIn))?.split(",")??[];return{isOAuthSignIn:"true"===a||"true"===t,preferPrivateSession:"true"===i}}async storeOAuthSignIn(e,t=!1){(0,o.$y)(this.cognitoConfig);let a=g(n,this.cognitoConfig.userPoolClientId);await this.keyValueStorage.setItem(a.oauthSignIn,`${e},${t}`)}}let g=(e,t)=>(0,i.Qm)(s.f3)(e,t)},63702:(e,t,a)=>{a.d(t,{d:()=>o});function o({username:e,userPoolId:t,userPoolClientId:a}){if("undefined"==typeof window)return;let o=window.AmazonCognitoAdvancedSecurityData;if(void 0===o)return;let i=o.getData(e,t,a);return i?{EncodedData:i}:{}}},65184:(e,t,a)=>{a.d(t,{Uv:()=>l,Qm:()=>d});var o,i=a(45103),s=a(63061);let r={accessToken:"accessToken",idToken:"idToken",oidcProvider:"oidcProvider",clockDrift:"clockDrift",refreshToken:"refreshToken",deviceKey:"deviceKey",randomPasswordKey:"randomPasswordKey",deviceGroupKey:"deviceGroupKey",signInDetails:"signInDetails",oauthMetadata:"oauthMetadata"};var n=a(33182);(o||(o={})).InvalidAuthTokens="InvalidAuthTokens";let h={[o.InvalidAuthTokens]:{message:"Invalid tokens.",recoverySuggestion:"Make sure the tokens are valid."}},g=(0,n.p)(h),u="CognitoIdentityServiceProvider";class l{getKeyValueStorage(){if(!this.keyValueStorage)throw new s.l({name:"KeyValueStorageNotFoundException",message:"KeyValueStorage was not found in TokenStore"});return this.keyValueStorage}setKeyValueStorage(e){this.keyValueStorage=e}setAuthConfig(e){this.authConfig=e}async loadTokens(){try{let e=await this.getAuthKeys(),t=await this.getKeyValueStorage().getItem(e.accessToken);if(!t)throw new s.l({name:"NoSessionFoundException",message:"Auth session was not found. Make sure to call signIn."});let a=(0,i.Cq)(t),o=await this.getKeyValueStorage().getItem(e.idToken),r=o?(0,i.Cq)(o):void 0,n=await this.getKeyValueStorage().getItem(e.refreshToken)??void 0,h=await this.getKeyValueStorage().getItem(e.clockDrift)??"0",g=Number.parseInt(h),u=await this.getKeyValueStorage().getItem(e.signInDetails),l={accessToken:a,idToken:r,refreshToken:n,deviceMetadata:await this.getDeviceMetadata()??void 0,clockDrift:g,username:await this.getLastAuthUser()};return u&&(l.signInDetails=JSON.parse(u)),l}catch(e){return null}}async storeTokens(e){g(void 0!==e,o.InvalidAuthTokens);let t=e.username;await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(),t);let a=await this.getAuthKeys();await this.getKeyValueStorage().setItem(a.accessToken,e.accessToken.toString()),e.idToken?await this.getKeyValueStorage().setItem(a.idToken,e.idToken.toString()):await this.getKeyValueStorage().removeItem(a.idToken),e.refreshToken?await this.getKeyValueStorage().setItem(a.refreshToken,e.refreshToken):await this.getKeyValueStorage().removeItem(a.refreshToken),e.deviceMetadata&&(e.deviceMetadata.deviceKey&&await this.getKeyValueStorage().setItem(a.deviceKey,e.deviceMetadata.deviceKey),e.deviceMetadata.deviceGroupKey&&await this.getKeyValueStorage().setItem(a.deviceGroupKey,e.deviceMetadata.deviceGroupKey),await this.getKeyValueStorage().setItem(a.randomPasswordKey,e.deviceMetadata.randomPassword)),e.signInDetails?await this.getKeyValueStorage().setItem(a.signInDetails,JSON.stringify(e.signInDetails)):await this.getKeyValueStorage().removeItem(a.signInDetails),await this.getKeyValueStorage().setItem(a.clockDrift,`${e.clockDrift}`)}async clearTokens(){let e=await this.getAuthKeys();await Promise.all([this.getKeyValueStorage().removeItem(e.accessToken),this.getKeyValueStorage().removeItem(e.idToken),this.getKeyValueStorage().removeItem(e.clockDrift),this.getKeyValueStorage().removeItem(e.refreshToken),this.getKeyValueStorage().removeItem(e.signInDetails),this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),this.getKeyValueStorage().removeItem(e.oauthMetadata)])}async getDeviceMetadata(e){let t=await this.getAuthKeys(e),a=await this.getKeyValueStorage().getItem(t.deviceKey),o=await this.getKeyValueStorage().getItem(t.deviceGroupKey),i=await this.getKeyValueStorage().getItem(t.randomPasswordKey);return i&&o&&a?{deviceKey:a,deviceGroupKey:o,randomPassword:i}:null}async clearDeviceMetadata(e){let t=await this.getAuthKeys(e);await Promise.all([this.getKeyValueStorage().removeItem(t.deviceKey),this.getKeyValueStorage().removeItem(t.deviceGroupKey),this.getKeyValueStorage().removeItem(t.randomPasswordKey)])}async getAuthKeys(e){(0,i.$y)(this.authConfig?.Cognito);let t=e??await this.getLastAuthUser();return c(u,`${this.authConfig.Cognito.userPoolClientId}.${t}`)}getLastAuthUserKey(){(0,i.$y)(this.authConfig?.Cognito);let e=this.authConfig.Cognito.userPoolClientId;return`${u}.${e}.LastAuthUser`}async getLastAuthUser(){return await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())??"username"}async setOAuthMetadata(e){let{oauthMetadata:t}=await this.getAuthKeys();await this.getKeyValueStorage().setItem(t,JSON.stringify(e))}async getOAuthMetadata(){let{oauthMetadata:e}=await this.getAuthKeys(),t=await this.getKeyValueStorage().getItem(e);return t&&JSON.parse(t)}}let c=(e,t)=>d(r)(`${e}`,t);function d(e){let t=Object.values({...e});return(e,a)=>t.reduce((t,o)=>({...t,[o]:`${e}.${a}.${o}`}),{})}},75298:(e,t,a)=>{a.d(t,{B:()=>o});let o=()=>"undefined"!=typeof window&&void 0!==window.document},78010:(e,t,a)=>{a.d(t,{f:()=>i});var o=a(26829);let i=new(a(61433)).S(o.ZL)},84620:(e,t,a)=>{a.d(t,{Q:()=>T,o:()=>K});var o=a(26829),i=a(45103),s=a(88726),r=a(84295),n=a(63061),h=a(27079),g=a(32712),u=a(63702);let l=(e=>{let t;return async(...a)=>t||(t=new Promise((o,i)=>{e(...a).then(e=>{o(e)}).catch(e=>{i(e)}).finally(()=>{t=void 0})}))})(async({tokens:e,authConfig:t,username:a})=>{(0,i.$y)(t?.Cognito);let{userPoolId:o,userPoolClientId:l,userPoolEndpoint:c}=t.Cognito,d=(0,s.J)(o);(0,r.X4)(e);let y=e.refreshToken,k={REFRESH_TOKEN:y};e.deviceMetadata?.deviceKey&&(k.DEVICE_KEY=e.deviceMetadata.deviceKey);let f=(0,u.d)({username:a,userPoolId:o,userPoolClientId:l}),m=(0,h.R)({endpointResolver:(0,g.o)({endpointOverride:c})}),{AuthenticationResult:I}=await m({region:d},{ClientId:l,AuthFlow:"REFRESH_TOKEN_AUTH",AuthParameters:k,UserContextData:f}),S=(0,i.Cq)(I?.AccessToken??""),w=I?.IdToken?(0,i.Cq)(I.IdToken):void 0,{iat:v}=S.payload;if(!v)throw new n.l({name:"iatNotFoundException",message:"iat not found in access token"});return{accessToken:S,idToken:w,clockDrift:1e3*v-new Date().getTime(),refreshToken:y,username:a}});var c=a(65184),d=a(51148),y=a(75298);function k({expiresAt:e,clockDrift:t,tolerance:a=5e3}){return Date.now()+t+a>e}var f=a(31241),m=a(52008),I=a(78010),S=a(85782);class w{constructor(){this.waitForInflightOAuth=(0,y.B)()?async()=>{if(await I.f.loadOAuthInFlight())return this.inflightPromise||(this.inflightPromise=new Promise((e,t)=>{(0,S.I)(e)})),this.inflightPromise}:async()=>{}}setAuthConfig(e){I.f.setAuthConfig(e.Cognito),this.authConfig=e}setTokenRefresher(e){this.tokenRefresher=e}setAuthTokenStore(e){this.tokenStore=e}getTokenStore(){if(!this.tokenStore)throw new n.l({name:"EmptyTokenStoreException",message:"TokenStore not set"});return this.tokenStore}getTokenRefresher(){if(!this.tokenRefresher)throw new n.l({name:"EmptyTokenRefresherException",message:"TokenRefresher not set"});return this.tokenRefresher}async getTokens(e){let t;try{(0,i.$y)(this.authConfig?.Cognito)}catch(e){return null}await this.waitForInflightOAuth(),this.inflightPromise=void 0,t=await this.getTokenStore().loadTokens();let a=await this.getTokenStore().getLastAuthUser();if(null===t)return null;let o=!!t?.idToken&&k({expiresAt:(t.idToken?.payload?.exp??0)*1e3,clockDrift:t.clockDrift??0}),s=k({expiresAt:(t.accessToken?.payload?.exp??0)*1e3,clockDrift:t.clockDrift??0});return(e?.forceRefresh||o||s)&&null===(t=await this.refreshTokens({tokens:t,username:a}))?null:{accessToken:t?.accessToken,idToken:t?.idToken,signInDetails:t?.signInDetails}}async refreshTokens({tokens:e,username:t}){try{let{signInDetails:a}=e,o=await this.getTokenRefresher()({tokens:e,authConfig:this.authConfig,username:t});return o.signInDetails=a,await this.setTokens({tokens:o}),d.YZ.dispatch("auth",{event:"tokenRefresh"},"Auth",d.U9),o}catch(e){return this.handleErrors(e)}}handleErrors(e){if((0,m.e)(e),e.name!==f.m.NetworkError&&this.clearTokens(),d.YZ.dispatch("auth",{event:"tokenRefresh_failure",data:{error:e}},"Auth",d.U9),e.name.startsWith("NotAuthorizedException"))return null;throw e}async setTokens({tokens:e}){return this.getTokenStore().storeTokens(e)}async clearTokens(){return this.getTokenStore().clearTokens()}getDeviceMetadata(e){return this.getTokenStore().getDeviceMetadata(e)}clearDeviceMetadata(e){return this.getTokenStore().clearDeviceMetadata(e)}setOAuthMetadata(e){return this.getTokenStore().setOAuthMetadata(e)}getOAuthMetadata(){return this.getTokenStore().getOAuthMetadata()}}class v{constructor(){this.authTokenStore=new c.Uv,this.authTokenStore.setKeyValueStorage(o.ZL),this.tokenOrchestrator=new w,this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore),this.tokenOrchestrator.setTokenRefresher(l)}getTokens({forceRefresh:e}={forceRefresh:!1}){return this.tokenOrchestrator.getTokens({forceRefresh:e})}setKeyValueStorage(e){this.authTokenStore.setKeyValueStorage(e)}setAuthConfig(e){this.authTokenStore.setAuthConfig(e),this.tokenOrchestrator.setAuthConfig(e)}}let T=new v,{tokenOrchestrator:K}=T},85782:(e,t,a)=>{a.d(t,{I:()=>i,i:()=>s});let o=[],i=e=>{o.push(e)},s=()=>{for(;o.length;)o.pop()?.()}}}]);