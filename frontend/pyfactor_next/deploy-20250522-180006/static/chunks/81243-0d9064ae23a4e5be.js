"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[81243],{68143:(e,t,r)=>{r.r(t),r.d(t,{default:()=>A,fetch:()=>f,fetchData:()=>u,getAuthTokens:()=>F,getCurrentTenant:()=>m,getRequestTenantHeaders:()=>_,handleApiError:()=>d,logout:()=>P,post:()=>p,postData:()=>h,put:()=>g,putData:()=>v,setTenantId:()=>y,verifyTenantContext:()=>w});var n=r(55166),a=r(29729),o=r(42749),i=r(47856),s=r(75335),c=r(51174);let d=function(e){var t,r,n,a,s,c;let d=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{fallbackData:l=null,showNotification:u=!0,rethrow:f=!1,customMessage:h=null}=d,p={url:null==(t=e.config)?void 0:t.url,method:null==(r=e.config)?void 0:r.method,status:null==(n=e.response)?void 0:n.status,statusText:null==(a=e.response)?void 0:a.statusText,message:e.message,tenantContext:(0,i.E6)()};(null==(s=e.response)?void 0:s.data)&&(p.responseData=e.response.data),o.vF.error("[ApiService] Request failed:",p);let v=h||"An error occurred while processing your request.";if("ECONNABORTED"===e.code||(null==(c=e.message)?void 0:c.includes("timeout"))?v=h||"Request timed out. The server is taking too long to respond.":e.response?401===e.response.status||403===e.response.status?v=h||"Authentication error. Please login again.":404===e.response.status?v=h||"Resource not found.":e.response.status>=500&&(v=h||"Server error. Please try again later."):e.request&&(v=h||"No response received from server. Please check your connection."),u&&o.vF.warn(v),null!==l)return l;if(f)throw e;return null},l=e=>e.includes(".")||e.includes("download")||e.includes("print")||e.endsWith("/")?e:"".concat(e,"/"),u=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{useCache:r=!0,cacheTTL:c=null,params:u={},headers:f={},fallbackData:h=null,showErrorNotification:p=!0,timeout:v=3e4,forceRefresh:g=!1,tenantOverride:w=null,customMessage:y,notify:m=!0,skipAuthCheck:F=!1,maxRetries:P=2,enableRetry:A=!0}=t;try{let t=l(e);if(o.vF.debug("[ApiService] Fetching ".concat(t),{useCache:r,forceRefresh:g,tenantOverride:w?"custom":"default"}),r&&!g){let e=s.$.get(t,u);if(e)return o.vF.debug("[ApiService] Cache hit for ".concat(t)),e;o.vF.debug("[ApiService] Cache miss for ".concat(t))}let d=w?{"X-Tenant-ID":w}:_(),h=await a.SP.get(t,{params:u,headers:(0,n._)({},d,f),timeout:v});return(0,i.J_)(h),r&&h.data&&s.$.set(t,u,h.data,c),h.data}catch(e){return d(e,{fallbackData:h,showNotification:p,rethrow:!1,customMessage:y})}},f=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return u(e,t)},h=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{headers:c={},fallbackData:u=null,showErrorNotification:f=!0,invalidateCache:h=!0,timeout:p=3e4,tenantOverride:v=null,customMessage:g,maxRetries:w=1,enableRetry:y=!1}=r;try{let r,d=l(e);o.vF.debug("[ApiService] Posting to ".concat(d));let u=v?{"X-Tenant-ID":v}:_(),f={headers:(0,n._)({},u,c),timeout:p};return r=y&&w>0?await (0,a.qN)(()=>a.SP.post(d,t,f),w):await a.SP.post(d,t,f),(0,i.J_)(r),h&&s.$.invalidateStartingWith(d),r.data}catch(e){return d(e,{fallbackData:u,showNotification:f,rethrow:!1,customMessage:g})}},p=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return h(e,t,r)},v=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{headers:c={},fallbackData:u=null,showErrorNotification:f=!0,invalidateCache:h=!0,timeout:p=3e4,tenantOverride:v=null,customMessage:g}=r;try{let r=l(e);o.vF.debug("[ApiService] Putting to ".concat(r));let d=v?{"X-Tenant-ID":v}:_(),u=await a.SP.put(r,t,{headers:(0,n._)({},d,c),timeout:p});return(0,i.J_)(u),h&&s.$.invalidateStartingWith(r),u.data}catch(e){return d(e,{fallbackData:u,showNotification:f,rethrow:!1,customMessage:g})}},g=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return v(e,t,r)},w=async()=>{let e=(0,i.E6)();if(e&&e.tenantId)return o.vF.debug("[ApiService] Tenant context verified: ".concat(e.tenantId)),!0;let t=(0,c.getTenantId)();return t?(o.vF.debug("[ApiService] Setting tenant ID from saved preferences: ".concat(t)),await y(t),!0):(o.vF.warn("[ApiService] No tenant context available"),!1)},y=async e=>{if(!e)return void o.vF.warn("[ApiService] Attempted to set empty tenant ID");(0,i.ed)({tenantId:e,schemaName:(0,c.FB)(e)}),o.vF.debug("[ApiService] Tenant ID set: ".concat(e))},_=()=>({}),m=async()=>{try{return(await a.SP.get("/api/tenant/current/")).data}catch(e){return o.vF.error("[ApiService] Error getting current tenant:",e),null}},F=async()=>{try{{window.__APP_CACHE=window.__APP_CACHE||{},window.__APP_CACHE.auth=window.__APP_CACHE.auth||{};let{accessToken:e,idToken:t}=window.__APP_CACHE.auth;if(e&&t)return{accessToken:e,idToken:t}}return null}catch(e){return o.vF.error("[ApiService] Error getting auth tokens:",e),null}},P=async()=>{try{await a.SP.post("/api/auth/logout/"),window.__APP_CACHE=window.__APP_CACHE||{},window.__APP_CACHE.auth=window.__APP_CACHE.auth||{},window.__APP_CACHE.auth.accessToken=null,window.__APP_CACHE.auth.idToken=null,window.__APP_CACHE.auth.refreshToken=null}catch(e){throw o.vF.error("[ApiService] Error logging out:",e),e}},A={handleApiError:d,fetchData:u,fetch:f,postData:h,post:p,putData:v,put:g,verifyTenantContext:w,setTenantId:y,getRequestTenantHeaders:_,getCurrentTenant:m,getAuthTokens:F,logout:P}},75335:(e,t,r)=>{r.d(t,{$:()=>o,d:()=>i});var n=r(42749);class a{set(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:6e4;if(e&&(this.cache.set(e,t),r>0)){let t=Date.now()+r;this.expirations.set(e,t),setTimeout(()=>{this.expirations.get(e)<=Date.now()&&(this.cache.delete(e),this.expirations.delete(e))},r)}}get(e){if(e&&this.cache.has(e)){let t=this.expirations.get(e);if(t&&t<=Date.now()){this.cache.delete(e),this.expirations.delete(e);return}return this.cache.get(e)}}has(e){if(!e||!this.cache.has(e))return!1;let t=this.expirations.get(e);return!(t&&t<=Date.now())||(this.cache.delete(e),this.expirations.delete(e),!1)}delete(e){e&&(this.cache.delete(e),this.expirations.delete(e))}clear(){this.cache.clear(),this.expirations.clear()}invalidatePattern(e){let t=e instanceof RegExp?e:new RegExp(e);for(let e of this.cache.keys())t.test(e)&&(n.vF.debug("[DataCache] Invalidating cached key matching pattern: ".concat(e)),this.delete(e))}constructor(){this.cache=new Map,this.expirations=new Map}}let o=new a,i=new a},81243:(e,t,r)=>{r.d(t,{GX:()=>x});var n=r(55166),a=r(68387),o=r(42749),i=r(68143),s=r(75335),c=r(29729),d=r(44367),l=r(82354);window.__APP_CACHE=window.__APP_CACHE||{},window.__PENDING_PROFILE_REQUEST=window.__PENDING_PROFILE_REQUEST||null;let u=null,f=0,h=new Map,p=()=>{o.vF.debug("[UserService] Clearing user cache"),u=null,f=0,h.clear(),window.__APP_CACHE&&(window.__APP_CACHE.userProfile=null)},v=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{role:t=null,status:r=null,search:n=null}=e,a={};t&&(a.role=t),r&&(a.status=r),n&&(a.search=n);try{return await fetch("/api/tenant/users/",{params:a,useCache:!1})}catch(e){return o.vF.error("[UserService] Error fetching tenant users:",e),[]}},g={getCurrentUser:async function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0],o.vF.debug("[UserService] Getting current user");try{return await (0,d.O)()}catch(e){throw o.vF.error("[UserService] Error getting current user:",e),e}}};var w=r(51174),y=r(24818);window.__APP_CACHE=window.__APP_CACHE||{},window.__APP_CACHE.offline=window.__APP_CACHE.offline||{};let _=e=>{if(!e)return"PROD-"+Math.random().toString(36).substr(2,6).toUpperCase();let t=e.substring(0,4).toUpperCase(),r=Math.random().toString(36).substr(2,6).toUpperCase();return"".concat(t,"-").concat(r)},m={DETAIL_TTL:3e5,STATS_TTL:3e5},F=[{id:"1",name:"Sample Product 1",product_code:"SP001",description:"This is a sample product for development",stock_quantity:25,reorder_level:5,price:19.99,is_for_sale:!0},{id:"2",name:"Sample Product 2",product_code:"SP002",description:"Another sample product for testing",stock_quantity:10,reorder_level:3,price:29.99,is_for_sale:!0},{id:"3",name:"Office Supplies",product_code:"OS003",description:"Various office supplies including pens, paper, and staplers",stock_quantity:150,reorder_level:30,price:12.5,is_for_sale:!0},{id:"4",name:"Desk Chair",product_code:"DC004",description:"Ergonomic office chair with adjustable height",stock_quantity:8,reorder_level:2,price:199.99,is_for_sale:!0},{id:"5",name:"Laptop Stand",product_code:"LS005",description:"Adjustable laptop stand for better ergonomics",stock_quantity:15,reorder_level:5,price:49.99,is_for_sale:!0}];new Date(Date.now()-2592e6).toISOString(),new Date().toISOString(),new Date().toISOString(),new Date(Date.now()+2592e6).toISOString();let P=()=>[...F],A=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};try{let r=(0,n._)({},{useCache:!0,cacheTTL:300,handleErrors:!0,timeout:15e3,notify:!1},t);o.vF.debug("Fetching inventory products with options:",{options:e,fetchOptions:r}),await I();let s=(0,w.fy)();o.vF.debug("Using tenant headers for inventory request:",s);try{o.vF.info("Running schema and table diagnostic...");let e=s["X-Tenant-ID"];if(e){let t=await fetch("/api/inventory/diagnostic",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})});if(t.ok){let r=await t.json();if(o.vF.info("Diagnostic result:",r),r.diagnosticInfo){let{schema:t,migrations:n,testData:a}=r.diagnosticInfo;if(t.exists&&!t.hasInventoryProductTable&&!n.applied){o.vF.warn("inventory_product table is missing, attempting to run migrations...");let t=await fetch("/api/schema/migrate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e,schemaName:r.diagnosticInfo.tenant.schemaName,app:"inventory"})});t.ok?o.vF.info("Successfully ran migrations:",await t.json()):o.vF.error("Migration failed:",await t.text())}if((t.hasInventoryProductTable||n.applied)&&!a.created){o.vF.info("Creating test product after diagnostics...");let t=await fetch("/api/inventory/seed",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})});t.ok?o.vF.info("Successfully created test product:",await t.json()):o.vF.warn("Failed to create test product:",await t.text())}}}else o.vF.warn("Diagnostics failed, continuing with API call:",await t.text())}}catch(e){o.vF.warn("Error running diagnostics:",e)}let c=await (0,i.fetchData)("/api/inventory/ultra/products/",(0,a._)((0,n._)({},r),{headers:(0,n._)({},r.headers||{},s),customMessage:"Unable to load products from ultra-fast API. Trying standard API..."}));if(c&&Array.isArray(c)&&c.length>0)return o.vF.info("Retrieved ".concat(c.length," products from ultra-fast API")),E(c),c;if(c&&c.results&&Array.isArray(c.results)&&c.results.length>0)return o.vF.info("Retrieved ".concat(c.results.length," products from ultra-fast API (paginated response)")),E(c.results),c.results;if(c&&"object"==typeof c&&void 0!==c.count)if(0!==c.count&&c.results){if(Array.isArray(c.results))return o.vF.info("Retrieved ".concat(c.results.length,"/").concat(c.count," products from ultra-fast API (DRF pagination)")),E(c.results),c.results}else o.vF.warn("API returned empty paginated results (DRF format)");if(o.vF.info("Ultra endpoint returned no data, trying standard endpoint"),(c=await (0,i.fetchData)("/api/inventory/products/",(0,a._)((0,n._)({},r),{headers:(0,n._)({},r.headers||{},s),customMessage:"Unable to load products from standard API. Trying offline data..."})))&&Array.isArray(c))if(0!==c.length)return o.vF.info("Retrieved ".concat(c.length," products from standard API")),E(c),c;else o.vF.warn("API returned empty products array");else if(c&&c.results&&Array.isArray(c.results))if(0!==c.results.length)return o.vF.info("Retrieved ".concat(c.results.length," products from standard API (paginated)")),E(c.results),c.results;else o.vF.warn("API returned empty paginated products array");else if(c&&c.detail&&c.detail.includes("Resolver404")){o.vF.error("API endpoint not found (Resolver404), likely a tenant schema issue");let e=s["X-Tenant-ID"];if(e)try{o.vF.warn("Attempting to diagnose and fix schema issue...");let t=await fetch("/api/inventory/diagnostic",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})});if(t.ok){let e=await t.json();if(o.vF.info("Schema diagnostic results:",e),e.recommendations&&e.recommendations.length>0){let t="Schema issue detected: ".concat(e.recommendations[0]);throw Error(t)}}}catch(e){o.vF.error("Error running schema diagnostics:",e)}throw Error("API endpoint not found. Products list might be unavailable in your tenant schema.")}else if(c&&c.error){if(o.vF.error("API returned error:",c.error),o.vF.debug("Full error response:",c),c.error.includes("does not exist")&&c.error.includes("table"))try{o.vF.warn("Detected missing table error, attempting to run migrations...");let e=s["X-Tenant-ID"],t=s["X-Schema-Name"];if(e&&t){let r=await fetch("/api/schema/migrate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e,schemaName:t,app:"inventory"})});if(r.ok)throw o.vF.info("Successfully ran migrations:",await r.json()),Error("Database tables were missing. They have been created. Please try again.");o.vF.error("Migration failed:",await r.text())}}catch(e){o.vF.error("Error running migrations:",e)}throw Error(c.error)}else o.vF.warn("Invalid response format from API:",c);let d=D();if(d&&d.length>0)return o.vF.info("Retrieved ".concat(d.length," products from offline storage")),d;return o.vF.info("No data available, using mock data"),P()}catch(t){o.vF.error("Error fetching products:",t);let e=D();if(e&&e.length>0)return o.vF.info("Retrieved ".concat(e.length," products from offline storage after error")),e;return o.vF.info("No offline data available after error, using mock data"),P()}},T=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,n._)({useCache:!0,cacheTTL:m.STATS_TTL,fallbackData:{total_products:0,low_stock_count:0,total_value:0,avg_price:0}},e);try{await I();let e=(0,w.fy)();o.vF.debug("Using tenant headers for product stats request:",e);let r=(0,a._)((0,n._)({},t),{headers:(0,n._)({},t.headers||{},e)}),s=await (0,i.fetchData)("/api/inventory/ultra/products/stats/",r);if(s&&"object"==typeof s)return o.vF.info("Successfully retrieved product stats"),s;throw o.vF.warn("Invalid response format from stats API:",s),Error("Invalid stats response format")}catch(t){o.vF.error("Error fetching product stats:",t);let e=D();if(e.length>0)return k(e);return k(F)}},S=async e=>{var t,r,a,i,s,c,d,l,u,f,h,p;try{o.vF.info("Creating product:",e),e.product_code||(e.product_code=_(e.name));try{let e=await (0,y.$)({forceRefresh:!0});if((null==(t=e.tokens)?void 0:t.idToken)&&(null==(r=e.tokens)?void 0:r.accessToken))o.vF.info("Session refreshed successfully before product creation"),(0,w.h_)({accessToken:e.tokens.accessToken.toString(),idToken:e.tokens.idToken.toString()});else if(o.vF.error("Failed to get valid tokens from refreshed session"),window.location)throw window.location.href="/auth/signin?error=session_expired",Error("Your session has expired. Please sign in again.")}catch(e){o.vF.error("Error refreshing session before product creation:",e)}try{await I({validateSchema:!0,diagnoseTables:!0});let e=(0,w.fy)();o.vF.debug("Using tenant headers for product creation:",e);let t=e["X-Tenant-ID"];if(t){let r=await fetch("/api/inventory/diagnostic",{method:"POST",headers:(0,n._)({"Content-Type":"application/json"},e),body:JSON.stringify({tenantId:t})});if(r.ok){let a=await r.json();if(o.vF.info("Pre-creation diagnostics result:",a),a.diagnosticInfo){let{schema:r,migrations:i}=a.diagnosticInfo;if(r.exists&&!r.hasInventoryProductTable){o.vF.warn("inventory_product table is missing, running migrations...");let r=a.diagnosticInfo.tenant.schemaName,i=await fetch("/api/schema/migrate",{method:"POST",headers:(0,n._)({"Content-Type":"application/json"},e),body:JSON.stringify({tenantId:t,schemaName:r,app:"inventory"})});if(i.ok)o.vF.info("Successfully ran migrations:",await i.json());else throw o.vF.error("Migration failed:",await i.text()),Error("Failed to create required database tables. Please try again later.")}}}else if(401===r.status)throw o.vF.error("Authentication error during diagnostics check"),Error("Authentication required - please log in again")}}catch(e){if(o.vF.error("Error setting up schema for product creation:",e),e.message.includes("Authentication")||e.message.includes("session")||401===e.status)throw e}let a=(0,w.fy)();try{let t=await fetch("/api/inventory/products/",{method:"POST",headers:(0,n._)({"Content-Type":"application/json"},a),body:JSON.stringify(e)});if(!t.ok){if(401===t.status)throw Error("Authentication required - please log in again");let e=await t.json().catch(()=>({}));throw Error(e.message||"Server error: ".concat(t.status))}let r=await t.json();return o.vF.info("Product created successfully:",r),r}catch(e){throw o.vF.error("Fetch error during product creation:",e),e}}catch(r){if(o.vF.error("Error creating product:",r),(null==(a=r.response)?void 0:a.status)===401||401===r.status||(null==(i=r.message)?void 0:i.includes("No valid session"))||(null==(s=r.message)?void 0:s.includes("Authentication required"))||(null==(d=r.response)||null==(c=d.data)?void 0:c.code)==="session_expired"){o.vF.error("Authentication error when creating product:",r);try{let t=await (0,y.$)({forceRefresh:!0});if((null==(h=t.tokens)?void 0:h.idToken)&&(null==(p=t.tokens)?void 0:p.accessToken))return(0,w.h_)({accessToken:t.tokens.accessToken.toString(),idToken:t.tokens.idToken.toString()}),o.vF.info("Session refreshed successfully, retrying product creation"),await new Promise(e=>setTimeout(e,1e3)),S(e);throw Error("Authentication required - please log in again")}catch(e){throw o.vF.error("Failed to refresh session:",e),window.location&&(window.location.href="/auth/signin?error=session_expired"),Error("Your session has expired. Please sign in again.")}}let t=(null==(u=r.response)||null==(l=u.data)?void 0:l.detail)||r.message;if((null==(f=r.response)?void 0:f.status)===500&&t.includes("relation")&&t.includes("does not exist")){o.vF.error("Database relation error, likely missing table:",t);try{let t=(0,w.fy)(),r=t["X-Tenant-ID"],a=t["X-Schema-Name"];if(r&&a){o.vF.info("Attempting to run migrations to fix missing table issue...");let i=await fetch("/api/schema/migrate",{method:"POST",headers:(0,n._)({"Content-Type":"application/json"},t),body:JSON.stringify({tenantId:r,schemaName:a,app:"inventory"})});if(i.ok)return o.vF.info("Successfully ran migrations:",await i.json()),await new Promise(e=>setTimeout(e,1e3)),S(e)}}catch(e){o.vF.error("Error in recovery attempt:",e)}throw Error("Could not create product due to database setup issues. Please try again or contact support.")}throw r}},b=async()=>{o.vF.debug("Prefetching essential inventory data");try{await I(),A({page:1,view_mode:"ultra"}).catch(e=>{o.vF.warn("Failed to prefetch products:",e)}),T().catch(e=>{o.vF.warn("Failed to prefetch product stats:",e)}),"requestIdleCallback"in window&&window.requestIdleCallback(()=>{o.vF.debug("Prefetching additional inventory data during browser idle time"),A({page:1,view_mode:"with_department"}).catch(e=>{o.vF.warn("Failed to prefetch products with department:",e)})},{timeout:5e3})}catch(e){o.vF.error("Error prefetching essential inventory data:",e)}},I=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let{validateSchema:t=!0,diagnoseTables:r=!0}=e,n=(0,w.getTenantId)();if(n){if(o.vF.debug("Using existing tenant ID: ".concat(n)),t)try{await C(n,{diagnoseTables:r})}catch(e){o.vF.warn("Schema validation failed, but continuing with existing tenant ID: ".concat(e.message))}return n}o.vF.info("No tenant ID found, validating and setting one");let a=await (0,w.Nf)();if(!a)throw o.vF.error("Failed to validate tenant ID, inventory operations may fail"),Error("Failed to validate tenant ID");if(o.vF.info("Validated tenant ID: ".concat(a)),t)try{await C(a,{diagnoseTables:r})}catch(e){o.vF.warn("Schema validation failed for new tenant ID: ".concat(e.message))}return a}catch(e){throw o.vF.error("Error ensuring tenant ID:",e),e}},C=async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{diagnoseTables:r=!0}=t;if(!e)throw Error("Tenant ID is required for schema validation");o.vF.debug("Validating schema for tenant ".concat(e));try{let t=await fetch("/api/tenant/validate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})});if(!t.ok)throw Error("Tenant validation failed with status ".concat(t.status));let n=await t.json();if(!n.valid&&n.correctTenantId&&(o.vF.warn("Tenant ".concat(e," is not valid, using corrected tenant ").concat(n.correctTenantId)),await setTenantId(n.correctTenantId),e=n.correctTenantId),!1===n.schemaExists&&(o.vF.error("Schema for tenant ".concat(e," does not exist")),r))try{o.vF.info("Running diagnostics for tenant ".concat(e));let t=await fetch("/api/inventory/diagnostic",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})});if(t.ok){let r=await t.json();return o.vF.info("Diagnostics completed:",r),{tenantId:e,validationData:n,diagnosticData:r}}}catch(e){o.vF.error("Error running diagnostics: ".concat(e.message))}if(n.tables&&Array.isArray(n.tables)&&!n.tables.includes("inventory_product")&&r){o.vF.warn("inventory_product table not found in schema, attempting to run migrations");try{let t="tenant_".concat(e.replace(/-/g,"_")),r=await fetch("/api/schema/migrate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e,schemaName:t,app:"inventory"})});if(r.ok){let t=await r.json();o.vF.info("Successfully ran migrations:",t);try{(await fetch("/api/inventory/seed",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({tenantId:e})})).ok&&o.vF.info("Successfully created test product")}catch(e){o.vF.warn("Error creating test product: ".concat(e.message))}}else o.vF.error("Migration failed:",await r.text())}catch(e){o.vF.error("Error running migrations: ".concat(e.message))}}return{tenantId:e,validationData:n}}catch(e){throw o.vF.error("Error validating tenant schema: ".concat(e.message)),Error("Schema validation failed: ".concat(e.message))}},E=e=>{if(e&&Array.isArray(e)&&0!==e.length)try{window.__APP_CACHE||(window.__APP_CACHE={}),window.__APP_CACHE.offline||(window.__APP_CACHE.offline={}),window.__APP_CACHE.offline.products=e,window.__APP_CACHE.offline.productsTimestamp=Date.now(),o.vF.debug("Stored ".concat(e.length," products in app cache for offline use"))}catch(e){o.vF.error("Failed to store products for offline use:",e)}},D=()=>{try{var e,t;if(null==(t=window.__APP_CACHE)||null==(e=t.offline)?void 0:e.products)return o.vF.debug("Retrieved ".concat(window.__APP_CACHE.offline.products.length," products from app cache")),window.__APP_CACHE.offline.products;return o.vF.debug("No products found in app cache for offline use"),[]}catch(e){return o.vF.error("Failed to get offline products:",e),[]}},k=e=>{if(!Array.isArray(e)||0===e.length)return{total_products:0,low_stock_count:0,total_value:0,avg_price:0};let t=e.length,r=e.filter(e=>e.stock_quantity<e.reorder_level).length,n=e.reduce((e,t)=>e+(t.price||0)*(t.stock_quantity||0),0),a=e.reduce((e,t)=>e+(t.price||0),0)/t;return{total_products:t,low_stock_count:r,total_value:n,avg_price:a}},x={getProducts:A,getProductStats:T,getProductById:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)return o.vF.error("Product ID is required"),null;let r=(0,n._)({useCache:!0,cacheTTL:m.DETAIL_TTL},t);try{await I();let t=(0,w.fy)();o.vF.debug("Using tenant headers for product ID ".concat(e," request:"),t);let s=(0,a._)((0,n._)({},r),{headers:(0,n._)({},r.headers||{},t)}),c=await (0,i.fetchData)("/api/inventory/products/".concat(e,"/"),s);if(c&&"object"==typeof c)return o.vF.info("Successfully retrieved product ".concat(e)),c;throw o.vF.warn("Invalid response format for product ".concat(e,":"),c),Error("Invalid product response format")}catch(n){o.vF.error("Error fetching product ".concat(e,":"),n);let t=D().find(t=>t.id===e);if(t)return o.vF.info("Found product ".concat(e," in offline storage")),t;let r=F.find(t=>t.id===e);return r?o.vF.info("Using mock data for product ".concat(e)):o.vF.error("Product ".concat(e," not found in any data source")),r||null}},getProductByCode:async function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)return o.vF.error("Product code is required"),null;let r=(0,n._)({useCache:!0,cacheTTL:m.DETAIL_TTL},t);try{return await (0,i.fetchData)("/api/inventory/ultra/products/code/".concat(e,"/"),r)}catch(r){o.vF.error("Error fetching product by code ".concat(e,":"),r);let t=D().find(t=>t.product_code===e);if(t)return t;return F.find(t=>t.product_code===e)||null}},createProduct:S,updateProduct:async(e,t)=>{if(!e)throw o.vF.error("Product ID is required for update"),Error("Product ID is required for update");try{return o.vF.info("Updating product ".concat(e,":"),t),await (0,i.fetchData)("/api/inventory/products/".concat(e,"/"),{invalidateCache:["/api/inventory/products/","/api/inventory/ultra/products/","/api/inventory/products/".concat(e,"/")]},t)}catch(t){throw o.vF.error("Error updating product ".concat(e,":"),t),t}},deleteProduct:async e=>{if(!e)throw o.vF.error("Product ID is required for deletion"),Error("Product ID is required for deletion");try{return o.vF.info("Deleting product ".concat(e)),await (0,i.fetchData)("/api/inventory/products/".concat(e,"/"),{invalidateCache:["/api/inventory/products/","/api/inventory/ultra/products/","/api/inventory/products/".concat(e,"/")]}),!0}catch(t){throw o.vF.error("Error deleting product ".concat(e,":"),t),t}},prefetchEssentialData:b,clearInventoryCache:()=>{o.vF.debug("Clearing inventory cache"),s.d.clearTenant()},storeProductsOffline:E,getOfflineProducts:D,getMockProducts:P,printProductBarcode:async e=>{try{var t,r,n,a,s,c;o.vF.debug("[InventoryService] Printing barcode for product ID: ".concat(e));let d=await g.getCurrentUser({forceFresh:!1,withTenant:!0});o.vF.debug("[InventoryService] User context for barcode generation:",{userId:null==d?void 0:d.sub,email:null==d?void 0:d.email,hasTenant:!!(null==d?void 0:d.tenant)});let l=null;if(null==d||null==(t=d.tenant)?void 0:t.id)l=d.tenant.id,o.vF.debug("[InventoryService] Using tenant ID from user data for barcode: ".concat(l));else{let e=await (0,i.fetchData)("/api/tenant/context",{method:"GET",headers:{Authorization:"Bearer ".concat(null==d||null==(n=d.tokens)?void 0:n.accessToken)}});if(o.vF.info("[InventoryService] Fallback tenant context for barcode:",e),!(l=(null==e||null==(a=e.fromContext)?void 0:a.tenantId)||(null==e?void 0:e.fromCookie)||(null==e?void 0:e.fromAppCache)))try{let e=await (0,i.fetchData)("/api/tenant/current",{method:"GET",headers:{Authorization:"Bearer ".concat(null==d||null==(s=d.tokens)?void 0:s.accessToken)}});e&&e.id&&(l=e.id,o.vF.info("[InventoryService] Found tenant ID from API for barcode: ".concat(l)))}catch(e){o.vF.error("[InventoryService] Error getting tenant for barcode:",e)}}if(l)try{await (0,i.fetchData)("/api/tenant/set",{method:"POST",headers:{Authorization:"Bearer ".concat(null==d||null==(c=d.tokens)?void 0:c.accessToken),"X-Tenant-ID":l},body:JSON.stringify({tenantId:l})}),o.vF.info("[InventoryService] Set tenant ID to ".concat(l," for barcode printing"))}catch(e){o.vF.error("[InventoryService] Error setting tenant ID for barcode:",e)}else o.vF.error("[InventoryService] No tenant ID available for barcode printing, operation may fail");let u=l?"tenant_".concat(l.replace(/-/g,"_")):null,f=await (0,i.fetchData)("/api/auth/tokens",{method:"GET",headers:{Authorization:"Bearer ".concat(null==d||null==(r=d.tokens)?void 0:r.accessToken)}});if(!f||!f.accessToken)throw Error("Authentication required to print barcode");let h={Authorization:"Bearer ".concat(f.accessToken)};l&&(h["X-Tenant-ID"]=l,u&&(h["X-Schema-Name"]=u),h["X-Business-ID"]=l);let p=await (0,i.fetchData)("/api/inventory/products/".concat(e,"/print-barcode/"),{responseType:"blob",headers:h});return o.vF.info("[InventoryService] Barcode generated successfully"),p.data}catch(t){throw o.vF.error("[InventoryService] Error printing barcode:",{error:t.message||t,productId:e}),t}}}}}]);