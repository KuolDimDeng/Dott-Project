
import { NextResponse } from 'next/server';
import { isPublicRoute } from '@/utils/authUtils';

// Initialize the tenant context in middleware
export async function middleware(req) {
  const { pathname } = req.nextUrl;
  
  // Skip tenant check for public routes
  if (isPublicRoute(pathname)) {
    console.log('[TenantMiddleware] Skipping tenant check for public route:', pathname);
    return NextResponse.next();
  }
  
  // For other routes, get tenant ID from query params, headers, or cookies
  const tenantId = 
    req.nextUrl.searchParams.get('tenantId') ||
    req.cookies.get('tenantId')?.value ||
    req.cookies.get('businessid')?.value;
  
  if (!tenantId) {
    console.warn('[TenantMiddleware] No tenant ID found for route:', pathname);
    
    // Check if this is an API route - return 403 for API routes without tenant ID
    if (pathname.startsWith('/api/') && !pathname.startsWith('/api/auth/')) {
      return NextResponse.json(
        { error: 'Tenant ID is required' },
        { status: 403 }
      );
    }
    
    // For non-API routes without tenant ID, redirect to home
    if (!pathname.startsWith('/_next/') && !pathname.includes('.')) {
      return NextResponse.redirect(new URL('/', req.url));
    }
  }
  
  // Continue to the route with tenant ID
  return NextResponse.next();
}

export const config = {
  matcher: [
    // Apply this middleware to all routes except static assets
    '/((?!_next/static|_next/image|favicon.ico|public/|assets/).*)',
  ],
};
