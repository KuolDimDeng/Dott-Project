{
  "permissions": {
    "allow": [
      "Bash(./fix-browserslist.sh)",
      "Bash(./sync_tenant_tables.sh)",
      "Bash(PGPASSWORD=postgres psql -h localhost -U postgres -l)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(find:*)",
      "Bash(git add:*)",
      "Bash(git checkout:*)",
      "Bash(git commit:*)",
      "Bash(grep:*)",
      "Bash(ls -la package*)",
      "Bash(ls)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm run build:*)",
      "Bash(npm run clear:*)",
      "Bash(npm run dev:*)",
      "Bash(npx browserslist)",
      "Bash(pip install:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm remove:*)",
      "Bash(pnpm run dev:*)",
      "Bash(pnpm run:*)",
      "Bash(psql:*)",
      "Bash(python manage.py reset_db_main:*)",
      "Bash(python manage.py:*)",
      "Bash(python3 manage.py shell:*)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(source:*)",
      "Bash(touch:*)",
      "Bash(aws logs:*)",
      "Bash(aws elasticbeanstalk request-environment-info:*)",
      "Bash(./scripts/deploy_fixed_dottapps.sh:*)",
      "Bash(./scripts/deploy_optimized_dottapps.sh:*)",
      "Bash(aws elasticbeanstalk list-available-solution-stacks:*)",
      "Bash(git push:*)",
      "Bash(./deploy-to-eb.sh:*)",
      "Bash(./deploy-with-aws-cli.sh)",
      "Bash(./deploy-clean.sh:*)",
      "Bash(aws elasticbeanstalk describe-environments:*)",
      "Bash(aws elasticbeanstalk describe-events:*)",
      "Bash(aws elasticbeanstalk retrieve-environment-info:*)",
      "Bash(eb deploy:*)",
      "Bash(__NEW_LINE__ aws elasticbeanstalk create-environment --application-name DottApps --environment-name DottApps-env-clean --solution-stack-name \"64bit Amazon Linux 2023 v4.5.2 running Docker\" --version-label \"clean-deployment-20250529-200047\" --option-settings file://environment-config.json --region us-east-1)",
      "Bash(__NEW_LINE__ aws apprunner create-vpc-connector --vpc-connector-name dott-vpc-connector --subnets subnet-0cc4a92e849ff4b13 subnet-005ad102daaebca3a --region us-east-1)",
      "Bash(__NEW_LINE__ aws apprunner create-service --cli-input-json file://apprunner-simple-config.json --region us-east-1)",
      "Bash(aws apprunner describe-service:*)",
      "Bash(./deploy-to-apprunner.sh:*)",
      "Bash(./deploy-with-codebuild.sh)",
      "Bash(brew install:*)",
      "Bash(open:*)",
      "Bash(ln:*)",
      "Bash(export:*)",
      "Bash(docker:*)",
      "Bash(./deploy-simple.sh)",
      "Bash(killall:*)",
      "Bash(./deploy-via-codebuild-fixed.sh:*)",
      "Bash(tar:*)",
      "Bash(aws s3 cp:*)",
      "Bash(./create-minimal-source.sh:*)",
      "Bash(./create-essential-source.sh:*)",
      "Bash(./create-final-source.sh:*)",
      "Bash(aws codebuild start-build:*)",
      "Bash(aws codebuild batch-get-builds:*)",
      "Bash(./create-root-dockerfile.sh:*)",
      "Bash(./create-ultra-minimal.sh:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm build:*)",
      "Bash(npm view:*)",
      "Bash(vercel:*)",
      "Bash(./trigger-render-deployment.sh:*)",
      "Bash(./monitor-render-deployment.sh:*)",
      "Bash(./test-deployment-success.sh:*)",
      "Bash(./force-backend-deployment.sh:*)",
      "Bash(./deploy-frontend-render.sh:*)",
      "Bash(git reset:*)"
    ],
    "deny": []
  }
}