version: '3.8'

services:
  backend:
    build:
      context: ./backend/pyfactor
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=pyfactor.settings
      - DJANGO_DEBUG=True
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend/pyfactor:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    command: ["./entrypoint.sh", "python", "manage.py", "runserver", "0.0.0.0:8000"]

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  frontend:
    build:
      context: ./frontend/pyfactor_next
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/pyfactor_next:/app
      - /app/node_modules
      - /app/.next
      - /app/.pnpm-store
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

volumes:
  postgres_data:
  static_volume:
  media_volume: