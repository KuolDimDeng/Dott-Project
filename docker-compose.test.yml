version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: dott-test-db
    environment:
      POSTGRES_DB: pyfactor_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - test_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: dott-test-redis
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  backend:
    build:
      context: ./backend/pyfactor
      dockerfile: Dockerfile
    container_name: dott-test-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/pyfactor_test
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=pyfactor.settings
      - SECRET_KEY=test-secret-key-for-local-development
      - DEBUG=True
      - ALLOWED_HOSTS=*
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    ports:
      - "8001:8000"  # Different port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/pyfactor:/app
    command: |
      sh -c "
        echo 'Waiting for database...' &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        echo 'Starting development server...' &&
        python manage.py runserver 0.0.0.0:8000
      "

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend/pyfactor_next
      dockerfile: Dockerfile.dev
    container_name: dott-test-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_BASE_URL=http://localhost:3001
    ports:
      - "3001:3000"  # Different port
    depends_on:
      - backend
    volumes:
      - ./frontend/pyfactor_next:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  # Nginx Reverse Proxy (mimics Cloudflare)
  nginx:
    image: nginx:alpine
    container_name: dott-test-proxy
    ports:
      - "8080:80"
    volumes:
      - ./nginx-test.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  test_postgres_data:

networks:
  default:
    name: dott-test-network