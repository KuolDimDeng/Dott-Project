"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_utils_stubs_pdfjs-stub_js"],{

/***/ "(app-pages-browser)/./src/utils/stubs/pdfjs-stub.js":
/*!***************************************!*\
  !*** ./src/utils/stubs/pdfjs-stub.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnnotationLayer: () => (/* binding */ AnnotationLayer),\n/* harmony export */   GlobalWorkerOptions: () => (/* binding */ GlobalWorkerOptions),\n/* harmony export */   LinkTarget: () => (/* binding */ LinkTarget),\n/* harmony export */   PDFWorker: () => (/* binding */ PDFWorker),\n/* harmony export */   RenderingCancelledException: () => (/* binding */ RenderingCancelledException),\n/* harmony export */   SVGGraphics: () => (/* binding */ SVGGraphics),\n/* harmony export */   TextLayer: () => (/* binding */ TextLayer),\n/* harmony export */   build: () => (/* binding */ build),\n/* harmony export */   createObjectURL: () => (/* binding */ createObjectURL),\n/* harmony export */   createValidAbsoluteUrl: () => (/* binding */ createValidAbsoluteUrl),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getDocument: () => (/* binding */ getDocument),\n/* harmony export */   renderTextLayer: () => (/* binding */ renderTextLayer),\n/* harmony export */   shadow: () => (/* binding */ shadow),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/**\n * More comprehensive stub for pdfjs-dist to prevent parsing errors\n * Fixes \"Cannot read properties of null (reading '0')\" error\n */ const pdfjsLib = {\n    GlobalWorkerOptions: {\n        workerSrc: '',\n        set workerSrc (value){\n            this._workerSrc = value;\n        },\n        get workerSrc () {\n            return this._workerSrc || '';\n        }\n    },\n    getDocument: (src)=>({\n            promise: Promise.resolve({\n                numPages: 0,\n                getPage: (pageNum)=>Promise.resolve({\n                        getViewport: (param)=>{\n                            let { scale, rotation } = param;\n                            return {\n                                width: 800,\n                                height: 1100,\n                                scale: scale || 1,\n                                rotation: rotation || 0,\n                                clone: ()=>({\n                                        width: 800,\n                                        height: 1100,\n                                        scale: scale || 1\n                                    })\n                            };\n                        },\n                        render: ()=>Promise.resolve({\n                                promise: Promise.resolve()\n                            }),\n                        getTextContent: ()=>Promise.resolve({\n                                items: [],\n                                styles: {}\n                            }),\n                        getAnnotations: ()=>Promise.resolve([]),\n                        getOperatorList: ()=>Promise.resolve({\n                                fnArray: [],\n                                argsArray: [\n                                    []\n                                ] // Ensure argsArray has at least one empty array to prevent [0] access on null\n                            }),\n                        transport: {\n                            pageCache: {\n                                0: {}\n                            },\n                            commonObjs: {\n                                has: ()=>false,\n                                get: ()=>({}),\n                                resolve: ()=>{}\n                            },\n                            fontCache: {}\n                        }\n                    }),\n                _transport: {\n                    messageHandler: {\n                        on: ()=>{},\n                        off: ()=>{}\n                    },\n                    annotationStorage: {\n                        getValue: ()=>({}),\n                        getAll: ()=>({} // Add getAll method\n                            )\n                    },\n                    cleanup: ()=>{}\n                },\n                destroy: ()=>Promise.resolve()\n            })\n        }),\n    version: '2.16.105',\n    build: '0000000',\n    PDFWorker: class PDFWorker {\n        destroy() {\n            this.destroyed = true;\n            return Promise.resolve();\n        }\n        get promise() {\n            return this._readyCapability.promise;\n        }\n        static fromPort(params) {\n            return new PDFWorker();\n        }\n        static getWorkerSrc() {\n            return '';\n        }\n        constructor(options = {}){\n            this.name = options.name || 'worker';\n            this.destroyed = false;\n            this._readyCapability = {\n                promise: Promise.resolve()\n            };\n        }\n    },\n    AnnotationLayer: {\n        render: ()=>{},\n        update: ()=>{}\n    },\n    TextLayer: {\n        render: ()=>({\n                cancel: ()=>{}\n            }),\n        renderTextLayer: ()=>({\n                cancel: ()=>{}\n            })\n    },\n    LinkTarget: {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n    },\n    createObjectURL: ()=>'',\n    createValidAbsoluteUrl: ()=>'',\n    shadow: (obj, prop, value1)=>{\n        Object.defineProperty(obj, prop, {\n            value: value1,\n            enumerable: true,\n            configurable: true,\n            writable: false\n        });\n        return value1;\n    },\n    SVGGraphics: class SVGGraphics {\n    },\n    RenderingCancelledException: class RenderingCancelledException extends Error {\n    },\n    renderTextLayer: ()=>({\n            promise: Promise.resolve(),\n            cancel: ()=>{}\n        })\n};\n// Proxy handler to prevent null property access errors\nconst safeHandler = {\n    get: function get(target, prop) {\n        // If property doesn't exist, return an empty object rather than undefined\n        if (target[prop] === undefined) {\n            if (typeof prop === 'string' && (prop.startsWith('get') || prop.startsWith('set'))) {\n                return ()=>({});\n            }\n            return {};\n        }\n        return target[prop];\n    }\n};\n// Wrap the pdfjsLib in a Proxy to catch undefined property access\nconst safepdfjsLib = new Proxy(pdfjsLib, safeHandler);\n// Export main module\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (safepdfjsLib);\n// Named exports for destructuring imports\nconst GlobalWorkerOptions = pdfjsLib.GlobalWorkerOptions;\nconst getDocument = pdfjsLib.getDocument;\nconst PDFWorker = pdfjsLib.PDFWorker;\nconst AnnotationLayer = pdfjsLib.AnnotationLayer;\nconst TextLayer = pdfjsLib.TextLayer;\nconst LinkTarget = pdfjsLib.LinkTarget;\nconst RenderingCancelledException = pdfjsLib.RenderingCancelledException;\nconst renderTextLayer = pdfjsLib.renderTextLayer;\nconst createObjectURL = pdfjsLib.createObjectURL;\nconst createValidAbsoluteUrl = pdfjsLib.createValidAbsoluteUrl;\nconst shadow = pdfjsLib.shadow;\nconst SVGGraphics = pdfjsLib.SVGGraphics;\nconst version = pdfjsLib.version;\nconst build = pdfjsLib.build;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/stubs/pdfjs-stub.js\n"));

/***/ })

}]);