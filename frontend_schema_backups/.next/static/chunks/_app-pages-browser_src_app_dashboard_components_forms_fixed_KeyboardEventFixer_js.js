"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_app_dashboard_components_forms_fixed_KeyboardEventFixer_js"],{

/***/ "(app-pages-browser)/./src/app/dashboard/components/forms/fixed/KeyboardEventFixer.js":
/*!************************************************************************!*\
  !*** ./src/app/dashboard/components/forms/fixed/KeyboardEventFixer.js ***!
  \************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyboardEventFixer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n/**\n * Optimized KeyboardEventFixer that reduces browser performance impact\n * while still fixing keyboard input issues\n */ function KeyboardEventFixer() {\n    _s();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"KeyboardEventFixer.useEffect\": ()=>{\n            console.log('KeyboardEventFixer mounted');\n            // Throttling mechanism\n            let lastFixTime = 0;\n            const THROTTLE_MS = 100; // Only run fixes every 100ms at most\n            // Track focused input element\n            let focusedInput = null;\n            let isFixActive = true;\n            // Create a toggle function that can be used for debugging\n            window.toggleInputFix = ({\n                \"KeyboardEventFixer.useEffect\": (enabled)=>{\n                    isFixActive = enabled !== undefined ? enabled : !isFixActive;\n                    console.log(\"Input fix is now \".concat(isFixActive ? 'enabled' : 'disabled'));\n                    document.body.setAttribute('data-keyboard-fixer', isFixActive ? 'active' : 'disabled');\n                    return isFixActive;\n                }\n            })[\"KeyboardEventFixer.useEffect\"];\n            // Track the focused element - this is more efficient than overriding addEventListener\n            const focusHandler = {\n                \"KeyboardEventFixer.useEffect.focusHandler\": (e)=>{\n                    var _e_target_tagName;\n                    const tagName = (_e_target_tagName = e.target.tagName) === null || _e_target_tagName === void 0 ? void 0 : _e_target_tagName.toLowerCase();\n                    if (tagName === 'input' || tagName === 'textarea' || tagName === 'select' || e.target.contentEditable === 'true' || e.target.role === 'textbox') {\n                        focusedInput = e.target;\n                    }\n                }\n            }[\"KeyboardEventFixer.useEffect.focusHandler\"];\n            const blurHandler = {\n                \"KeyboardEventFixer.useEffect.blurHandler\": ()=>{\n                    focusedInput = null;\n                }\n            }[\"KeyboardEventFixer.useEffect.blurHandler\"];\n            // Listen for focus/blur events\n            document.addEventListener('focusin', focusHandler);\n            document.addEventListener('focusout', blurHandler);\n            // Create an optimized keydown handler\n            const documentKeyHandler = {\n                \"KeyboardEventFixer.useEffect.documentKeyHandler\": (e)=>{\n                    // Skip processing if fix is disabled or no input is focused\n                    if (!isFixActive || !focusedInput || e.__redirected) return;\n                    // Check if focusedInput is still in the DOM\n                    if (!document.contains(focusedInput)) {\n                        focusedInput = null;\n                        return;\n                    }\n                    // Throttle processing to avoid performance issues\n                    const now = Date.now();\n                    if (now - lastFixTime < THROTTLE_MS) return;\n                    lastFixTime = now;\n                    // Only handle basic text input keys\n                    if (e.key.length === 1 || e.key === 'Backspace' || e.key === 'Delete' || e.key === 'ArrowLeft' || e.key === 'ArrowRight' || e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'Home' || e.key === 'End' || e.key === 'Tab' || e.key === 'Enter' || e.key === 'Escape') {\n                        // Only for text inputs, use direct value manipulation for better performance\n                        if (e.key.length === 1 && (focusedInput.tagName.toLowerCase() === 'input' || focusedInput.tagName.toLowerCase() === 'textarea')) {\n                            try {\n                                // Safety check before manipulating the input\n                                if (!focusedInput || !focusedInput.isConnected) {\n                                    focusedInput = null;\n                                    return;\n                                }\n                                const start = focusedInput.selectionStart || 0;\n                                const end = focusedInput.selectionEnd || 0;\n                                const value = focusedInput.value || '';\n                                // Simulate typing by manually updating the input value\n                                const newValue = value.substring(0, start) + e.key + value.substring(end);\n                                focusedInput.value = newValue;\n                                // Set cursor position\n                                if (focusedInput && focusedInput.isConnected) {\n                                    focusedInput.selectionStart = start + 1;\n                                    focusedInput.selectionEnd = start + 1;\n                                }\n                                // Trigger change event - use InputEvent when possible for better React compatibility\n                                if (focusedInput && focusedInput.isConnected) {\n                                    if (typeof InputEvent === 'function') {\n                                        const inputEvent = new InputEvent('input', {\n                                            bubbles: true\n                                        });\n                                        focusedInput.dispatchEvent(inputEvent);\n                                    } else {\n                                        const changeEvent = new Event('input', {\n                                            bubbles: true\n                                        });\n                                        focusedInput.dispatchEvent(changeEvent);\n                                    }\n                                }\n                            } catch (error) {\n                                console.warn('KeyboardEventFixer: Error setting input properties', error);\n                                // The input is no longer usable, clear our reference\n                                focusedInput = null;\n                            }\n                            // Prevent the original event\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    }\n                }\n            }[\"KeyboardEventFixer.useEffect.documentKeyHandler\"];\n            // Listen for keydown but only in capture phase to ensure we can fix keyboard events\n            document.addEventListener('keydown', documentKeyHandler, true);\n            // Create style element for fixed inputs, but more targeted\n            const style = document.createElement('style');\n            style.textContent = '\\n      /* Better input visibility */\\n      input:focus, textarea:focus, select:focus {\\n        z-index: 2000 !important;\\n        position: relative !important;\\n        pointer-events: auto !important;\\n        outline: 2px solid #4285f4 !important;\\n      }\\n      \\n      /* Make Drawer backdrop better behaved */\\n      .MuiBackdrop-root {\\n        pointer-events: none !important;\\n      }\\n      \\n      /* Add visual indicator that the fix is running */\\n      body[data-keyboard-fixer=\"active\"] .emergency-form input:focus,\\n      body[data-keyboard-fixer=\"active\"] .emergency-form textarea:focus {\\n        outline: 2px solid #4CAF50 !important;\\n        outline-offset: 2px !important;\\n      }\\n    ';\n            document.head.appendChild(style);\n            // Mark the body to indicate fix is active\n            document.body.setAttribute('data-keyboard-fixer', 'active');\n            return ({\n                \"KeyboardEventFixer.useEffect\": ()=>{\n                    // Clean up\n                    document.removeEventListener('focusin', focusHandler);\n                    document.removeEventListener('focusout', blurHandler);\n                    document.removeEventListener('keydown', documentKeyHandler, true);\n                    // Remove style\n                    if (style.parentNode) {\n                        style.parentNode.removeChild(style);\n                    }\n                    // Remove DOM attribute\n                    document.body.removeAttribute('data-keyboard-fixer');\n                    // Remove global toggle\n                    delete window.toggleInputFix;\n                }\n            })[\"KeyboardEventFixer.useEffect\"];\n        }\n    }[\"KeyboardEventFixer.useEffect\"], []);\n    // This component doesn't render anything\n    return null;\n}\n_s(KeyboardEventFixer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = KeyboardEventFixer;\nvar _c;\n$RefreshReg$(_c, \"KeyboardEventFixer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/dashboard/components/forms/fixed/KeyboardEventFixer.js\n"));

/***/ })

}]);