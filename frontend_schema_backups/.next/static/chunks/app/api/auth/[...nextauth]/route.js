/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/api/auth/[...nextauth]/route"],{

/***/ "(app-pages-browser)/../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs":
/*!******************************************************************************************!*\
  !*** ../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ api)\n/* harmony export */ });\n/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vanMtY29va2llQDMuMC41L25vZGVfbW9kdWxlcy9qcy1jb29raWUvZGlzdC9qcy5jb29raWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLEVBQUU7QUFDdEMsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQ0FBa0M7O0FBRWxDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUVBQXFFO0FBQ3JFO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSx1RUFBdUU7QUFDdkU7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQSw2Q0FBNkM7QUFDN0MsT0FBTztBQUNQO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHlDQUF5QztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBLG1DQUFtQyxXQUFXO0FBQzlDOztBQUUwQiIsInNvdXJjZXMiOlsiL1VzZXJzL2t1b2xkZW5nL3Byb2plY3R4L25vZGVfbW9kdWxlcy8ucG5wbS9qcy1jb29raWVAMy4wLjUvbm9kZV9tb2R1bGVzL2pzLWNvb2tpZS9kaXN0L2pzLmNvb2tpZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIGpzLWNvb2tpZSB2My4wLjUgfCBNSVQgKi9cbi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xuZnVuY3Rpb24gYXNzaWduICh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICB9XG4gIHJldHVybiB0YXJnZXRcbn1cbi8qIGVzbGludC1lbmFibGUgbm8tdmFyICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXZhciAqL1xudmFyIGRlZmF1bHRDb252ZXJ0ZXIgPSB7XG4gIHJlYWQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZVswXSA9PT0gJ1wiJykge1xuICAgICAgdmFsdWUgPSB2YWx1ZS5zbGljZSgxLCAtMSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC8oJVtcXGRBLUZdezJ9KSsvZ2ksIGRlY29kZVVSSUNvbXBvbmVudClcbiAgfSxcbiAgd3JpdGU6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpLnJlcGxhY2UoXG4gICAgICAvJSgyWzM0NkJGXXwzW0FDLUZdfDQwfDVbQkRFXXw2MHw3W0JDRF0pL2csXG4gICAgICBkZWNvZGVVUklDb21wb25lbnRcbiAgICApXG4gIH1cbn07XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXZhciAqL1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIgKi9cblxuZnVuY3Rpb24gaW5pdCAoY29udmVydGVyLCBkZWZhdWx0QXR0cmlidXRlcykge1xuICBmdW5jdGlvbiBzZXQgKG5hbWUsIHZhbHVlLCBhdHRyaWJ1dGVzKSB7XG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGF0dHJpYnV0ZXMgPSBhc3NpZ24oe30sIGRlZmF1bHRBdHRyaWJ1dGVzLCBhdHRyaWJ1dGVzKTtcblxuICAgIGlmICh0eXBlb2YgYXR0cmlidXRlcy5leHBpcmVzID09PSAnbnVtYmVyJykge1xuICAgICAgYXR0cmlidXRlcy5leHBpcmVzID0gbmV3IERhdGUoRGF0ZS5ub3coKSArIGF0dHJpYnV0ZXMuZXhwaXJlcyAqIDg2NGU1KTtcbiAgICB9XG4gICAgaWYgKGF0dHJpYnV0ZXMuZXhwaXJlcykge1xuICAgICAgYXR0cmlidXRlcy5leHBpcmVzID0gYXR0cmlidXRlcy5leHBpcmVzLnRvVVRDU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgbmFtZSA9IGVuY29kZVVSSUNvbXBvbmVudChuYW1lKVxuICAgICAgLnJlcGxhY2UoLyUoMlszNDZCXXw1RXw2MHw3QykvZywgZGVjb2RlVVJJQ29tcG9uZW50KVxuICAgICAgLnJlcGxhY2UoL1soKV0vZywgZXNjYXBlKTtcblxuICAgIHZhciBzdHJpbmdpZmllZEF0dHJpYnV0ZXMgPSAnJztcbiAgICBmb3IgKHZhciBhdHRyaWJ1dGVOYW1lIGluIGF0dHJpYnV0ZXMpIHtcbiAgICAgIGlmICghYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXSkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICBzdHJpbmdpZmllZEF0dHJpYnV0ZXMgKz0gJzsgJyArIGF0dHJpYnV0ZU5hbWU7XG5cbiAgICAgIGlmIChhdHRyaWJ1dGVzW2F0dHJpYnV0ZU5hbWVdID09PSB0cnVlKSB7XG4gICAgICAgIGNvbnRpbnVlXG4gICAgICB9XG5cbiAgICAgIC8vIENvbnNpZGVycyBSRkMgNjI2NSBzZWN0aW9uIDUuMjpcbiAgICAgIC8vIC4uLlxuICAgICAgLy8gMy4gIElmIHRoZSByZW1haW5pbmcgdW5wYXJzZWQtYXR0cmlidXRlcyBjb250YWlucyBhICV4M0IgKFwiO1wiKVxuICAgICAgLy8gICAgIGNoYXJhY3RlcjpcbiAgICAgIC8vIENvbnN1bWUgdGhlIGNoYXJhY3RlcnMgb2YgdGhlIHVucGFyc2VkLWF0dHJpYnV0ZXMgdXAgdG8sXG4gICAgICAvLyBub3QgaW5jbHVkaW5nLCB0aGUgZmlyc3QgJXgzQiAoXCI7XCIpIGNoYXJhY3Rlci5cbiAgICAgIC8vIC4uLlxuICAgICAgc3RyaW5naWZpZWRBdHRyaWJ1dGVzICs9ICc9JyArIGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0uc3BsaXQoJzsnKVswXTtcbiAgICB9XG5cbiAgICByZXR1cm4gKGRvY3VtZW50LmNvb2tpZSA9XG4gICAgICBuYW1lICsgJz0nICsgY29udmVydGVyLndyaXRlKHZhbHVlLCBuYW1lKSArIHN0cmluZ2lmaWVkQXR0cmlidXRlcylcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldCAobmFtZSkge1xuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09ICd1bmRlZmluZWQnIHx8IChhcmd1bWVudHMubGVuZ3RoICYmICFuYW1lKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgLy8gVG8gcHJldmVudCB0aGUgZm9yIGxvb3AgaW4gdGhlIGZpcnN0IHBsYWNlIGFzc2lnbiBhbiBlbXB0eSBhcnJheVxuICAgIC8vIGluIGNhc2UgdGhlcmUgYXJlIG5vIGNvb2tpZXMgYXQgYWxsLlxuICAgIHZhciBjb29raWVzID0gZG9jdW1lbnQuY29va2llID8gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7ICcpIDogW107XG4gICAgdmFyIGphciA9IHt9O1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHBhcnRzID0gY29va2llc1tpXS5zcGxpdCgnPScpO1xuICAgICAgdmFyIHZhbHVlID0gcGFydHMuc2xpY2UoMSkuam9pbignPScpO1xuXG4gICAgICB0cnkge1xuICAgICAgICB2YXIgZm91bmQgPSBkZWNvZGVVUklDb21wb25lbnQocGFydHNbMF0pO1xuICAgICAgICBqYXJbZm91bmRdID0gY29udmVydGVyLnJlYWQodmFsdWUsIGZvdW5kKTtcblxuICAgICAgICBpZiAobmFtZSA9PT0gZm91bmQpIHtcbiAgICAgICAgICBicmVha1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlKSB7fVxuICAgIH1cblxuICAgIHJldHVybiBuYW1lID8gamFyW25hbWVdIDogamFyXG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmNyZWF0ZShcbiAgICB7XG4gICAgICBzZXQsXG4gICAgICBnZXQsXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIChuYW1lLCBhdHRyaWJ1dGVzKSB7XG4gICAgICAgIHNldChcbiAgICAgICAgICBuYW1lLFxuICAgICAgICAgICcnLFxuICAgICAgICAgIGFzc2lnbih7fSwgYXR0cmlidXRlcywge1xuICAgICAgICAgICAgZXhwaXJlczogLTFcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgfSxcbiAgICAgIHdpdGhBdHRyaWJ1dGVzOiBmdW5jdGlvbiAoYXR0cmlidXRlcykge1xuICAgICAgICByZXR1cm4gaW5pdCh0aGlzLmNvbnZlcnRlciwgYXNzaWduKHt9LCB0aGlzLmF0dHJpYnV0ZXMsIGF0dHJpYnV0ZXMpKVxuICAgICAgfSxcbiAgICAgIHdpdGhDb252ZXJ0ZXI6IGZ1bmN0aW9uIChjb252ZXJ0ZXIpIHtcbiAgICAgICAgcmV0dXJuIGluaXQoYXNzaWduKHt9LCB0aGlzLmNvbnZlcnRlciwgY29udmVydGVyKSwgdGhpcy5hdHRyaWJ1dGVzKVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgYXR0cmlidXRlczogeyB2YWx1ZTogT2JqZWN0LmZyZWV6ZShkZWZhdWx0QXR0cmlidXRlcykgfSxcbiAgICAgIGNvbnZlcnRlcjogeyB2YWx1ZTogT2JqZWN0LmZyZWV6ZShjb252ZXJ0ZXIpIH1cbiAgICB9XG4gIClcbn1cblxudmFyIGFwaSA9IGluaXQoZGVmYXVsdENvbnZlcnRlciwgeyBwYXRoOiAnLycgfSk7XG4vKiBlc2xpbnQtZW5hYmxlIG5vLXZhciAqL1xuXG5leHBvcnQgeyBhcGkgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js":
/*!********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidTokenError: () => (/* binding */ InvalidTokenError),\n/* harmony export */   jwtDecode: () => (/* binding */ jwtDecode)\n/* harmony export */ });\nclass InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nfunction jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vand0LWRlY29kZUA0LjAuMC9ub2RlX21vZHVsZXMvand0LWRlY29kZS9idWlsZC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxRQUFRO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlGQUF5RixTQUFTLEdBQUcsVUFBVTtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUZBQXVGLFNBQVMsR0FBRyxVQUFVO0FBQzdHO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW9sZGVuZy9wcm9qZWN0eC9ub2RlX21vZHVsZXMvLnBucG0vand0LWRlY29kZUA0LjAuMC9ub2RlX21vZHVsZXMvand0LWRlY29kZS9idWlsZC9lc20vaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEludmFsaWRUb2tlbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuSW52YWxpZFRva2VuRXJyb3IucHJvdG90eXBlLm5hbWUgPSBcIkludmFsaWRUb2tlbkVycm9yXCI7XG5mdW5jdGlvbiBiNjREZWNvZGVVbmljb2RlKHN0cikge1xuICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoYXRvYihzdHIpLnJlcGxhY2UoLyguKS9nLCAobSwgcCkgPT4ge1xuICAgICAgICBsZXQgY29kZSA9IHAuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgICAgICAgaWYgKGNvZGUubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgY29kZSA9IFwiMFwiICsgY29kZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gXCIlXCIgKyBjb2RlO1xuICAgIH0pKTtcbn1cbmZ1bmN0aW9uIGJhc2U2NFVybERlY29kZShzdHIpIHtcbiAgICBsZXQgb3V0cHV0ID0gc3RyLnJlcGxhY2UoLy0vZywgXCIrXCIpLnJlcGxhY2UoL18vZywgXCIvXCIpO1xuICAgIHN3aXRjaCAob3V0cHV0Lmxlbmd0aCAlIDQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgIG91dHB1dCArPSBcIj09XCI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgb3V0cHV0ICs9IFwiPVwiO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJiYXNlNjQgc3RyaW5nIGlzIG5vdCBvZiB0aGUgY29ycmVjdCBsZW5ndGhcIik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBiNjREZWNvZGVVbmljb2RlKG91dHB1dCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGF0b2Iob3V0cHV0KTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gand0RGVjb2RlKHRva2VuLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiB0b2tlbiAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFRva2VuRXJyb3IoXCJJbnZhbGlkIHRva2VuIHNwZWNpZmllZDogbXVzdCBiZSBhIHN0cmluZ1wiKTtcbiAgICB9XG4gICAgb3B0aW9ucyB8fCAob3B0aW9ucyA9IHt9KTtcbiAgICBjb25zdCBwb3MgPSBvcHRpb25zLmhlYWRlciA9PT0gdHJ1ZSA/IDAgOiAxO1xuICAgIGNvbnN0IHBhcnQgPSB0b2tlbi5zcGxpdChcIi5cIilbcG9zXTtcbiAgICBpZiAodHlwZW9mIHBhcnQgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRUb2tlbkVycm9yKGBJbnZhbGlkIHRva2VuIHNwZWNpZmllZDogbWlzc2luZyBwYXJ0ICMke3BvcyArIDF9YCk7XG4gICAgfVxuICAgIGxldCBkZWNvZGVkO1xuICAgIHRyeSB7XG4gICAgICAgIGRlY29kZWQgPSBiYXNlNjRVcmxEZWNvZGUocGFydCk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhbGlkVG9rZW5FcnJvcihgSW52YWxpZCB0b2tlbiBzcGVjaWZpZWQ6IGludmFsaWQgYmFzZTY0IGZvciBwYXJ0ICMke3BvcyArIDF9ICgke2UubWVzc2FnZX0pYCk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZWQpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFRva2VuRXJyb3IoYEludmFsaWQgdG9rZW4gc3BlY2lmaWVkOiBpbnZhbGlkIGpzb24gZm9yIHBhcnQgIyR7cG9zICsgMX0gKCR7ZS5tZXNzYWdlfSlgKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22logger%22%2C%22error%22%5D%7D&server=false!":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22logger%22%2C%22error%22%5D%7D&server=false! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/utils/logger.js */ \"(app-pages-browser)/./src/utils/logger.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vbmV4dEAxNS4yLjJfQGJhYmVsK2NvcmVANy4yNi4xMF9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa3VvbGRlbmclMkZwcm9qZWN0eCUyRmZyb250ZW5kJTJGcHlmYWN0b3JfbmV4dCUyRnNyYyUyRnV0aWxzJTJGbG9nZ2VyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIybG9nZ2VyJTIyJTJDJTIyZXJyb3IlMjIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxvS0FBNEkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImxvZ2dlclwiLFwiZXJyb3JcIl0gKi8gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvdXRpbHMvbG9nZ2VyLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22logger%22%2C%22error%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/logger.js":
/*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _tenantUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tenantUtils */ \"(app-pages-browser)/./src/utils/tenantUtils.js\");\n/* __next_internal_client_entry_do_not_use__ logger,createServerLogger auto */ /**\n * Logger utility for consistent application logging\n * Includes tenant context in logs for easier debugging\n */ \n// Log levels\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    NONE: 4\n};\n// Current log level - can be overridden with environment variables\nlet currentLogLevel =  false ? 0 : LOG_LEVELS.DEBUG;\n// Allow log level to be set via localStorage for debugging\nif (true) {\n    try {\n        const storedLogLevel = localStorage.getItem('logLevel');\n        if (storedLogLevel && LOG_LEVELS[storedLogLevel] !== undefined) {\n            currentLogLevel = LOG_LEVELS[storedLogLevel];\n        }\n    } catch (error) {\n        console.error('Error reading log level from localStorage', error);\n    }\n}\n// Message throttling mechanism to avoid excessive logs\nconst messageCache = new Map();\nconst MESSAGE_THROTTLE_INTERVAL = 5000; // 5 seconds\n// Service Management specific throttling\nconst SERVICE_MANAGEMENT_THROTTLE_INTERVAL = 2000; // 2 seconds\nconst RENDERING_THROTTLE_INTERVAL = 1000; // 1 second for rendering logs\n// Patterns for messages that should be heavily throttled\nconst THROTTLE_PATTERNS = [\n    '[TenantUtils]',\n    '[apiService] Added tenant headers',\n    'Normalized subscription type',\n    '[useSession]',\n    'Session fetched successfully',\n    '[Dashboard]',\n    '[ServiceManagement] Rendering',\n    '[ServiceManagement] Component mounted',\n    '[ApiRequest] GET',\n    'Fetching services',\n    'with schema: tenant_',\n    'with activeTab',\n    'GET /api/'\n];\n/**\n * Should the message be logged based on throttling rules\n * @param {string} message - Message to check\n * @returns {boolean} - Whether to log the message\n */ function shouldLogMessage(message) {\n    // Check if this message matches any throttle pattern\n    let needsThrottling = false;\n    let throttleInterval = MESSAGE_THROTTLE_INTERVAL;\n    for (const pattern of THROTTLE_PATTERNS){\n        if (message.includes(pattern)) {\n            needsThrottling = true;\n            // Apply different throttle intervals based on pattern\n            if (pattern.startsWith('[ServiceManagement] Rendering')) {\n                throttleInterval = RENDERING_THROTTLE_INTERVAL;\n            } else if (pattern.startsWith('[ServiceManagement]')) {\n                throttleInterval = SERVICE_MANAGEMENT_THROTTLE_INTERVAL;\n            } else if (pattern.startsWith('[ApiRequest]')) {\n                throttleInterval = RENDERING_THROTTLE_INTERVAL;\n            }\n            break;\n        }\n    }\n    // If it doesn't need throttling, log it\n    if (!needsThrottling) {\n        return true;\n    }\n    const now = Date.now();\n    const lastLogTime = messageCache.get(message);\n    // If this exact message hasn't been logged recently, allow it\n    if (!lastLogTime || now - lastLogTime > throttleInterval) {\n        messageCache.set(message, now);\n        // Cleanup old messages from cache to prevent memory leaks\n        if (messageCache.size > 100) {\n            const oldMessages = [];\n            messageCache.forEach((time, msg)=>{\n                if (now - time > throttleInterval) {\n                    oldMessages.push(msg);\n                }\n            });\n            oldMessages.forEach((msg)=>messageCache.delete(msg));\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Format log messages with additional context\n */ function formatMessage(message) {\n    try {\n        const timestamp = new Date().toISOString();\n        const tenantId =  true ? (0,_tenantUtils__WEBPACK_IMPORTED_MODULE_0__.getTenantId)() : 0;\n        return \"[\".concat(timestamp, \"] [\").concat(tenantId || 'no-tenant', \"] \").concat(message);\n    } catch (error) {\n        return message; // Fallback to original message if formatting fails\n    }\n}\n/**\n * Logger instance with methods for different log levels\n */ const logger = {\n    /**\n   * Set the current log level\n   * @param {string} level - One of DEBUG, INFO, WARN, ERROR, NONE\n   */ setLogLevel: (level)=>{\n        if (LOG_LEVELS[level] !== undefined) {\n            currentLogLevel = LOG_LEVELS[level];\n            if (true) {\n                try {\n                    localStorage.setItem('logLevel', level);\n                } catch (error) {\n                    console.error('Error saving log level to localStorage', error);\n                }\n            }\n            console.info(\"Log level set to \".concat(level));\n        }\n    },\n    /**\n   * Log at DEBUG level\n   */ debug: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.DEBUG) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for debug messages\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.debug(formattedMessage, data);\n                } else {\n                    console.debug(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at INFO level\n   */ info: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.INFO) {\n            const formattedMessage = formatMessage(message);\n            // Apply some throttling for info messages too\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.info(formattedMessage, data);\n                } else {\n                    console.info(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at WARN level\n   */ warn: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.WARN) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for warnings that match patterns\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.warn(formattedMessage, data);\n                } else {\n                    console.warn(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at ERROR level\n   */ error: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.ERROR) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for errors that match patterns\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.error(formattedMessage, data);\n                } else {\n                    console.error(formattedMessage);\n                }\n            }\n        }\n    }\n};\n/**\n * Create a server-side logger\n * Used for API routes\n */ function createServerLogger() {\n    let context = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    return {\n        debug: (message, data)=>{\n            console.debug(\"[SERVER] [\".concat(context.tenantId || 'no-tenant', \"] \").concat(message), data || '');\n        },\n        info: (message, data)=>{\n            console.info(\"[SERVER] [\".concat(context.tenantId || 'no-tenant', \"] \").concat(message), data || '');\n        },\n        warn: (message, data)=>{\n            console.warn(\"[SERVER] [\".concat(context.tenantId || 'no-tenant', \"] \").concat(message), data || '');\n        },\n        error: (message, data)=>{\n            console.error(\"[SERVER] [\".concat(context.tenantId || 'no-tenant', \"] \").concat(message), data || '');\n        }\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/logger.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/tenantUtils.js":
/*!**********************************!*\
  !*** ./src/utils/tenantUtils.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTenantToUrl: () => (/* binding */ addTenantToUrl),\n/* harmony export */   clearTenantStorage: () => (/* binding */ clearTenantStorage),\n/* harmony export */   extractTenantId: () => (/* binding */ extractTenantId),\n/* harmony export */   forceValidateTenantId: () => (/* binding */ forceValidateTenantId),\n/* harmony export */   getSchemaName: () => (/* binding */ getSchemaName),\n/* harmony export */   getTenantFromToken: () => (/* binding */ getTenantFromToken),\n/* harmony export */   getTenantHeaders: () => (/* binding */ getTenantHeaders),\n/* harmony export */   getTenantId: () => (/* binding */ getTenantId),\n/* harmony export */   setTokens: () => (/* binding */ setTokens),\n/* harmony export */   storeTenantId: () => (/* binding */ storeTenantId),\n/* harmony export */   storeTenantInfo: () => (/* binding */ storeTenantInfo),\n/* harmony export */   syncRepairedTenantId: () => (/* binding */ syncRepairedTenantId),\n/* harmony export */   validateTenantIdFormat: () => (/* binding */ validateTenantIdFormat)\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/_/_object_spread */ \"(app-pages-browser)/../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_object_spread.js\");\n/* harmony import */ var _swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ \"(app-pages-browser)/../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_object_spread_props.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(app-pages-browser)/./src/utils/logger.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js\");\n\n\n\n/**\n * Enhanced tenant management utilities\n * Provides secure methods for handling tenant information\n */ \n\n\n// Helper function to detect if code is running in browser\nconst isBrowser = \"object\" !== 'undefined';\n// Cookie configuration\nconst COOKIE_CONFIG = {\n    path: '/',\n    secure: \"development\" === 'production',\n    sameSite: 'strict',\n    expires: 30 // 30 days\n};\n// Near the top of the file, add a caching mechanism\n// Cache for tenant ID to avoid excessive cookie reads\nlet cachedTenantId = null;\nlet lastCacheTime = 0;\nconst CACHE_DURATION = 5000; // 5 seconds\n/**\n * Get tenant ID from JWT token\n * @param {string} token - JWT token\n * @returns {string|null} - Tenant ID from token\n */ function getTenantFromToken(token) {\n    try {\n        if (!token) return null;\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_2__.jwtDecode)(token);\n        // Check various possible locations for tenant ID\n        return decoded['custom:tenant_id'] || decoded['custom:tenantId'] || decoded['custom:businessid'] || decoded.tenantId || null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant from token:', error);\n        return null;\n    }\n}\n/**\n * Store tenant ID securely\n * @param {string} tenantId - Tenant ID to store\n */ function storeTenantId(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Set in cookies (both secure and regular for compatibility)\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set('tenantId', tenantId, COOKIE_CONFIG);\n        // Set in sessionStorage (more secure than localStorage)\n        try {\n            sessionStorage.setItem('tenantId', tenantId);\n        } catch (e) {\n            // Ignore sessionStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to sessionStorage:', e);\n        }\n        // Legacy: Set in localStorage with warning (less secure)\n        try {\n            localStorage.setItem('tenantId', tenantId);\n            localStorage.setItem('businessid', tenantId); // For backward compatibility\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(\"[TenantUtils] Tenant ID stored: \".concat(tenantId));\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant ID:', error);\n    }\n}\n/**\n * Get tenant ID from all available sources with priority\n * Uses caching to avoid excessive cookie reads and logging\n * @returns {string|null} - Tenant ID from most secure source\n */ function getTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        const now = Date.now();\n        // Return cached value if valid\n        if (cachedTenantId && now - lastCacheTime < CACHE_DURATION) {\n            return cachedTenantId;\n        }\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            // Only log first time or when value changes\n            if (cookieTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(\"[TenantUtils] Got tenant ID from cookie: \".concat(cookieTenantId));\n            }\n            // Update cache\n            cachedTenantId = cookieTenantId;\n            lastCacheTime = now;\n            return cookieTenantId;\n        }\n        // Try from sessionStorage next\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            // Only log when value changes\n            if (sessionTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(\"[TenantUtils] Got tenant ID from sessionStorage: \".concat(sessionTenantId));\n            }\n            // Sync to cookies\n            storeTenantId(sessionTenantId);\n            // Update cache\n            cachedTenantId = sessionTenantId;\n            lastCacheTime = now;\n            return sessionTenantId;\n        }\n        // Try from localStorage last (least secure)\n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            // Only log when value changes\n            if (localTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(\"[TenantUtils] Got tenant ID from localStorage: \".concat(localTenantId));\n            }\n            // Sync to more secure storage\n            storeTenantId(localTenantId);\n            // Update cache\n            cachedTenantId = localTenantId;\n            lastCacheTime = now;\n            return localTenantId;\n        }\n        // Only log no tenant found once\n        if (cachedTenantId !== null) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] No tenant ID found in any storage');\n            cachedTenantId = null;\n        }\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error getting tenant ID:', error);\n        return null;\n    }\n}\n/**\n * Clear all tenant-related storage\n * This removes tenant IDs from cookies and storage\n */ function clearTenantStorage() {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot clear tenant storage on server side');\n        return;\n    }\n    try {\n        // Clear cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('tenantId', {\n            path: '/'\n        });\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('businessid', {\n            path: '/'\n        });\n        // Clear sessionStorage\n        try {\n            sessionStorage.removeItem('tenantId');\n        } catch (e) {\n        // Ignore errors\n        }\n        // Clear localStorage\n        try {\n            localStorage.removeItem('tenantId');\n            localStorage.removeItem('businessid');\n        } catch (e) {\n        // Ignore errors\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant storage cleared successfully');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error clearing tenant storage:', error);\n    }\n}\n/**\n * Add tenant ID to URL or API request\n * @param {string} url - URL to add tenant to\n * @param {string} [tenantIdOverride] - Optional override tenant ID\n * @returns {string} - URL with tenant ID parameter\n */ function addTenantToUrl(url, tenantIdOverride) {\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id || !url) return url;\n        const separator = url.includes('?') ? '&' : '?';\n        return \"\".concat(url).concat(separator, \"tenantId=\").concat(id);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error adding tenant to URL:', error);\n        return url;\n    }\n}\n/**\n * Generate headers with tenant ID for API requests\n * @param {Object} [existingHeaders={}] - Existing headers\n * @param {string} [tenantIdOverride] - Optional override tenant ID \n * @returns {Object} - Headers with tenant ID\n */ function getTenantHeaders() {\n    let existingHeaders = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, tenantIdOverride = arguments.length > 1 ? arguments[1] : void 0;\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id) return existingHeaders;\n        return (0,_swc_helpers_object_spread_props__WEBPACK_IMPORTED_MODULE_3__._)((0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__._)({}, existingHeaders), {\n            'X-Tenant-ID': id\n        });\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error generating tenant headers:', error);\n        return existingHeaders;\n    }\n}\n/**\n * Synchronize a repaired tenant ID by updating cookies and localStorage\n * @param {string} oldTenantId - The old/invalid tenant ID\n * @param {string} newTenantId - The new/valid tenant ID to use\n */ async function syncRepairedTenantId(oldTenantId, newTenantId) {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot sync tenant IDs on server side');\n        return;\n    }\n    try {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Syncing repaired tenant ID', {\n            oldTenantId,\n            newTenantId\n        });\n        // Update localStorage\n        try {\n            localStorage.setItem('tenantId', newTenantId);\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        // Update cookies\n        document.cookie = \"tenantId=\".concat(newTenantId, \"; path=/; max-age=\").concat(60 * 60 * 24 * 30, \"; SameSite=Lax\");\n        document.cookie = \"businessid=\".concat(newTenantId, \"; path=/; max-age=\").concat(60 * 60 * 24 * 30, \"; SameSite=Lax\");\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant ID sync complete');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error syncing tenant ID:', error);\n    }\n}\n/**\n * Convert tenant ID to schema name format\n */ function getSchemaName(tenantId) {\n    if (!tenantId) return null;\n    try {\n        // Schema name is typically tenant_ followed by tenant ID\n        // Ensure tenant ID is formatted correctly for database schema\n        const sanitizedTenantId = tenantId.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase();\n        return \"tenant_\".concat(sanitizedTenantId);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error formatting schema name', error);\n        return null;\n    }\n}\n/**\n * Store tenant information in localStorage and cookies\n * @param {string} tenantId - The tenant ID to store\n */ function storeTenantInfo(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Store in localStorage\n        localStorage.setItem('tenantId', tenantId);\n        // Store in cookies\n        const expires = new Date();\n        expires.setDate(expires.getDate() + 30); // 30 days expiry\n        document.cookie = \"tenantId=\".concat(tenantId, \"; path=/; expires=\").concat(expires.toUTCString(), \"; SameSite=Lax\");\n        document.cookie = \"businessid=\".concat(tenantId, \"; path=/; expires=\").concat(expires.toUTCString(), \"; SameSite=Lax\");\n        // Update cache\n        cachedTenantId = tenantId;\n        lastCacheTime = Date.now();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant info stored:', tenantId);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant info:', error);\n    }\n}\n/**\n * Validate tenant ID format (UUID)\n * @param {string} tenantId - The tenant ID to validate\n * @returns {boolean} True if valid\n */ function validateTenantIdFormat(tenantId) {\n    if (!tenantId || typeof tenantId !== 'string') {\n        return false;\n    }\n    // Basic UUID validation regex\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    return uuidRegex.test(tenantId);\n}\n/**\n * Force validation of tenant ID\n * @returns {Promise<string|null>} The validated tenant ID\n */ async function forceValidateTenantId() {\n    try {\n        const tenantId = getTenantId();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Force validating tenant ID:', tenantId);\n        if (!tenantId) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found during force validation');\n            return null;\n        }\n        return tenantId;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error in force validation:', error);\n        return null;\n    }\n}\n/**\n * Set authentication tokens\n * @param {Object} tokens - Object containing accessToken and idToken\n */ function setTokens() {\n    let tokens = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    if (!isBrowser) {\n        return;\n    }\n    try {\n        if (tokens.accessToken || tokens.idToken) {\n            // Store tokens in localStorage\n            const existingTokens = JSON.parse(localStorage.getItem('tokens') || '{}');\n            const updatedTokens = (0,_swc_helpers_object_spread__WEBPACK_IMPORTED_MODULE_4__._)({}, existingTokens, tokens.accessToken ? {\n                accessToken: tokens.accessToken\n            } : {}, tokens.idToken ? {\n                idToken: tokens.idToken\n            } : {});\n            localStorage.setItem('tokens', JSON.stringify(updatedTokens));\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tokens updated');\n        }\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error setting tokens:', error);\n    }\n}\n/**\n * Extract the tenant ID from all available sources for RLS\n * This function is used on the client side to get the tenant ID for API requests\n * @returns {string|null} The tenant ID or null if not found\n */ function extractTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        var _window_location;\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            return cookieTenantId;\n        }\n        // Try from localStorage \n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            return localTenantId;\n        }\n        // Try from sessionStorage\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            return sessionTenantId;\n        }\n        // Final fallback - check URL/search params if available\n        if ( true && ((_window_location = window.location) === null || _window_location === void 0 ? void 0 : _window_location.search)) {\n            try {\n                const urlParams = new URLSearchParams(window.location.search);\n                const urlTenantId = urlParams.get('tenantId');\n                if (urlTenantId) {\n                    // Cache the tenant ID for future use\n                    storeTenantId(urlTenantId);\n                    return urlTenantId;\n                }\n            } catch (e) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error getting tenant ID from URL:', e);\n            }\n        }\n        // Log a warning if no tenant ID was found\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found in client storage');\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant ID:', error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/tenantUtils.js\n"));

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["main-app"], () => (__webpack_exec__("(app-pages-browser)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22logger%22%2C%22error%22%5D%7D&server=false!")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);