/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/tenant/init/route";
exports.ids = ["app/api/tenant/init/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Finit%2Froute&page=%2Fapi%2Ftenant%2Finit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Finit%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Finit%2Froute&page=%2Fapi%2Ftenant%2Finit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Finit%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_init_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/tenant/init/route.js */ \"(rsc)/./src/app/api/tenant/init/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/tenant/init/route\",\n        pathname: \"/api/tenant/init\",\n        filename: \"route\",\n        bundlePath: \"app/api/tenant/init/route\"\n    },\n    resolvedPagePath: \"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/app/api/tenant/init/route.js\",\n    nextConfigOutput,\n    userland: _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_init_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMi4yX0BiYWJlbCtjb3JlQDcuMjYuMTBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGdGVuYW50JTJGaW5pdCUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdGVuYW50JTJGaW5pdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRlbmFudCUyRmluaXQlMkZyb3V0ZS5qcyZhcHBEaXI9JTJGVXNlcnMlMkZrdW9sZGVuZyUyRnByb2plY3R4JTJGZnJvbnRlbmQlMkZweWZhY3Rvcl9uZXh0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmt1b2xkZW5nJTJGcHJvamVjdHglMkZmcm9udGVuZCUyRnB5ZmFjdG9yX25leHQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ2dDO0FBQzdHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvYXBwL2FwaS90ZW5hbnQvaW5pdC9yb3V0ZS5qc1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdGVuYW50L2luaXQvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90ZW5hbnQvaW5pdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdGVuYW50L2luaXQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvYXBwL2FwaS90ZW5hbnQvaW5pdC9yb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Finit%2Froute&page=%2Fapi%2Ftenant%2Finit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Finit%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true!":

  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/lib/axiosConfig.js */ \"(rsc)/./src/lib/axiosConfig.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/utils/logger.js */ \"(rsc)/./src/utils/logger.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMi4yX0BiYWJlbCtjb3JlQDcuMjYuMTBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmt1b2xkZW5nJTJGcHJvamVjdHglMkZmcm9udGVuZCUyRnB5ZmFjdG9yX25leHQlMkZzcmMlMkZsaWIlMkZheGlvc0NvbmZpZy5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmF4aW9zSW5zdGFuY2UlMjIlMkMlMjJwb3N0JTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa3VvbGRlbmclMkZwcm9qZWN0eCUyRmZyb250ZW5kJTJGcHlmYWN0b3JfbmV4dCUyRnNyYyUyRnV0aWxzJTJGbG9nZ2VyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyKiUyMiUyQyUyMmxvZ2dlciUyMiUyQyUyMmVycm9yJTIyJTJDJTIyZGVidWclMjIlMkMlMjJ3YXJuJTIyJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSw0SkFBcUo7QUFDcko7QUFDQSxzSkFBd0ciLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImF4aW9zSW5zdGFuY2VcIixcInBvc3RcIl0gKi8gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvbGliL2F4aW9zQ29uZmlnLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvdXRpbHMvbG9nZ2VyLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/tenant/init/route.js":
/*!******************************************!*\
  !*** ./src/app/api/tenant/init/route.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./src/lib/auth.js\");\n/* harmony import */ var _lib_cognito__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/cognito */ \"(rsc)/./src/lib/cognito.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _utils_tenantUtils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/tenantUtils */ \"(rsc)/./src/utils/tenantUtils.js\");\n/* harmony import */ var _utils_uuid_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/utils/uuid-helpers */ \"(rsc)/./src/utils/uuid-helpers.js\");\n/* harmony import */ var _utils_serverLogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/utils/serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n\n\n\n\n\n\n\n\n// Create server logger for API routes\nconst logger = (0,_utils_serverLogger__WEBPACK_IMPORTED_MODULE_6__.createServerLogger)('TenantInit');\n/**\n * Format tenant ID to be database-compatible\n * @param {string} tenantId - The tenant ID to format\n * @returns {string} - The formatted tenant ID\n */ function formatTenantId(tenantId) {\n    if (!tenantId) return null;\n    // For PostgreSQL UUID compatibility, we need to use hyphens, not underscores\n    // If the ID has underscores, convert them to hyphens for UUID compatibility\n    return tenantId.replace(/_/g, '-');\n}\n/**\n * Validate and repair a UUID string to ensure it's properly formatted\n * @param {string} uuid - The UUID string to validate/repair\n * @returns {string} - A valid UUID string or a new UUID if repair is impossible\n */ function validateAndRepairUuid(uuid) {\n    if (!uuid) return (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(); // Generate a new UUID if none provided\n    // Standard UUID pattern: 8-4-4-4-12 characters with hyphens\n    const uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    // If it's already a valid UUID, return it\n    if (uuidPattern.test(uuid)) {\n        return uuid;\n    }\n    // Try to repair common issues:\n    let repairedUuid = uuid;\n    // 1. Replace underscores with hyphens\n    repairedUuid = repairedUuid.replace(/_/g, '-');\n    // 2. Check if it's missing a character in the last segment\n    if (repairedUuid.length === 35 && repairedUuid.charAt(23) === '-') {\n        // Add a missing character at the end\n        repairedUuid = repairedUuid + '0';\n    }\n    // 3. Add missing hyphens if they were omitted\n    if (!repairedUuid.includes('-')) {\n        if (repairedUuid.length === 32) {\n            repairedUuid = repairedUuid.substring(0, 8) + '-' + repairedUuid.substring(8, 12) + '-' + repairedUuid.substring(12, 16) + '-' + repairedUuid.substring(16, 20) + '-' + repairedUuid.substring(20);\n        }\n    }\n    // Test again after repairs\n    if (uuidPattern.test(repairedUuid)) {\n        logger.info('Repaired UUID:', {\n            original: uuid,\n            repaired: repairedUuid\n        });\n        return repairedUuid;\n    }\n    // If repair failed, generate a new UUID\n    const newUuid = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    logger.warn('Could not repair UUID, generated new one:', {\n        original: uuid,\n        generated: newUuid\n    });\n    return newUuid;\n}\n/**\n * Find user by email in the database\n * @param {object} pool - Database connection pool\n * @param {string} email - User email to search for\n * @returns {Promise<object|null>} User object or null if not found\n */ async function findUserByEmail(pool, email) {\n    if (!email) return null;\n    try {\n        const query = `\n      SELECT id, email, tenant_id\n      FROM custom_auth_user\n      WHERE email = $1\n      LIMIT 1;\n    `;\n        const result = await pool.query(query, [\n            email\n        ]);\n        if (result.rows && result.rows.length > 0) {\n            logger.info('Found existing user by email:', result.rows[0]);\n            return result.rows[0];\n        }\n        return null;\n    } catch (error) {\n        logger.error('Error finding user by email:', error);\n        return null;\n    }\n}\n/**\n * Find tenant by ID in the database\n * @param {object} pool - Database connection pool\n * @param {string} tenantId - Tenant ID to search for\n * @returns {Promise<object|null>} Tenant object or null if not found\n */ async function findTenantById(pool, tenantId) {\n    if (!tenantId) return null;\n    try {\n        const query = `\n      SELECT id, name, schema_name, is_active\n      FROM custom_auth_tenant\n      WHERE id = $1\n      LIMIT 1;\n    `;\n        const result = await pool.query(query, [\n            tenantId\n        ]);\n        if (result.rows && result.rows.length > 0) {\n            logger.info('Found existing tenant by ID:', result.rows[0]);\n            return result.rows[0];\n        }\n        return null;\n    } catch (error) {\n        logger.error('Error finding tenant by ID:', error);\n        return null;\n    }\n}\nasync function POST(request) {\n    try {\n        // Get authenticated user from Cognito\n        const cognitoUser = await (0,_lib_cognito__WEBPACK_IMPORTED_MODULE_2__.getCognitoUser)();\n        // Get request body for additional data\n        let body = {};\n        try {\n            body = await request.json();\n        } catch (e) {\n            // If parsing fails, use empty object\n            logger.warn('Failed to parse request body');\n        }\n        if (!cognitoUser) {\n            logger.error('No Cognito user available');\n            // If we have a tenant ID in the body, use it even without authentication\n            // This allows the application to function when authentication fails\n            if (body.tenantId) {\n                logger.info('Using tenant ID from request body without authentication:', body.tenantId);\n                // Validate and repair the UUID before using it\n                const repairedTenantId = validateAndRepairUuid(body.tenantId);\n                const formattedTenantId = formatTenantId(repairedTenantId);\n                // Store tenant ID in cookies\n                const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                await cookieStore.set('tenantId', formattedTenantId, {\n                    path: '/',\n                    sameSite: 'lax',\n                    maxAge: 60 * 60 * 24 * 365\n                });\n                await cookieStore.set('businessid', formattedTenantId, {\n                    path: '/',\n                    sameSite: 'lax',\n                    maxAge: 60 * 60 * 24 * 365\n                });\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    tenant_id: formattedTenantId,\n                    name: body.businessName || cognitoUser?.['custom:businessname'] || 'Default Business',\n                    status: 'active',\n                    fallback: true,\n                    message: 'Tenant initialized with limited data due to authentication failure'\n                });\n            }\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Authentication required',\n                message: 'No authenticated user found and no tenant ID provided in request'\n            }, {\n                status: 401\n            });\n        }\n        // Get tenant ID from multiple sources\n        const originalTenantId = body.tenantId || cognitoUser && cognitoUser['custom:businessid'];\n        // Check for tenant ID in cookies if not found in body or user\n        let tenantId = originalTenantId;\n        try {\n            const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n            const businessIdCookie = cookieStore.get('businessid');\n            const tenantIdCookie = cookieStore.get('tenantId');\n            if (!tenantId) {\n                tenantId = businessIdCookie?.value || tenantIdCookie?.value;\n            }\n            logger.info('Checked cookies for tenant ID:', {\n                businessIdCookie: businessIdCookie?.value ? 'found' : 'missing',\n                tenantIdCookie: tenantIdCookie?.value ? 'found' : 'missing',\n                tenantId\n            });\n        } catch (cookieError) {\n            logger.warn('Error accessing cookies:', cookieError.message);\n        }\n        // Get the user's email address from Cognito\n        const userEmail = cognitoUser?.email || body.email;\n        // Get the business name from Cognito or request body\n        const businessName = cognitoUser?.['custom:businessname'] || body.businessName || '';\n        // Create a connection to the database (details provided by environment variables)\n        try {\n            // Import the pg module for PostgreSQL\n            const { Pool } = __webpack_require__(/*! pg */ \"pg\");\n            const pool = new Pool({\n                user: process.env.POSTGRES_USER,\n                host: process.env.POSTGRES_HOST,\n                database: process.env.POSTGRES_DB,\n                password: process.env.POSTGRES_PASSWORD,\n                port: process.env.POSTGRES_PORT || 5432,\n                ssl: process.env.POSTGRES_SSL === 'true' ? {\n                    rejectUnauthorized: false\n                } : undefined\n            });\n            try {\n                logger.info('Connected to database, checking for existing user by email');\n                // First check if this user already exists and has a tenant_id\n                if (userEmail) {\n                    const existingUser = await findUserByEmail(pool, userEmail);\n                    if (existingUser && existingUser.tenant_id) {\n                        // User exists and has a tenant ID already\n                        logger.info('User already exists with tenant ID:', existingUser.tenant_id);\n                        // Check if this tenant exists and is active\n                        const existingTenant = await findTenantById(pool, existingUser.tenant_id);\n                        if (existingTenant && existingTenant.is_active) {\n                            // Store tenant ID in a cookie for future requests\n                            const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                            await cookieStore.set('tenantId', existingTenant.id, {\n                                path: '/',\n                                sameSite: 'lax',\n                                maxAge: 60 * 60 * 24 * 365\n                            });\n                            await cookieStore.set('businessid', existingTenant.id, {\n                                path: '/',\n                                sameSite: 'lax',\n                                maxAge: 60 * 60 * 24 * 365\n                            });\n                            logger.info('Using existing tenant for user:', existingTenant);\n                            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                                success: true,\n                                tenant_id: existingTenant.id,\n                                name: existingTenant.name,\n                                schema_name: existingTenant.schema_name,\n                                direct_db: true,\n                                existing: true,\n                                message: 'Using existing tenant for authenticated user'\n                            });\n                        }\n                    }\n                }\n                // If the user doesn't exist or doesn't have a valid tenant, check if we have a tenant ID\n                let repairedTenantId;\n                if (tenantId) {\n                    // Validate and repair the existing tenant ID\n                    repairedTenantId = validateAndRepairUuid(tenantId);\n                    logger.info('Using existing tenant ID (repaired):', repairedTenantId);\n                    // Check if this tenant exists\n                    const existingTenant = await findTenantById(pool, repairedTenantId);\n                    if (existingTenant && existingTenant.is_active) {\n                        // Update user's tenant_id if we have a user email\n                        if (userEmail) {\n                            try {\n                                const existingUser = await findUserByEmail(pool, userEmail);\n                                if (existingUser) {\n                                    // Update the user's tenant ID\n                                    await pool.query(`\n                    UPDATE custom_auth_user \n                    SET tenant_id = $1\n                    WHERE id = $2\n                  `, [\n                                        repairedTenantId,\n                                        existingUser.id\n                                    ]);\n                                    logger.info('Updated existing user with tenant ID:', {\n                                        user_id: existingUser.id,\n                                        tenant_id: repairedTenantId\n                                    });\n                                } else {\n                                    // Create a new user with this email and tenant ID\n                                    await pool.query(`\n                    INSERT INTO custom_auth_user (email, tenant_id)\n                    VALUES ($1, $2)\n                    ON CONFLICT (email) DO UPDATE\n                    SET tenant_id = EXCLUDED.tenant_id\n                  `, [\n                                        userEmail,\n                                        repairedTenantId\n                                    ]);\n                                    logger.info('Created new user with tenant ID:', {\n                                        email: userEmail,\n                                        tenant_id: repairedTenantId\n                                    });\n                                }\n                            } catch (userUpdateError) {\n                                logger.warn('Error updating user tenant ID:', userUpdateError);\n                            // Continue since the tenant exists\n                            }\n                        }\n                        // Store tenant ID in a cookie for future requests\n                        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                        await cookieStore.set('tenantId', existingTenant.id, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        await cookieStore.set('businessid', existingTenant.id, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            success: true,\n                            tenant_id: existingTenant.id,\n                            name: existingTenant.name,\n                            schema_name: existingTenant.schema_name,\n                            direct_db: true,\n                            existing: true,\n                            message: 'Using existing tenant'\n                        });\n                    }\n                } else if (userEmail) {\n                    // No tenant ID, but we have an email. Check if any tenant exists for this user\n                    const result = await pool.query(`\n            SELECT t.id, t.name, t.schema_name, t.is_active\n            FROM custom_auth_tenant t\n            JOIN custom_auth_user u ON u.tenant_id = t.id\n            WHERE u.email = $1 AND t.is_active = true\n            LIMIT 1;\n          `, [\n                        userEmail\n                    ]);\n                    if (result.rows && result.rows.length > 0) {\n                        const existingTenant = result.rows[0];\n                        repairedTenantId = existingTenant.id;\n                        // Store tenant ID in a cookie for future requests\n                        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                        await cookieStore.set('tenantId', existingTenant.id, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        await cookieStore.set('businessid', existingTenant.id, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        logger.info('Found tenant for email:', {\n                            email: userEmail,\n                            tenant_id: existingTenant.id\n                        });\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            success: true,\n                            tenant_id: existingTenant.id,\n                            name: existingTenant.name,\n                            schema_name: existingTenant.schema_name,\n                            direct_db: true,\n                            existing: true,\n                            message: 'Found existing tenant for user email'\n                        });\n                    } else {\n                        // Generate a new tenant ID if we can't find one\n                        repairedTenantId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n                        logger.info('Generating new tenant ID for user:', {\n                            email: userEmail,\n                            tenant_id: repairedTenantId\n                        });\n                    }\n                } else {\n                    // Generate a new tenant ID if we can't find one\n                    repairedTenantId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n                    logger.info('Generating new tenant ID as last resort:', repairedTenantId);\n                }\n                // Tenant doesn't exist, we need to use the schema manager to create it\n                // Call the schema manager API to create the schema\n                const schemaManagerUrl = new URL('/api/tenant/schema-manager', request.url).toString();\n                logger.info('Calling schema manager API:', schemaManagerUrl);\n                // Check if explicit creation was requested\n                const forceCreate = body.forceCreate === true;\n                // Only allow tenant creation if explicitly requested or if this is a dashboard API call\n                const shouldCreateTenant = forceCreate || Boolean(body.isFromDashboard);\n                // Log the tenant creation decision\n                logger.info(`${shouldCreateTenant ? 'Creating' : 'Validating'} tenant with ID: ${repairedTenantId}`);\n                const schemaResponse = await fetch(schemaManagerUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        tenantId: repairedTenantId,\n                        businessName,\n                        forceCreate: shouldCreateTenant // Only create if explicitly requested\n                    })\n                });\n                if (schemaResponse.ok) {\n                    const schemaResult = await schemaResponse.json();\n                    if (schemaResult.success) {\n                        logger.info('Schema manager created schema successfully:', schemaResult);\n                        // Now update the user's tenant_id if the user exists\n                        if (userEmail) {\n                            try {\n                                const existingUser = await findUserByEmail(pool, userEmail);\n                                if (existingUser) {\n                                    // Update the user's tenant ID\n                                    await pool.query(`\n                    UPDATE custom_auth_user \n                    SET tenant_id = $1\n                    WHERE id = $2\n                  `, [\n                                        repairedTenantId,\n                                        existingUser.id\n                                    ]);\n                                    logger.info('Updated existing user with new tenant ID:', {\n                                        user_id: existingUser.id,\n                                        tenant_id: repairedTenantId\n                                    });\n                                } else {\n                                    // Create a new user with this email and tenant ID\n                                    await pool.query(`\n                    INSERT INTO custom_auth_user (email, tenant_id)\n                    VALUES ($1, $2)\n                    ON CONFLICT (email) DO UPDATE\n                    SET tenant_id = EXCLUDED.tenant_id\n                  `, [\n                                        userEmail,\n                                        repairedTenantId\n                                    ]);\n                                    logger.info('Created new user with tenant ID:', {\n                                        email: userEmail,\n                                        tenant_id: repairedTenantId\n                                    });\n                                }\n                            } catch (userUpdateError) {\n                                logger.warn('Error updating user tenant ID:', userUpdateError);\n                            // Continue since the tenant was created successfully\n                            }\n                        }\n                        // Store tenant ID in cookies for future requests\n                        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                        await cookieStore.set('tenantId', repairedTenantId, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        await cookieStore.set('businessid', repairedTenantId, {\n                            path: '/',\n                            sameSite: 'lax',\n                            maxAge: 60 * 60 * 24 * 365\n                        });\n                        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                            success: true,\n                            tenant_id: schemaResult.tenantId,\n                            name: schemaResult.tenantInfo?.name || businessName,\n                            schema_name: schemaResult.schemaName,\n                            direct_db: true,\n                            message: 'Tenant initialized successfully via schema manager'\n                        });\n                    } else {\n                        logger.error('Schema manager failed to create schema:', schemaResult);\n                    // Continue with fallback approaches\n                    }\n                } else {\n                    // Schema manager API call failed\n                    const errorText = await schemaResponse.text();\n                    logger.error('Schema manager API error:', errorText);\n                // Continue with fallback approaches\n                }\n            } catch (dbQueryError) {\n                logger.error('Error executing database query:', dbQueryError);\n            // Pool will be closed in finally block\n            } finally{\n                // Close the pool connection only once at the end\n                try {\n                    await pool.end();\n                } catch (error) {\n                    logger.warn('Error closing database pool, may already be closed:', error.message);\n                }\n            }\n        } catch (dbError) {\n            logger.error('Direct database initialization failed:', dbError);\n        // Continue to API approach - don't return error\n        }\n        // If we can't use direct DB approach, return a success response with the tenant ID we have\n        // This allows the dashboard to at least load even if the database isn't accessible\n        logger.info('Using fallback tenant initialization approach');\n        // Validate and repair the UUID before using it\n        const repairedTenantId = validateAndRepairUuid(tenantId || (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])());\n        // Store tenant ID in a cookie for future requests\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n        await cookieStore.set('tenantId', repairedTenantId, {\n            path: '/',\n            sameSite: 'lax',\n            maxAge: 60 * 60 * 24 * 365\n        });\n        await cookieStore.set('businessid', repairedTenantId, {\n            path: '/',\n            sameSite: 'lax',\n            maxAge: 60 * 60 * 24 * 365\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            tenant_id: repairedTenantId,\n            name: businessName,\n            status: 'active',\n            fallback: true,\n            message: 'Tenant initialized successfully via fallback method'\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        logger.error('Error initializing tenant:', error);\n        // Return a generic error response with proper headers\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n            error: 'Failed to initialize tenant',\n            message: error.message,\n            success: false\n        }), {\n            status: 500,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n}\n// Add a simple GET handler for minimal dependency tenant init \nasync function GET(request) {\n    try {\n        // Get tenant ID from cookies\n        let tenantId = null;\n        try {\n            const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n            const businessIdCookie = cookieStore.get('businessid');\n            const tenantIdCookie = cookieStore.get('tenantId');\n            tenantId = businessIdCookie?.value || tenantIdCookie?.value;\n            logger.info('Checked cookies for tenant ID:', {\n                businessIdCookie: businessIdCookie?.value ? 'found' : 'missing',\n                tenantIdCookie: tenantIdCookie?.value ? 'found' : 'missing',\n                tenantId\n            });\n        } catch (cookieError) {\n            logger.warn('Error accessing cookies:', cookieError.message);\n        }\n        // If no tenant ID found, generate a new one as fallback\n        if (!tenantId || !(0,_utils_tenantUtils__WEBPACK_IMPORTED_MODULE_4__.validateTenantIdFormat)(tenantId)) {\n            tenantId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n            logger.info('Generated new tenant ID:', tenantId);\n            // Store in cookies\n            try {\n                const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_3__.cookies)();\n                await cookieStore.set('tenantId', tenantId, {\n                    path: '/',\n                    sameSite: 'lax',\n                    maxAge: 60 * 60 * 24 * 365\n                });\n                await cookieStore.set('businessid', tenantId, {\n                    path: '/',\n                    sameSite: 'lax',\n                    maxAge: 60 * 60 * 24 * 365\n                });\n            } catch (cookieSetError) {\n                logger.error('Error setting cookies:', cookieSetError);\n            }\n        }\n        // Return the tenant ID without database verification\n        // This is a lightweight fallback that doesn't require DB access\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            tenantId,\n            isVerified: false,\n            message: 'Minimal tenant initialization complete'\n        });\n    } catch (error) {\n        logger.error('Error in minimal tenant init:', error);\n        // Generate emergency fallback tenant ID\n        const fallbackTenantId = '18609ed2-1a46-4d50-bc4e-483d6e3405ff';\n        // Return fallback response with proper headers\n        return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n            success: true,\n            tenantId: fallbackTenantId,\n            isVerified: false,\n            isFallback: true,\n            message: 'Using emergency fallback tenant ID due to error'\n        }), {\n            status: 200,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVM7WUFDVHRDLFVBQVV5RztZQUNWRCxZQUFZO1lBQ1pFLFlBQVk7WUFDWjlELFNBQVM7UUFDWCxJQUNBO1lBQ0VGLFFBQVE7WUFDUmdELFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1FBQ0Y7SUFFSjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvYXBwL2FwaS90ZW5hbnQvaW5pdC9yb3V0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBnZXRBdXRoIH0gZnJvbSAnQC9saWIvYXV0aCc7XG5pbXBvcnQgeyBnZXRDb2duaXRvVXNlciB9IGZyb20gJ0AvbGliL2NvZ25pdG8nO1xuaW1wb3J0IHsgY29va2llcyB9IGZyb20gJ25leHQvaGVhZGVycyc7XG5pbXBvcnQgeyB2NCBhcyB1dWlkdjQgfSBmcm9tICd1dWlkJztcbmltcG9ydCB7IHZhbGlkYXRlVGVuYW50SWRGb3JtYXQgfSBmcm9tICdAL3V0aWxzL3RlbmFudFV0aWxzJztcbmltcG9ydCB7IGlzVVVJRCB9IGZyb20gJ0AvdXRpbHMvdXVpZC1oZWxwZXJzJztcbmltcG9ydCB7IGNyZWF0ZVNlcnZlckxvZ2dlciB9IGZyb20gJ0AvdXRpbHMvc2VydmVyTG9nZ2VyJztcblxuLy8gQ3JlYXRlIHNlcnZlciBsb2dnZXIgZm9yIEFQSSByb3V0ZXNcbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZVNlcnZlckxvZ2dlcignVGVuYW50SW5pdCcpO1xuXG4vKipcbiAqIEZvcm1hdCB0ZW5hbnQgSUQgdG8gYmUgZGF0YWJhc2UtY29tcGF0aWJsZVxuICogQHBhcmFtIHtzdHJpbmd9IHRlbmFudElkIC0gVGhlIHRlbmFudCBJRCB0byBmb3JtYXRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gVGhlIGZvcm1hdHRlZCB0ZW5hbnQgSURcbiAqL1xuZnVuY3Rpb24gZm9ybWF0VGVuYW50SWQodGVuYW50SWQpIHtcbiAgaWYgKCF0ZW5hbnRJZCkgcmV0dXJuIG51bGw7XG4gIC8vIEZvciBQb3N0Z3JlU1FMIFVVSUQgY29tcGF0aWJpbGl0eSwgd2UgbmVlZCB0byB1c2UgaHlwaGVucywgbm90IHVuZGVyc2NvcmVzXG4gIC8vIElmIHRoZSBJRCBoYXMgdW5kZXJzY29yZXMsIGNvbnZlcnQgdGhlbSB0byBoeXBoZW5zIGZvciBVVUlEIGNvbXBhdGliaWxpdHlcbiAgcmV0dXJuIHRlbmFudElkLnJlcGxhY2UoL18vZywgJy0nKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBhbmQgcmVwYWlyIGEgVVVJRCBzdHJpbmcgdG8gZW5zdXJlIGl0J3MgcHJvcGVybHkgZm9ybWF0dGVkXG4gKiBAcGFyYW0ge3N0cmluZ30gdXVpZCAtIFRoZSBVVUlEIHN0cmluZyB0byB2YWxpZGF0ZS9yZXBhaXJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gQSB2YWxpZCBVVUlEIHN0cmluZyBvciBhIG5ldyBVVUlEIGlmIHJlcGFpciBpcyBpbXBvc3NpYmxlXG4gKi9cbmZ1bmN0aW9uIHZhbGlkYXRlQW5kUmVwYWlyVXVpZCh1dWlkKSB7XG4gIGlmICghdXVpZCkgcmV0dXJuIHV1aWR2NCgpOyAvLyBHZW5lcmF0ZSBhIG5ldyBVVUlEIGlmIG5vbmUgcHJvdmlkZWRcbiAgXG4gIC8vIFN0YW5kYXJkIFVVSUQgcGF0dGVybjogOC00LTQtNC0xMiBjaGFyYWN0ZXJzIHdpdGggaHlwaGVuc1xuICBjb25zdCB1dWlkUGF0dGVybiA9IC9eWzAtOWEtZl17OH0tWzAtOWEtZl17NH0tWzAtOWEtZl17NH0tWzAtOWEtZl17NH0tWzAtOWEtZl17MTJ9JC9pO1xuICBcbiAgLy8gSWYgaXQncyBhbHJlYWR5IGEgdmFsaWQgVVVJRCwgcmV0dXJuIGl0XG4gIGlmICh1dWlkUGF0dGVybi50ZXN0KHV1aWQpKSB7XG4gICAgcmV0dXJuIHV1aWQ7XG4gIH1cbiAgXG4gIC8vIFRyeSB0byByZXBhaXIgY29tbW9uIGlzc3VlczpcbiAgbGV0IHJlcGFpcmVkVXVpZCA9IHV1aWQ7XG4gIFxuICAvLyAxLiBSZXBsYWNlIHVuZGVyc2NvcmVzIHdpdGggaHlwaGVuc1xuICByZXBhaXJlZFV1aWQgPSByZXBhaXJlZFV1aWQucmVwbGFjZSgvXy9nLCAnLScpO1xuICBcbiAgLy8gMi4gQ2hlY2sgaWYgaXQncyBtaXNzaW5nIGEgY2hhcmFjdGVyIGluIHRoZSBsYXN0IHNlZ21lbnRcbiAgaWYgKHJlcGFpcmVkVXVpZC5sZW5ndGggPT09IDM1ICYmIHJlcGFpcmVkVXVpZC5jaGFyQXQoMjMpID09PSAnLScpIHtcbiAgICAvLyBBZGQgYSBtaXNzaW5nIGNoYXJhY3RlciBhdCB0aGUgZW5kXG4gICAgcmVwYWlyZWRVdWlkID0gcmVwYWlyZWRVdWlkICsgJzAnO1xuICB9XG4gIFxuICAvLyAzLiBBZGQgbWlzc2luZyBoeXBoZW5zIGlmIHRoZXkgd2VyZSBvbWl0dGVkXG4gIGlmICghcmVwYWlyZWRVdWlkLmluY2x1ZGVzKCctJykpIHtcbiAgICBpZiAocmVwYWlyZWRVdWlkLmxlbmd0aCA9PT0gMzIpIHtcbiAgICAgIHJlcGFpcmVkVXVpZCA9IFxuICAgICAgICByZXBhaXJlZFV1aWQuc3Vic3RyaW5nKDAsIDgpICsgJy0nICsgXG4gICAgICAgIHJlcGFpcmVkVXVpZC5zdWJzdHJpbmcoOCwgMTIpICsgJy0nICsgXG4gICAgICAgIHJlcGFpcmVkVXVpZC5zdWJzdHJpbmcoMTIsIDE2KSArICctJyArIFxuICAgICAgICByZXBhaXJlZFV1aWQuc3Vic3RyaW5nKDE2LCAyMCkgKyAnLScgKyBcbiAgICAgICAgcmVwYWlyZWRVdWlkLnN1YnN0cmluZygyMCk7XG4gICAgfVxuICB9XG4gIFxuICAvLyBUZXN0IGFnYWluIGFmdGVyIHJlcGFpcnNcbiAgaWYgKHV1aWRQYXR0ZXJuLnRlc3QocmVwYWlyZWRVdWlkKSkge1xuICAgIGxvZ2dlci5pbmZvKCdSZXBhaXJlZCBVVUlEOicsIHsgb3JpZ2luYWw6IHV1aWQsIHJlcGFpcmVkOiByZXBhaXJlZFV1aWQgfSk7XG4gICAgcmV0dXJuIHJlcGFpcmVkVXVpZDtcbiAgfVxuICBcbiAgLy8gSWYgcmVwYWlyIGZhaWxlZCwgZ2VuZXJhdGUgYSBuZXcgVVVJRFxuICBjb25zdCBuZXdVdWlkID0gdXVpZHY0KCk7XG4gIGxvZ2dlci53YXJuKCdDb3VsZCBub3QgcmVwYWlyIFVVSUQsIGdlbmVyYXRlZCBuZXcgb25lOicsIFxuICAgICAgICAgICAgICB7IG9yaWdpbmFsOiB1dWlkLCBnZW5lcmF0ZWQ6IG5ld1V1aWQgfSk7XG4gIHJldHVybiBuZXdVdWlkO1xufVxuXG4vKipcbiAqIEZpbmQgdXNlciBieSBlbWFpbCBpbiB0aGUgZGF0YWJhc2VcbiAqIEBwYXJhbSB7b2JqZWN0fSBwb29sIC0gRGF0YWJhc2UgY29ubmVjdGlvbiBwb29sXG4gKiBAcGFyYW0ge3N0cmluZ30gZW1haWwgLSBVc2VyIGVtYWlsIHRvIHNlYXJjaCBmb3JcbiAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdHxudWxsPn0gVXNlciBvYmplY3Qgb3IgbnVsbCBpZiBub3QgZm91bmRcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZmluZFVzZXJCeUVtYWlsKHBvb2wsIGVtYWlsKSB7XG4gIGlmICghZW1haWwpIHJldHVybiBudWxsO1xuICBcbiAgdHJ5IHtcbiAgICBjb25zdCBxdWVyeSA9IGBcbiAgICAgIFNFTEVDVCBpZCwgZW1haWwsIHRlbmFudF9pZFxuICAgICAgRlJPTSBjdXN0b21fYXV0aF91c2VyXG4gICAgICBXSEVSRSBlbWFpbCA9ICQxXG4gICAgICBMSU1JVCAxO1xuICAgIGA7XG4gICAgXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcG9vbC5xdWVyeShxdWVyeSwgW2VtYWlsXSk7XG4gICAgXG4gICAgaWYgKHJlc3VsdC5yb3dzICYmIHJlc3VsdC5yb3dzLmxlbmd0aCA+IDApIHtcbiAgICAgIGxvZ2dlci5pbmZvKCdGb3VuZCBleGlzdGluZyB1c2VyIGJ5IGVtYWlsOicsIHJlc3VsdC5yb3dzWzBdKTtcbiAgICAgIHJldHVybiByZXN1bHQucm93c1swXTtcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIG51bGw7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdFcnJvciBmaW5kaW5nIHVzZXIgYnkgZW1haWw6JywgZXJyb3IpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbi8qKlxuICogRmluZCB0ZW5hbnQgYnkgSUQgaW4gdGhlIGRhdGFiYXNlXG4gKiBAcGFyYW0ge29iamVjdH0gcG9vbCAtIERhdGFiYXNlIGNvbm5lY3Rpb24gcG9vbFxuICogQHBhcmFtIHtzdHJpbmd9IHRlbmFudElkIC0gVGVuYW50IElEIHRvIHNlYXJjaCBmb3JcbiAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdHxudWxsPn0gVGVuYW50IG9iamVjdCBvciBudWxsIGlmIG5vdCBmb3VuZFxuICovXG5hc3luYyBmdW5jdGlvbiBmaW5kVGVuYW50QnlJZChwb29sLCB0ZW5hbnRJZCkge1xuICBpZiAoIXRlbmFudElkKSByZXR1cm4gbnVsbDtcbiAgXG4gIHRyeSB7XG4gICAgY29uc3QgcXVlcnkgPSBgXG4gICAgICBTRUxFQ1QgaWQsIG5hbWUsIHNjaGVtYV9uYW1lLCBpc19hY3RpdmVcbiAgICAgIEZST00gY3VzdG9tX2F1dGhfdGVuYW50XG4gICAgICBXSEVSRSBpZCA9ICQxXG4gICAgICBMSU1JVCAxO1xuICAgIGA7XG4gICAgXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcG9vbC5xdWVyeShxdWVyeSwgW3RlbmFudElkXSk7XG4gICAgXG4gICAgaWYgKHJlc3VsdC5yb3dzICYmIHJlc3VsdC5yb3dzLmxlbmd0aCA+IDApIHtcbiAgICAgIGxvZ2dlci5pbmZvKCdGb3VuZCBleGlzdGluZyB0ZW5hbnQgYnkgSUQ6JywgcmVzdWx0LnJvd3NbMF0pO1xuICAgICAgcmV0dXJuIHJlc3VsdC5yb3dzWzBdO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gbnVsbDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ0Vycm9yIGZpbmRpbmcgdGVuYW50IGJ5IElEOicsIGVycm9yKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgLy8gR2V0IGF1dGhlbnRpY2F0ZWQgdXNlciBmcm9tIENvZ25pdG9cbiAgICBjb25zdCBjb2duaXRvVXNlciA9IGF3YWl0IGdldENvZ25pdG9Vc2VyKCk7XG4gICAgXG4gICAgLy8gR2V0IHJlcXVlc3QgYm9keSBmb3IgYWRkaXRpb25hbCBkYXRhXG4gICAgbGV0IGJvZHkgPSB7fTtcbiAgICB0cnkge1xuICAgICAgYm9keSA9IGF3YWl0IHJlcXVlc3QuanNvbigpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIC8vIElmIHBhcnNpbmcgZmFpbHMsIHVzZSBlbXB0eSBvYmplY3RcbiAgICAgIGxvZ2dlci53YXJuKCdGYWlsZWQgdG8gcGFyc2UgcmVxdWVzdCBib2R5Jyk7XG4gICAgfVxuICAgIFxuICAgIGlmICghY29nbml0b1VzZXIpIHtcbiAgICAgIGxvZ2dlci5lcnJvcignTm8gQ29nbml0byB1c2VyIGF2YWlsYWJsZScpO1xuICAgICAgXG4gICAgICAvLyBJZiB3ZSBoYXZlIGEgdGVuYW50IElEIGluIHRoZSBib2R5LCB1c2UgaXQgZXZlbiB3aXRob3V0IGF1dGhlbnRpY2F0aW9uXG4gICAgICAvLyBUaGlzIGFsbG93cyB0aGUgYXBwbGljYXRpb24gdG8gZnVuY3Rpb24gd2hlbiBhdXRoZW50aWNhdGlvbiBmYWlsc1xuICAgICAgaWYgKGJvZHkudGVuYW50SWQpIHtcbiAgICAgICAgbG9nZ2VyLmluZm8oJ1VzaW5nIHRlbmFudCBJRCBmcm9tIHJlcXVlc3QgYm9keSB3aXRob3V0IGF1dGhlbnRpY2F0aW9uOicsIGJvZHkudGVuYW50SWQpO1xuICAgICAgICBcbiAgICAgICAgLy8gVmFsaWRhdGUgYW5kIHJlcGFpciB0aGUgVVVJRCBiZWZvcmUgdXNpbmcgaXRcbiAgICAgICAgY29uc3QgcmVwYWlyZWRUZW5hbnRJZCA9IHZhbGlkYXRlQW5kUmVwYWlyVXVpZChib2R5LnRlbmFudElkKTtcbiAgICAgICAgY29uc3QgZm9ybWF0dGVkVGVuYW50SWQgPSBmb3JtYXRUZW5hbnRJZChyZXBhaXJlZFRlbmFudElkKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN0b3JlIHRlbmFudCBJRCBpbiBjb29raWVzXG4gICAgICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgICAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ3RlbmFudElkJywgZm9ybWF0dGVkVGVuYW50SWQsIHtcbiAgICAgICAgICBwYXRoOiAnLycsXG4gICAgICAgICAgc2FtZVNpdGU6ICdsYXgnLFxuICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IGNvb2tpZVN0b3JlLnNldCgnYnVzaW5lc3NpZCcsIGZvcm1hdHRlZFRlbmFudElkLCB7XG4gICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgICAgICBtYXhBZ2U6IDYwICogNjAgKiAyNCAqIDM2NSwgLy8gMSB5ZWFyXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgIHRlbmFudF9pZDogZm9ybWF0dGVkVGVuYW50SWQsXG4gICAgICAgICAgbmFtZTogYm9keS5idXNpbmVzc05hbWUgfHwgY29nbml0b1VzZXI/LlsnY3VzdG9tOmJ1c2luZXNzbmFtZSddIHx8ICdEZWZhdWx0IEJ1c2luZXNzJyxcbiAgICAgICAgICBzdGF0dXM6ICdhY3RpdmUnLFxuICAgICAgICAgIGZhbGxiYWNrOiB0cnVlLFxuICAgICAgICAgIG1lc3NhZ2U6ICdUZW5hbnQgaW5pdGlhbGl6ZWQgd2l0aCBsaW1pdGVkIGRhdGEgZHVlIHRvIGF1dGhlbnRpY2F0aW9uIGZhaWx1cmUnXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgXG4gICAgICAgICAgZXJyb3I6ICdBdXRoZW50aWNhdGlvbiByZXF1aXJlZCcsXG4gICAgICAgICAgbWVzc2FnZTogJ05vIGF1dGhlbnRpY2F0ZWQgdXNlciBmb3VuZCBhbmQgbm8gdGVuYW50IElEIHByb3ZpZGVkIGluIHJlcXVlc3QnXG4gICAgICAgIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgLy8gR2V0IHRlbmFudCBJRCBmcm9tIG11bHRpcGxlIHNvdXJjZXNcbiAgICBjb25zdCBvcmlnaW5hbFRlbmFudElkID0gYm9keS50ZW5hbnRJZCB8fCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIChjb2duaXRvVXNlciAmJiBjb2duaXRvVXNlclsnY3VzdG9tOmJ1c2luZXNzaWQnXSk7XG5cbiAgICAvLyBDaGVjayBmb3IgdGVuYW50IElEIGluIGNvb2tpZXMgaWYgbm90IGZvdW5kIGluIGJvZHkgb3IgdXNlclxuICAgIGxldCB0ZW5hbnRJZCA9IG9yaWdpbmFsVGVuYW50SWQ7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgICAgY29uc3QgYnVzaW5lc3NJZENvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgnYnVzaW5lc3NpZCcpO1xuICAgICAgY29uc3QgdGVuYW50SWRDb29raWUgPSBjb29raWVTdG9yZS5nZXQoJ3RlbmFudElkJyk7XG4gICAgICBcbiAgICAgIGlmICghdGVuYW50SWQpIHtcbiAgICAgICAgdGVuYW50SWQgPSBidXNpbmVzc0lkQ29va2llPy52YWx1ZSB8fCB0ZW5hbnRJZENvb2tpZT8udmFsdWU7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGxvZ2dlci5pbmZvKCdDaGVja2VkIGNvb2tpZXMgZm9yIHRlbmFudCBJRDonLCB7IFxuICAgICAgICBidXNpbmVzc0lkQ29va2llOiBidXNpbmVzc0lkQ29va2llPy52YWx1ZSA/ICdmb3VuZCcgOiAnbWlzc2luZycsXG4gICAgICAgIHRlbmFudElkQ29va2llOiB0ZW5hbnRJZENvb2tpZT8udmFsdWUgPyAnZm91bmQnIDogJ21pc3NpbmcnLFxuICAgICAgICB0ZW5hbnRJZFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoY29va2llRXJyb3IpIHtcbiAgICAgIGxvZ2dlci53YXJuKCdFcnJvciBhY2Nlc3NpbmcgY29va2llczonLCBjb29raWVFcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgXG4gICAgLy8gR2V0IHRoZSB1c2VyJ3MgZW1haWwgYWRkcmVzcyBmcm9tIENvZ25pdG9cbiAgICBjb25zdCB1c2VyRW1haWwgPSBjb2duaXRvVXNlcj8uZW1haWwgfHwgYm9keS5lbWFpbDtcbiAgICBcbiAgICAvLyBHZXQgdGhlIGJ1c2luZXNzIG5hbWUgZnJvbSBDb2duaXRvIG9yIHJlcXVlc3QgYm9keVxuICAgIGNvbnN0IGJ1c2luZXNzTmFtZSA9IGNvZ25pdG9Vc2VyPy5bJ2N1c3RvbTpidXNpbmVzc25hbWUnXSB8fCBib2R5LmJ1c2luZXNzTmFtZSB8fCAnJztcbiAgICBcbiAgICAvLyBDcmVhdGUgYSBjb25uZWN0aW9uIHRvIHRoZSBkYXRhYmFzZSAoZGV0YWlscyBwcm92aWRlZCBieSBlbnZpcm9ubWVudCB2YXJpYWJsZXMpXG4gICAgdHJ5IHtcbiAgICAgIC8vIEltcG9ydCB0aGUgcGcgbW9kdWxlIGZvciBQb3N0Z3JlU1FMXG4gICAgICBjb25zdCB7IFBvb2wgfSA9IHJlcXVpcmUoJ3BnJyk7XG4gICAgICBcbiAgICAgIGNvbnN0IHBvb2wgPSBuZXcgUG9vbCh7XG4gICAgICAgIHVzZXI6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1VTRVIsXG4gICAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LlBPU1RHUkVTX0hPU1QsXG4gICAgICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5QT1NUR1JFU19EQixcbiAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBPU1RHUkVTX1BBU1NXT1JELFxuICAgICAgICBwb3J0OiBwcm9jZXNzLmVudi5QT1NUR1JFU19QT1JUIHx8IDU0MzIsXG4gICAgICAgIHNzbDogcHJvY2Vzcy5lbnYuUE9TVEdSRVNfU1NMID09PSAndHJ1ZScgPyBcbiAgICAgICAgICB7IHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2UgfSA6IHVuZGVmaW5lZFxuICAgICAgfSk7XG4gICAgICBcbiAgICAgIHRyeSB7XG4gICAgICAgIGxvZ2dlci5pbmZvKCdDb25uZWN0ZWQgdG8gZGF0YWJhc2UsIGNoZWNraW5nIGZvciBleGlzdGluZyB1c2VyIGJ5IGVtYWlsJyk7XG4gICAgICAgIFxuICAgICAgICAvLyBGaXJzdCBjaGVjayBpZiB0aGlzIHVzZXIgYWxyZWFkeSBleGlzdHMgYW5kIGhhcyBhIHRlbmFudF9pZFxuICAgICAgICBpZiAodXNlckVtYWlsKSB7XG4gICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgZmluZFVzZXJCeUVtYWlsKHBvb2wsIHVzZXJFbWFpbCk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGV4aXN0aW5nVXNlciAmJiBleGlzdGluZ1VzZXIudGVuYW50X2lkKSB7XG4gICAgICAgICAgICAvLyBVc2VyIGV4aXN0cyBhbmQgaGFzIGEgdGVuYW50IElEIGFscmVhZHlcbiAgICAgICAgICAgIGxvZ2dlci5pbmZvKCdVc2VyIGFscmVhZHkgZXhpc3RzIHdpdGggdGVuYW50IElEOicsIGV4aXN0aW5nVXNlci50ZW5hbnRfaWQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDaGVjayBpZiB0aGlzIHRlbmFudCBleGlzdHMgYW5kIGlzIGFjdGl2ZVxuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdUZW5hbnQgPSBhd2FpdCBmaW5kVGVuYW50QnlJZChwb29sLCBleGlzdGluZ1VzZXIudGVuYW50X2lkKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGV4aXN0aW5nVGVuYW50ICYmIGV4aXN0aW5nVGVuYW50LmlzX2FjdGl2ZSkge1xuICAgICAgICAgICAgICAvLyBTdG9yZSB0ZW5hbnQgSUQgaW4gYSBjb29raWUgZm9yIGZ1dHVyZSByZXF1ZXN0c1xuICAgICAgICAgICAgICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcbiAgICAgICAgICAgICAgYXdhaXQgY29va2llU3RvcmUuc2V0KCd0ZW5hbnRJZCcsIGV4aXN0aW5nVGVuYW50LmlkLCB7XG4gICAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgICAgICAgICAgICBtYXhBZ2U6IDYwICogNjAgKiAyNCAqIDM2NSwgLy8gMSB5ZWFyXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ2J1c2luZXNzaWQnLCBleGlzdGluZ1RlbmFudC5pZCwge1xuICAgICAgICAgICAgICAgIHBhdGg6ICcvJyxcbiAgICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgICAgbWF4QWdlOiA2MCAqIDYwICogMjQgKiAzNjUsIC8vIDEgeWVhclxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIGxvZ2dlci5pbmZvKCdVc2luZyBleGlzdGluZyB0ZW5hbnQgZm9yIHVzZXI6JywgZXhpc3RpbmdUZW5hbnQpO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgICAgIHRlbmFudF9pZDogZXhpc3RpbmdUZW5hbnQuaWQsXG4gICAgICAgICAgICAgICAgbmFtZTogZXhpc3RpbmdUZW5hbnQubmFtZSxcbiAgICAgICAgICAgICAgICBzY2hlbWFfbmFtZTogZXhpc3RpbmdUZW5hbnQuc2NoZW1hX25hbWUsXG4gICAgICAgICAgICAgICAgZGlyZWN0X2RiOiB0cnVlLFxuICAgICAgICAgICAgICAgIGV4aXN0aW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdVc2luZyBleGlzdGluZyB0ZW5hbnQgZm9yIGF1dGhlbnRpY2F0ZWQgdXNlcidcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBJZiB0aGUgdXNlciBkb2Vzbid0IGV4aXN0IG9yIGRvZXNuJ3QgaGF2ZSBhIHZhbGlkIHRlbmFudCwgY2hlY2sgaWYgd2UgaGF2ZSBhIHRlbmFudCBJRFxuICAgICAgICBsZXQgcmVwYWlyZWRUZW5hbnRJZDtcbiAgICAgICAgXG4gICAgICAgIGlmICh0ZW5hbnRJZCkge1xuICAgICAgICAgIC8vIFZhbGlkYXRlIGFuZCByZXBhaXIgdGhlIGV4aXN0aW5nIHRlbmFudCBJRFxuICAgICAgICAgIHJlcGFpcmVkVGVuYW50SWQgPSB2YWxpZGF0ZUFuZFJlcGFpclV1aWQodGVuYW50SWQpO1xuICAgICAgICAgIGxvZ2dlci5pbmZvKCdVc2luZyBleGlzdGluZyB0ZW5hbnQgSUQgKHJlcGFpcmVkKTonLCByZXBhaXJlZFRlbmFudElkKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDaGVjayBpZiB0aGlzIHRlbmFudCBleGlzdHNcbiAgICAgICAgICBjb25zdCBleGlzdGluZ1RlbmFudCA9IGF3YWl0IGZpbmRUZW5hbnRCeUlkKHBvb2wsIHJlcGFpcmVkVGVuYW50SWQpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChleGlzdGluZ1RlbmFudCAmJiBleGlzdGluZ1RlbmFudC5pc19hY3RpdmUpIHtcbiAgICAgICAgICAgIC8vIFVwZGF0ZSB1c2VyJ3MgdGVuYW50X2lkIGlmIHdlIGhhdmUgYSB1c2VyIGVtYWlsXG4gICAgICAgICAgICBpZiAodXNlckVtYWlsKSB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdVc2VyID0gYXdhaXQgZmluZFVzZXJCeUVtYWlsKHBvb2wsIHVzZXJFbWFpbCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nVXNlcikge1xuICAgICAgICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSB1c2VyJ3MgdGVuYW50IElEXG4gICAgICAgICAgICAgICAgICBhd2FpdCBwb29sLnF1ZXJ5KGBcbiAgICAgICAgICAgICAgICAgICAgVVBEQVRFIGN1c3RvbV9hdXRoX3VzZXIgXG4gICAgICAgICAgICAgICAgICAgIFNFVCB0ZW5hbnRfaWQgPSAkMVxuICAgICAgICAgICAgICAgICAgICBXSEVSRSBpZCA9ICQyXG4gICAgICAgICAgICAgICAgICBgLCBbcmVwYWlyZWRUZW5hbnRJZCwgZXhpc3RpbmdVc2VyLmlkXSk7XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIGxvZ2dlci5pbmZvKCdVcGRhdGVkIGV4aXN0aW5nIHVzZXIgd2l0aCB0ZW5hbnQgSUQ6Jywge1xuICAgICAgICAgICAgICAgICAgICB1c2VyX2lkOiBleGlzdGluZ1VzZXIuaWQsXG4gICAgICAgICAgICAgICAgICAgIHRlbmFudF9pZDogcmVwYWlyZWRUZW5hbnRJZFxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgIC8vIENyZWF0ZSBhIG5ldyB1c2VyIHdpdGggdGhpcyBlbWFpbCBhbmQgdGVuYW50IElEXG4gICAgICAgICAgICAgICAgICBhd2FpdCBwb29sLnF1ZXJ5KGBcbiAgICAgICAgICAgICAgICAgICAgSU5TRVJUIElOVE8gY3VzdG9tX2F1dGhfdXNlciAoZW1haWwsIHRlbmFudF9pZClcbiAgICAgICAgICAgICAgICAgICAgVkFMVUVTICgkMSwgJDIpXG4gICAgICAgICAgICAgICAgICAgIE9OIENPTkZMSUNUIChlbWFpbCkgRE8gVVBEQVRFXG4gICAgICAgICAgICAgICAgICAgIFNFVCB0ZW5hbnRfaWQgPSBFWENMVURFRC50ZW5hbnRfaWRcbiAgICAgICAgICAgICAgICAgIGAsIFt1c2VyRW1haWwsIHJlcGFpcmVkVGVuYW50SWRdKTtcbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ0NyZWF0ZWQgbmV3IHVzZXIgd2l0aCB0ZW5hbnQgSUQ6Jywge1xuICAgICAgICAgICAgICAgICAgICBlbWFpbDogdXNlckVtYWlsLFxuICAgICAgICAgICAgICAgICAgICB0ZW5hbnRfaWQ6IHJlcGFpcmVkVGVuYW50SWRcbiAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSBjYXRjaCAodXNlclVwZGF0ZUVycm9yKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLndhcm4oJ0Vycm9yIHVwZGF0aW5nIHVzZXIgdGVuYW50IElEOicsIHVzZXJVcGRhdGVFcnJvcik7XG4gICAgICAgICAgICAgICAgLy8gQ29udGludWUgc2luY2UgdGhlIHRlbmFudCBleGlzdHNcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdG9yZSB0ZW5hbnQgSUQgaW4gYSBjb29raWUgZm9yIGZ1dHVyZSByZXF1ZXN0c1xuICAgICAgICAgICAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gICAgICAgICAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ3RlbmFudElkJywgZXhpc3RpbmdUZW5hbnQuaWQsIHtcbiAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYXdhaXQgY29va2llU3RvcmUuc2V0KCdidXNpbmVzc2lkJywgZXhpc3RpbmdUZW5hbnQuaWQsIHtcbiAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgICB0ZW5hbnRfaWQ6IGV4aXN0aW5nVGVuYW50LmlkLFxuICAgICAgICAgICAgICBuYW1lOiBleGlzdGluZ1RlbmFudC5uYW1lLFxuICAgICAgICAgICAgICBzY2hlbWFfbmFtZTogZXhpc3RpbmdUZW5hbnQuc2NoZW1hX25hbWUsXG4gICAgICAgICAgICAgIGRpcmVjdF9kYjogdHJ1ZSxcbiAgICAgICAgICAgICAgZXhpc3Rpbmc6IHRydWUsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdVc2luZyBleGlzdGluZyB0ZW5hbnQnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAodXNlckVtYWlsKSB7XG4gICAgICAgICAgLy8gTm8gdGVuYW50IElELCBidXQgd2UgaGF2ZSBhbiBlbWFpbC4gQ2hlY2sgaWYgYW55IHRlbmFudCBleGlzdHMgZm9yIHRoaXMgdXNlclxuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBvb2wucXVlcnkoYFxuICAgICAgICAgICAgU0VMRUNUIHQuaWQsIHQubmFtZSwgdC5zY2hlbWFfbmFtZSwgdC5pc19hY3RpdmVcbiAgICAgICAgICAgIEZST00gY3VzdG9tX2F1dGhfdGVuYW50IHRcbiAgICAgICAgICAgIEpPSU4gY3VzdG9tX2F1dGhfdXNlciB1IE9OIHUudGVuYW50X2lkID0gdC5pZFxuICAgICAgICAgICAgV0hFUkUgdS5lbWFpbCA9ICQxIEFORCB0LmlzX2FjdGl2ZSA9IHRydWVcbiAgICAgICAgICAgIExJTUlUIDE7XG4gICAgICAgICAgYCwgW3VzZXJFbWFpbF0pO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChyZXN1bHQucm93cyAmJiByZXN1bHQucm93cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1RlbmFudCA9IHJlc3VsdC5yb3dzWzBdO1xuICAgICAgICAgICAgcmVwYWlyZWRUZW5hbnRJZCA9IGV4aXN0aW5nVGVuYW50LmlkO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdG9yZSB0ZW5hbnQgSUQgaW4gYSBjb29raWUgZm9yIGZ1dHVyZSByZXF1ZXN0c1xuICAgICAgICAgICAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gICAgICAgICAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ3RlbmFudElkJywgZXhpc3RpbmdUZW5hbnQuaWQsIHtcbiAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYXdhaXQgY29va2llU3RvcmUuc2V0KCdidXNpbmVzc2lkJywgZXhpc3RpbmdUZW5hbnQuaWQsIHtcbiAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsb2dnZXIuaW5mbygnRm91bmQgdGVuYW50IGZvciBlbWFpbDonLCB7XG4gICAgICAgICAgICAgIGVtYWlsOiB1c2VyRW1haWwsXG4gICAgICAgICAgICAgIHRlbmFudF9pZDogZXhpc3RpbmdUZW5hbnQuaWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgICB0ZW5hbnRfaWQ6IGV4aXN0aW5nVGVuYW50LmlkLFxuICAgICAgICAgICAgICBuYW1lOiBleGlzdGluZ1RlbmFudC5uYW1lLFxuICAgICAgICAgICAgICBzY2hlbWFfbmFtZTogZXhpc3RpbmdUZW5hbnQuc2NoZW1hX25hbWUsXG4gICAgICAgICAgICAgIGRpcmVjdF9kYjogdHJ1ZSxcbiAgICAgICAgICAgICAgZXhpc3Rpbmc6IHRydWUsXG4gICAgICAgICAgICAgIG1lc3NhZ2U6ICdGb3VuZCBleGlzdGluZyB0ZW5hbnQgZm9yIHVzZXIgZW1haWwnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gR2VuZXJhdGUgYSBuZXcgdGVuYW50IElEIGlmIHdlIGNhbid0IGZpbmQgb25lXG4gICAgICAgICAgICByZXBhaXJlZFRlbmFudElkID0gdXVpZHY0KCk7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbygnR2VuZXJhdGluZyBuZXcgdGVuYW50IElEIGZvciB1c2VyOicsIHtcbiAgICAgICAgICAgICAgZW1haWw6IHVzZXJFbWFpbCxcbiAgICAgICAgICAgICAgdGVuYW50X2lkOiByZXBhaXJlZFRlbmFudElkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gR2VuZXJhdGUgYSBuZXcgdGVuYW50IElEIGlmIHdlIGNhbid0IGZpbmQgb25lXG4gICAgICAgICAgcmVwYWlyZWRUZW5hbnRJZCA9IHV1aWR2NCgpO1xuICAgICAgICAgIGxvZ2dlci5pbmZvKCdHZW5lcmF0aW5nIG5ldyB0ZW5hbnQgSUQgYXMgbGFzdCByZXNvcnQ6JywgcmVwYWlyZWRUZW5hbnRJZCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC8vIFRlbmFudCBkb2Vzbid0IGV4aXN0LCB3ZSBuZWVkIHRvIHVzZSB0aGUgc2NoZW1hIG1hbmFnZXIgdG8gY3JlYXRlIGl0XG4gICAgICAgIC8vIENhbGwgdGhlIHNjaGVtYSBtYW5hZ2VyIEFQSSB0byBjcmVhdGUgdGhlIHNjaGVtYVxuICAgICAgICBjb25zdCBzY2hlbWFNYW5hZ2VyVXJsID0gbmV3IFVSTCgnL2FwaS90ZW5hbnQvc2NoZW1hLW1hbmFnZXInLCByZXF1ZXN0LnVybCkudG9TdHJpbmcoKTtcbiAgICAgICAgbG9nZ2VyLmluZm8oJ0NhbGxpbmcgc2NoZW1hIG1hbmFnZXIgQVBJOicsIHNjaGVtYU1hbmFnZXJVcmwpO1xuICAgICAgICBcbiAgICAgICAgLy8gQ2hlY2sgaWYgZXhwbGljaXQgY3JlYXRpb24gd2FzIHJlcXVlc3RlZFxuICAgICAgICBjb25zdCBmb3JjZUNyZWF0ZSA9IGJvZHkuZm9yY2VDcmVhdGUgPT09IHRydWU7XG4gICAgICAgIFxuICAgICAgICAvLyBPbmx5IGFsbG93IHRlbmFudCBjcmVhdGlvbiBpZiBleHBsaWNpdGx5IHJlcXVlc3RlZCBvciBpZiB0aGlzIGlzIGEgZGFzaGJvYXJkIEFQSSBjYWxsXG4gICAgICAgIGNvbnN0IHNob3VsZENyZWF0ZVRlbmFudCA9IGZvcmNlQ3JlYXRlIHx8IEJvb2xlYW4oYm9keS5pc0Zyb21EYXNoYm9hcmQpO1xuICAgICAgICBcbiAgICAgICAgLy8gTG9nIHRoZSB0ZW5hbnQgY3JlYXRpb24gZGVjaXNpb25cbiAgICAgICAgbG9nZ2VyLmluZm8oYCR7c2hvdWxkQ3JlYXRlVGVuYW50ID8gJ0NyZWF0aW5nJyA6ICdWYWxpZGF0aW5nJ30gdGVuYW50IHdpdGggSUQ6ICR7cmVwYWlyZWRUZW5hbnRJZH1gKTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHNjaGVtYVJlc3BvbnNlID0gYXdhaXQgZmV0Y2goc2NoZW1hTWFuYWdlclVybCwge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIHRlbmFudElkOiByZXBhaXJlZFRlbmFudElkLFxuICAgICAgICAgICAgYnVzaW5lc3NOYW1lLFxuICAgICAgICAgICAgZm9yY2VDcmVhdGU6IHNob3VsZENyZWF0ZVRlbmFudCAvLyBPbmx5IGNyZWF0ZSBpZiBleHBsaWNpdGx5IHJlcXVlc3RlZFxuICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgaWYgKHNjaGVtYVJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgY29uc3Qgc2NoZW1hUmVzdWx0ID0gYXdhaXQgc2NoZW1hUmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChzY2hlbWFSZXN1bHQuc3VjY2Vzcykge1xuICAgICAgICAgICAgbG9nZ2VyLmluZm8oJ1NjaGVtYSBtYW5hZ2VyIGNyZWF0ZWQgc2NoZW1hIHN1Y2Nlc3NmdWxseTonLCBzY2hlbWFSZXN1bHQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBOb3cgdXBkYXRlIHRoZSB1c2VyJ3MgdGVuYW50X2lkIGlmIHRoZSB1c2VyIGV4aXN0c1xuICAgICAgICAgICAgaWYgKHVzZXJFbWFpbCkge1xuICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nVXNlciA9IGF3YWl0IGZpbmRVc2VyQnlFbWFpbChwb29sLCB1c2VyRW1haWwpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ1VzZXIpIHtcbiAgICAgICAgICAgICAgICAgIC8vIFVwZGF0ZSB0aGUgdXNlcidzIHRlbmFudCBJRFxuICAgICAgICAgICAgICAgICAgYXdhaXQgcG9vbC5xdWVyeShgXG4gICAgICAgICAgICAgICAgICAgIFVQREFURSBjdXN0b21fYXV0aF91c2VyIFxuICAgICAgICAgICAgICAgICAgICBTRVQgdGVuYW50X2lkID0gJDFcbiAgICAgICAgICAgICAgICAgICAgV0hFUkUgaWQgPSAkMlxuICAgICAgICAgICAgICAgICAgYCwgW3JlcGFpcmVkVGVuYW50SWQsIGV4aXN0aW5nVXNlci5pZF0pO1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnVXBkYXRlZCBleGlzdGluZyB1c2VyIHdpdGggbmV3IHRlbmFudCBJRDonLCB7XG4gICAgICAgICAgICAgICAgICAgIHVzZXJfaWQ6IGV4aXN0aW5nVXNlci5pZCxcbiAgICAgICAgICAgICAgICAgICAgdGVuYW50X2lkOiByZXBhaXJlZFRlbmFudElkXG4gICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IHVzZXIgd2l0aCB0aGlzIGVtYWlsIGFuZCB0ZW5hbnQgSURcbiAgICAgICAgICAgICAgICAgIGF3YWl0IHBvb2wucXVlcnkoYFxuICAgICAgICAgICAgICAgICAgICBJTlNFUlQgSU5UTyBjdXN0b21fYXV0aF91c2VyIChlbWFpbCwgdGVuYW50X2lkKVxuICAgICAgICAgICAgICAgICAgICBWQUxVRVMgKCQxLCAkMilcbiAgICAgICAgICAgICAgICAgICAgT04gQ09ORkxJQ1QgKGVtYWlsKSBETyBVUERBVEVcbiAgICAgICAgICAgICAgICAgICAgU0VUIHRlbmFudF9pZCA9IEVYQ0xVREVELnRlbmFudF9pZFxuICAgICAgICAgICAgICAgICAgYCwgW3VzZXJFbWFpbCwgcmVwYWlyZWRUZW5hbnRJZF0pO1xuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBsb2dnZXIuaW5mbygnQ3JlYXRlZCBuZXcgdXNlciB3aXRoIHRlbmFudCBJRDonLCB7XG4gICAgICAgICAgICAgICAgICAgIGVtYWlsOiB1c2VyRW1haWwsXG4gICAgICAgICAgICAgICAgICAgIHRlbmFudF9pZDogcmVwYWlyZWRUZW5hbnRJZFxuICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9IGNhdGNoICh1c2VyVXBkYXRlRXJyb3IpIHtcbiAgICAgICAgICAgICAgICBsb2dnZXIud2FybignRXJyb3IgdXBkYXRpbmcgdXNlciB0ZW5hbnQgSUQ6JywgdXNlclVwZGF0ZUVycm9yKTtcbiAgICAgICAgICAgICAgICAvLyBDb250aW51ZSBzaW5jZSB0aGUgdGVuYW50IHdhcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFN0b3JlIHRlbmFudCBJRCBpbiBjb29raWVzIGZvciBmdXR1cmUgcmVxdWVzdHNcbiAgICAgICAgICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgICAgICAgICAgYXdhaXQgY29va2llU3RvcmUuc2V0KCd0ZW5hbnRJZCcsIHJlcGFpcmVkVGVuYW50SWQsIHtcbiAgICAgICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgICAgICBzYW1lU2l0ZTogJ2xheCcsXG4gICAgICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYXdhaXQgY29va2llU3RvcmUuc2V0KCdidXNpbmVzc2lkJywgcmVwYWlyZWRUZW5hbnRJZCwge1xuICAgICAgICAgICAgICBwYXRoOiAnLycsXG4gICAgICAgICAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgICAgICAgICAgbWF4QWdlOiA2MCAqIDYwICogMjQgKiAzNjUsIC8vIDEgeWVhclxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgIHRlbmFudF9pZDogc2NoZW1hUmVzdWx0LnRlbmFudElkLFxuICAgICAgICAgICAgICBuYW1lOiBzY2hlbWFSZXN1bHQudGVuYW50SW5mbz8ubmFtZSB8fCBidXNpbmVzc05hbWUsXG4gICAgICAgICAgICAgIHNjaGVtYV9uYW1lOiBzY2hlbWFSZXN1bHQuc2NoZW1hTmFtZSxcbiAgICAgICAgICAgICAgZGlyZWN0X2RiOiB0cnVlLFxuICAgICAgICAgICAgICBtZXNzYWdlOiAnVGVuYW50IGluaXRpYWxpemVkIHN1Y2Nlc3NmdWxseSB2aWEgc2NoZW1hIG1hbmFnZXInXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKCdTY2hlbWEgbWFuYWdlciBmYWlsZWQgdG8gY3JlYXRlIHNjaGVtYTonLCBzY2hlbWFSZXN1bHQpO1xuICAgICAgICAgICAgLy8gQ29udGludWUgd2l0aCBmYWxsYmFjayBhcHByb2FjaGVzXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFNjaGVtYSBtYW5hZ2VyIEFQSSBjYWxsIGZhaWxlZFxuICAgICAgICAgIGNvbnN0IGVycm9yVGV4dCA9IGF3YWl0IHNjaGVtYVJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgICBsb2dnZXIuZXJyb3IoJ1NjaGVtYSBtYW5hZ2VyIEFQSSBlcnJvcjonLCBlcnJvclRleHQpO1xuICAgICAgICAgIC8vIENvbnRpbnVlIHdpdGggZmFsbGJhY2sgYXBwcm9hY2hlc1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChkYlF1ZXJ5RXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKCdFcnJvciBleGVjdXRpbmcgZGF0YWJhc2UgcXVlcnk6JywgZGJRdWVyeUVycm9yKTtcbiAgICAgICAgLy8gUG9vbCB3aWxsIGJlIGNsb3NlZCBpbiBmaW5hbGx5IGJsb2NrXG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICAvLyBDbG9zZSB0aGUgcG9vbCBjb25uZWN0aW9uIG9ubHkgb25jZSBhdCB0aGUgZW5kXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgYXdhaXQgcG9vbC5lbmQoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICBsb2dnZXIud2FybignRXJyb3IgY2xvc2luZyBkYXRhYmFzZSBwb29sLCBtYXkgYWxyZWFkeSBiZSBjbG9zZWQ6JywgZXJyb3IubWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGNhdGNoIChkYkVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoJ0RpcmVjdCBkYXRhYmFzZSBpbml0aWFsaXphdGlvbiBmYWlsZWQ6JywgZGJFcnJvcik7XG4gICAgICAvLyBDb250aW51ZSB0byBBUEkgYXBwcm9hY2ggLSBkb24ndCByZXR1cm4gZXJyb3JcbiAgICB9XG4gICAgXG4gICAgLy8gSWYgd2UgY2FuJ3QgdXNlIGRpcmVjdCBEQiBhcHByb2FjaCwgcmV0dXJuIGEgc3VjY2VzcyByZXNwb25zZSB3aXRoIHRoZSB0ZW5hbnQgSUQgd2UgaGF2ZVxuICAgIC8vIFRoaXMgYWxsb3dzIHRoZSBkYXNoYm9hcmQgdG8gYXQgbGVhc3QgbG9hZCBldmVuIGlmIHRoZSBkYXRhYmFzZSBpc24ndCBhY2Nlc3NpYmxlXG4gICAgbG9nZ2VyLmluZm8oJ1VzaW5nIGZhbGxiYWNrIHRlbmFudCBpbml0aWFsaXphdGlvbiBhcHByb2FjaCcpO1xuICAgIFxuICAgIC8vIFZhbGlkYXRlIGFuZCByZXBhaXIgdGhlIFVVSUQgYmVmb3JlIHVzaW5nIGl0XG4gICAgY29uc3QgcmVwYWlyZWRUZW5hbnRJZCA9IHZhbGlkYXRlQW5kUmVwYWlyVXVpZCh0ZW5hbnRJZCB8fCB1dWlkdjQoKSk7XG4gICAgXG4gICAgLy8gU3RvcmUgdGVuYW50IElEIGluIGEgY29va2llIGZvciBmdXR1cmUgcmVxdWVzdHNcbiAgICBjb25zdCBjb29raWVTdG9yZSA9IGF3YWl0IGNvb2tpZXMoKTtcbiAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ3RlbmFudElkJywgcmVwYWlyZWRUZW5hbnRJZCwge1xuICAgICAgcGF0aDogJy8nLFxuICAgICAgc2FtZVNpdGU6ICdsYXgnLFxuICAgICAgbWF4QWdlOiA2MCAqIDYwICogMjQgKiAzNjUsIC8vIDEgeWVhclxuICAgIH0pO1xuICAgIGF3YWl0IGNvb2tpZVN0b3JlLnNldCgnYnVzaW5lc3NpZCcsIHJlcGFpcmVkVGVuYW50SWQsIHtcbiAgICAgIHBhdGg6ICcvJyxcbiAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICB9KTtcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIHRlbmFudF9pZDogcmVwYWlyZWRUZW5hbnRJZCxcbiAgICAgICAgbmFtZTogYnVzaW5lc3NOYW1lLFxuICAgICAgICBzdGF0dXM6ICdhY3RpdmUnLFxuICAgICAgICBmYWxsYmFjazogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ1RlbmFudCBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHkgdmlhIGZhbGxiYWNrIG1ldGhvZCdcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogMjAwIH1cbiAgICApO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGxvZ2dlci5lcnJvcignRXJyb3IgaW5pdGlhbGl6aW5nIHRlbmFudDonLCBlcnJvcik7XG4gICAgXG4gICAgLy8gUmV0dXJuIGEgZ2VuZXJpYyBlcnJvciByZXNwb25zZSB3aXRoIHByb3BlciBoZWFkZXJzXG4gICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoXG4gICAgICBKU09OLnN0cmluZ2lmeSh7IFxuICAgICAgICBlcnJvcjogJ0ZhaWxlZCB0byBpbml0aWFsaXplIHRlbmFudCcsXG4gICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlXG4gICAgICB9KSxcbiAgICAgIHsgXG4gICAgICAgIHN0YXR1czogNTAwLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgKTtcbiAgfVxufVxuXG4vLyBBZGQgYSBzaW1wbGUgR0VUIGhhbmRsZXIgZm9yIG1pbmltYWwgZGVwZW5kZW5jeSB0ZW5hbnQgaW5pdCBcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdCkge1xuICB0cnkge1xuICAgIC8vIEdldCB0ZW5hbnQgSUQgZnJvbSBjb29raWVzXG4gICAgbGV0IHRlbmFudElkID0gbnVsbDtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29va2llU3RvcmUgPSBhd2FpdCBjb29raWVzKCk7XG4gICAgICBjb25zdCBidXNpbmVzc0lkQ29va2llID0gY29va2llU3RvcmUuZ2V0KCdidXNpbmVzc2lkJyk7XG4gICAgICBjb25zdCB0ZW5hbnRJZENvb2tpZSA9IGNvb2tpZVN0b3JlLmdldCgndGVuYW50SWQnKTtcbiAgICAgIFxuICAgICAgdGVuYW50SWQgPSBidXNpbmVzc0lkQ29va2llPy52YWx1ZSB8fCB0ZW5hbnRJZENvb2tpZT8udmFsdWU7XG4gICAgICBcbiAgICAgIGxvZ2dlci5pbmZvKCdDaGVja2VkIGNvb2tpZXMgZm9yIHRlbmFudCBJRDonLCB7IFxuICAgICAgICBidXNpbmVzc0lkQ29va2llOiBidXNpbmVzc0lkQ29va2llPy52YWx1ZSA/ICdmb3VuZCcgOiAnbWlzc2luZycsXG4gICAgICAgIHRlbmFudElkQ29va2llOiB0ZW5hbnRJZENvb2tpZT8udmFsdWUgPyAnZm91bmQnIDogJ21pc3NpbmcnLFxuICAgICAgICB0ZW5hbnRJZFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoY29va2llRXJyb3IpIHtcbiAgICAgIGxvZ2dlci53YXJuKCdFcnJvciBhY2Nlc3NpbmcgY29va2llczonLCBjb29raWVFcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgXG4gICAgLy8gSWYgbm8gdGVuYW50IElEIGZvdW5kLCBnZW5lcmF0ZSBhIG5ldyBvbmUgYXMgZmFsbGJhY2tcbiAgICBpZiAoIXRlbmFudElkIHx8ICF2YWxpZGF0ZVRlbmFudElkRm9ybWF0KHRlbmFudElkKSkge1xuICAgICAgdGVuYW50SWQgPSB1dWlkdjQoKTtcbiAgICAgIGxvZ2dlci5pbmZvKCdHZW5lcmF0ZWQgbmV3IHRlbmFudCBJRDonLCB0ZW5hbnRJZCk7XG4gICAgICBcbiAgICAgIC8vIFN0b3JlIGluIGNvb2tpZXNcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgY29va2llcygpO1xuICAgICAgICBhd2FpdCBjb29raWVTdG9yZS5zZXQoJ3RlbmFudElkJywgdGVuYW50SWQsIHtcbiAgICAgICAgICBwYXRoOiAnLycsXG4gICAgICAgICAgc2FtZVNpdGU6ICdsYXgnLFxuICAgICAgICAgIG1heEFnZTogNjAgKiA2MCAqIDI0ICogMzY1LCAvLyAxIHllYXJcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IGNvb2tpZVN0b3JlLnNldCgnYnVzaW5lc3NpZCcsIHRlbmFudElkLCB7XG4gICAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICAgIHNhbWVTaXRlOiAnbGF4JyxcbiAgICAgICAgICBtYXhBZ2U6IDYwICogNjAgKiAyNCAqIDM2NSwgLy8gMSB5ZWFyXG4gICAgICAgIH0pO1xuICAgICAgfSBjYXRjaCAoY29va2llU2V0RXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKCdFcnJvciBzZXR0aW5nIGNvb2tpZXM6JywgY29va2llU2V0RXJyb3IpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvLyBSZXR1cm4gdGhlIHRlbmFudCBJRCB3aXRob3V0IGRhdGFiYXNlIHZlcmlmaWNhdGlvblxuICAgIC8vIFRoaXMgaXMgYSBsaWdodHdlaWdodCBmYWxsYmFjayB0aGF0IGRvZXNuJ3QgcmVxdWlyZSBEQiBhY2Nlc3NcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIHRlbmFudElkLFxuICAgICAgaXNWZXJpZmllZDogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnTWluaW1hbCB0ZW5hbnQgaW5pdGlhbGl6YXRpb24gY29tcGxldGUnXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdFcnJvciBpbiBtaW5pbWFsIHRlbmFudCBpbml0OicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBHZW5lcmF0ZSBlbWVyZ2VuY3kgZmFsbGJhY2sgdGVuYW50IElEXG4gICAgY29uc3QgZmFsbGJhY2tUZW5hbnRJZCA9ICcxODYwOWVkMi0xYTQ2LTRkNTAtYmM0ZS00ODNkNmUzNDA1ZmYnO1xuICAgIFxuICAgIC8vIFJldHVybiBmYWxsYmFjayByZXNwb25zZSB3aXRoIHByb3BlciBoZWFkZXJzXG4gICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoXG4gICAgICBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgIHRlbmFudElkOiBmYWxsYmFja1RlbmFudElkLFxuICAgICAgICBpc1ZlcmlmaWVkOiBmYWxzZSxcbiAgICAgICAgaXNGYWxsYmFjazogdHJ1ZSxcbiAgICAgICAgbWVzc2FnZTogJ1VzaW5nIGVtZXJnZW5jeSBmYWxsYmFjayB0ZW5hbnQgSUQgZHVlIHRvIGVycm9yJ1xuICAgICAgfSksXG4gICAgICB7IFxuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgfVxuICAgICAgfVxuICAgICk7XG4gIH1cbn0gIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldEF1dGgiLCJnZXRDb2duaXRvVXNlciIsImNvb2tpZXMiLCJ2NCIsInV1aWR2NCIsInZhbGlkYXRlVGVuYW50SWRGb3JtYXQiLCJpc1VVSUQiLCJjcmVhdGVTZXJ2ZXJMb2dnZXIiLCJsb2dnZXIiLCJmb3JtYXRUZW5hbnRJZCIsInRlbmFudElkIiwicmVwbGFjZSIsInZhbGlkYXRlQW5kUmVwYWlyVXVpZCIsInV1aWQiLCJ1dWlkUGF0dGVybiIsInRlc3QiLCJyZXBhaXJlZFV1aWQiLCJsZW5ndGgiLCJjaGFyQXQiLCJpbmNsdWRlcyIsInN1YnN0cmluZyIsImluZm8iLCJvcmlnaW5hbCIsInJlcGFpcmVkIiwibmV3VXVpZCIsIndhcm4iLCJnZW5lcmF0ZWQiLCJmaW5kVXNlckJ5RW1haWwiLCJwb29sIiwiZW1haWwiLCJxdWVyeSIsInJlc3VsdCIsInJvd3MiLCJlcnJvciIsImZpbmRUZW5hbnRCeUlkIiwiUE9TVCIsInJlcXVlc3QiLCJjb2duaXRvVXNlciIsImJvZHkiLCJqc29uIiwiZSIsInJlcGFpcmVkVGVuYW50SWQiLCJmb3JtYXR0ZWRUZW5hbnRJZCIsImNvb2tpZVN0b3JlIiwic2V0IiwicGF0aCIsInNhbWVTaXRlIiwibWF4QWdlIiwic3VjY2VzcyIsInRlbmFudF9pZCIsIm5hbWUiLCJidXNpbmVzc05hbWUiLCJzdGF0dXMiLCJmYWxsYmFjayIsIm1lc3NhZ2UiLCJvcmlnaW5hbFRlbmFudElkIiwiYnVzaW5lc3NJZENvb2tpZSIsImdldCIsInRlbmFudElkQ29va2llIiwidmFsdWUiLCJjb29raWVFcnJvciIsInVzZXJFbWFpbCIsIlBvb2wiLCJyZXF1aXJlIiwidXNlciIsInByb2Nlc3MiLCJlbnYiLCJQT1NUR1JFU19VU0VSIiwiaG9zdCIsIlBPU1RHUkVTX0hPU1QiLCJkYXRhYmFzZSIsIlBPU1RHUkVTX0RCIiwicGFzc3dvcmQiLCJQT1NUR1JFU19QQVNTV09SRCIsInBvcnQiLCJQT1NUR1JFU19QT1JUIiwic3NsIiwiUE9TVEdSRVNfU1NMIiwicmVqZWN0VW5hdXRob3JpemVkIiwidW5kZWZpbmVkIiwiZXhpc3RpbmdVc2VyIiwiZXhpc3RpbmdUZW5hbnQiLCJpc19hY3RpdmUiLCJpZCIsInNjaGVtYV9uYW1lIiwiZGlyZWN0X2RiIiwiZXhpc3RpbmciLCJ1c2VyX2lkIiwidXNlclVwZGF0ZUVycm9yIiwic2NoZW1hTWFuYWdlclVybCIsIlVSTCIsInVybCIsInRvU3RyaW5nIiwiZm9yY2VDcmVhdGUiLCJzaG91bGRDcmVhdGVUZW5hbnQiLCJCb29sZWFuIiwiaXNGcm9tRGFzaGJvYXJkIiwic2NoZW1hUmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5Iiwib2siLCJzY2hlbWFSZXN1bHQiLCJ0ZW5hbnRJbmZvIiwic2NoZW1hTmFtZSIsImVycm9yVGV4dCIsInRleHQiLCJkYlF1ZXJ5RXJyb3IiLCJlbmQiLCJkYkVycm9yIiwiR0VUIiwiY29va2llU2V0RXJyb3IiLCJpc1ZlcmlmaWVkIiwiZmFsbGJhY2tUZW5hbnRJZCIsImlzRmFsbGJhY2siXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/tenant/init/route.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/auth.js":
/*!*************************!*\
  !*** ./src/lib/auth.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   getAuth: () => (/* binding */ getAuth),\n/* harmony export */   getTenantIdFromSession: () => (/* binding */ getTenantIdFromSession),\n/* harmony export */   hasRole: () => (/* binding */ hasRole)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(rsc)/../../node_modules/.pnpm/next-auth@4.24.11_next@15.2.2_react-dom@18.3.1_react@18.3.1/node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/jwt */ \"(rsc)/../../node_modules/.pnpm/next-auth@4.24.11_next@15.2.2_react-dom@18.3.1_react@18.3.1/node_modules/next-auth/jwt/index.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-auth/providers/credentials */ \"(rsc)/../../node_modules/.pnpm/next-auth@4.24.11_next@15.2.2_react-dom@18.3.1_react@18.3.1/node_modules/next-auth/providers/credentials.js\");\n/* harmony import */ var _axiosConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./axiosConfig */ \"(rsc)/./src/lib/axiosConfig.js\");\n/* harmony import */ var _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+core@6.11.1/node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs\");\n\n\n\n\n\n\n\n// Fix issue with cookies() not being callable directly in some contexts\nconst getCookieStore = async ()=>{\n    try {\n        return (0,next_headers__WEBPACK_IMPORTED_MODULE_5__.cookies)();\n    } catch (error) {\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Auth] Error getting cookie store:', error);\n        return {\n            get: ()=>null,\n            getAll: ()=>[]\n        };\n    }\n};\n/**\n * Options for NextAuth.js used to configure adapters, providers, callbacks, etc.\n * @type {NextAuthOptions}\n */ const authOptions = {\n    providers: [\n        (0,next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n            name: 'Credentials',\n            credentials: {\n                email: {\n                    label: 'Email',\n                    type: 'text'\n                },\n                password: {\n                    label: 'Password',\n                    type: 'password'\n                }\n            },\n            async authorize (credentials) {\n                try {\n                    if (!credentials?.email || !credentials?.password) {\n                        return null;\n                    }\n                    // Make a request to your authentication API\n                    const response = await _axiosConfig__WEBPACK_IMPORTED_MODULE_3__.axiosInstance.post('/api/auth/signin/', {\n                        email: credentials.email,\n                        password: credentials.password\n                    });\n                    if (response.data && response.data.user) {\n                        return {\n                            id: response.data.user.id,\n                            email: response.data.user.email,\n                            name: `${response.data.user.first_name} ${response.data.user.last_name}`,\n                            accessToken: response.data.accessToken,\n                            refreshToken: response.data.refreshToken,\n                            tenantId: response.data.tenantId\n                        };\n                    }\n                    return null;\n                } catch (error) {\n                    _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.error('[NextAuth] Authorization error:', error);\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: 'jwt',\n        maxAge: 30 * 24 * 60 * 60\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.email = user.email;\n                token.name = user.name;\n                token.accessToken = user.accessToken;\n                token.refreshToken = user.refreshToken;\n                token.tenantId = user.tenantId;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            session.user = {\n                id: token.id,\n                email: token.email,\n                name: token.name\n            };\n            session.accessToken = token.accessToken;\n            session.refreshToken = token.refreshToken;\n            session.tenantId = token.tenantId;\n            return session;\n        }\n    },\n    pages: {\n        signIn: '/auth/signin',\n        error: '/auth/error'\n    },\n    debug: \"development\" === 'development'\n};\n/**\n * Get tenant ID from a session or JWT token\n * @param {object} session - The session object from getServerSession\n * @returns {string|null} The tenant ID or null\n */ const getTenantIdFromSession = (session)=>{\n    if (!session) return null;\n    return session.tenantId || null;\n};\n/**\n * Verify if a user has the required role\n * @param {object} session - The session object from getServerSession\n * @param {string[]} requiredRoles - Array of required roles\n * @returns {boolean} True if the user has one of the required roles\n */ const hasRole = (session, requiredRoles)=>{\n    if (!session || !session.user || !session.user.roles) return false;\n    return session.user.roles.some((role)=>requiredRoles.includes(role));\n};\n/**\n * Gets authentication information from the server context\n * This is used by API routes to get the current user and tokens\n * @returns {Promise<{user: object|null, accessToken: string|null, idToken: string|null}>}\n */ async function getAuth() {\n    try {\n        // First try to get auth from cookies using the helper function\n        const cookieStore = await getCookieStore();\n        let accessToken = cookieStore.get('accessToken')?.value;\n        let idToken = cookieStore.get('idToken')?.value;\n        let tenantId = cookieStore.get('tenantId')?.value;\n        let userId = cookieStore.get('userId')?.value;\n        let userEmail = cookieStore.get('userEmail')?.value;\n        // Log what we found for debugging\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.debug('[Auth] getAuth function called', {\n            hasAccessToken: !!accessToken,\n            hasIdToken: !!idToken,\n            hasTenantId: !!tenantId,\n            hasUserId: !!userId\n        });\n        // If we don't have tokens in cookies, try to get from Amplify\n        if (!accessToken || !idToken) {\n            try {\n                _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.debug('[Auth] No tokens in cookies, trying Amplify');\n                const { tokens } = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__.fetchAuthSession)();\n                if (tokens) {\n                    accessToken = tokens.accessToken?.toString();\n                    idToken = tokens.idToken?.toString();\n                    _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.info('[Auth] Retrieved tokens from Amplify');\n                } else {\n                    _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Auth] No tokens available from Amplify');\n                }\n            } catch (amplifyError) {\n                _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Auth] Error fetching Amplify session:', amplifyError);\n            // Continue with tokens from cookies (if any)\n            }\n        }\n        // If we still don't have tokens, authentication has failed\n        if (!accessToken) {\n            _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Auth] No authentication tokens available');\n            return {\n                user: null,\n                accessToken: null,\n                idToken: null\n            };\n        }\n        // If we have tokens but no tenantId, check if we can find default tenant ID\n        if (!tenantId) {\n            tenantId = '18609ed2-1a46-4d50-bc4e-483d6e3405ff'; // Use fallback tenant ID\n            _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.info('[Auth] No tenant ID available, using fallback:', tenantId);\n        }\n        // Ensure we have a userId even if cookies don't have it\n        if (!userId && idToken) {\n            try {\n                // Try to extract sub from idToken\n                // This is simplified - in production would use proper JWT validation\n                const tokenParts = idToken.split('.');\n                if (tokenParts.length === 3) {\n                    const payload = JSON.parse(Buffer.from(tokenParts[1], 'base64').toString());\n                    if (payload.sub) {\n                        userId = payload.sub;\n                        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.info('[Auth] Extracted user ID from token:', userId);\n                    }\n                }\n            } catch (tokenError) {\n                _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Auth] Error extracting user ID from token:', tokenError);\n            }\n        }\n        // Create user object - must include tenantId for RLS\n        const user = {\n            id: userId || 'anonymous',\n            email: userEmail || 'unknown',\n            tenantId: tenantId\n        };\n        return {\n            user,\n            accessToken,\n            idToken\n        };\n    } catch (error) {\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_4__.logger.error('[Auth] Error in getAuth:', error);\n        // Even on error, return a user with fallback tenant ID to allow operations to work\n        return {\n            user: {\n                id: 'anonymous',\n                email: 'unknown',\n                tenantId: '18609ed2-1a46-4d50-bc4e-483d6e3405ff'\n            },\n            accessToken: null,\n            idToken: null\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUF3Q1I7b0JBQ3REO2dCQUNGO1lBQ0YsRUFBRSxPQUFPbUIsWUFBWTtnQkFDbkJuRSx1REFBTUEsQ0FBQ0ssSUFBSSxDQUFDLCtDQUErQzhEO1lBQzdEO1FBQ0Y7UUFFQSxxREFBcUQ7UUFDckQsTUFBTS9DLE9BQU87WUFDWEMsSUFBSTJCLFVBQVU7WUFDZHBDLE9BQU9xQyxhQUFhO1lBQ3BCdkIsVUFBVUE7UUFDWjtRQUVBLE9BQU87WUFDTE47WUFDQUk7WUFDQXVCO1FBQ0Y7SUFDRixFQUFFLE9BQU8zQyxPQUFPO1FBQ2RKLHVEQUFNQSxDQUFDSSxLQUFLLENBQUMsNEJBQTRCQTtRQUV6QyxtRkFBbUY7UUFDbkYsT0FBTztZQUNMZ0IsTUFBTTtnQkFDSkMsSUFBSTtnQkFDSlQsT0FBTztnQkFDUGMsVUFBVTtZQUNaO1lBQ0FGLGFBQWE7WUFDYnVCLFNBQVM7UUFDWDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW9sZGVuZy9wcm9qZWN0eC9mcm9udGVuZC9weWZhY3Rvcl9uZXh0L3NyYy9saWIvYXV0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXV0aE9wdGlvbnMgfSBmcm9tICduZXh0LWF1dGgnO1xuaW1wb3J0IHsgSldUIH0gZnJvbSAnbmV4dC1hdXRoL2p3dCc7XG5pbXBvcnQgQ3JlZGVudGlhbHNQcm92aWRlciBmcm9tICduZXh0LWF1dGgvcHJvdmlkZXJzL2NyZWRlbnRpYWxzJztcbmltcG9ydCB7IGF4aW9zSW5zdGFuY2UgfSBmcm9tICcuL2F4aW9zQ29uZmlnJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0AvdXRpbHMvc2VydmVyTG9nZ2VyJztcbmltcG9ydCB7IGNvb2tpZXMgfSBmcm9tICduZXh0L2hlYWRlcnMnO1xuaW1wb3J0IHsgZmV0Y2hBdXRoU2Vzc2lvbiB9IGZyb20gJ2F3cy1hbXBsaWZ5L2F1dGgnO1xuXG4vLyBGaXggaXNzdWUgd2l0aCBjb29raWVzKCkgbm90IGJlaW5nIGNhbGxhYmxlIGRpcmVjdGx5IGluIHNvbWUgY29udGV4dHNcbmNvbnN0IGdldENvb2tpZVN0b3JlID0gYXN5bmMgKCkgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBjb29raWVzKCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLndhcm4oJ1tBdXRoXSBFcnJvciBnZXR0aW5nIGNvb2tpZSBzdG9yZTonLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIGdldDogKCkgPT4gbnVsbCxcbiAgICAgIGdldEFsbDogKCkgPT4gW11cbiAgICB9O1xuICB9XG59O1xuXG4vKipcbiAqIE9wdGlvbnMgZm9yIE5leHRBdXRoLmpzIHVzZWQgdG8gY29uZmlndXJlIGFkYXB0ZXJzLCBwcm92aWRlcnMsIGNhbGxiYWNrcywgZXRjLlxuICogQHR5cGUge05leHRBdXRoT3B0aW9uc31cbiAqL1xuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zID0ge1xuICBwcm92aWRlcnM6IFtcbiAgICBDcmVkZW50aWFsc1Byb3ZpZGVyKHtcbiAgICAgIG5hbWU6ICdDcmVkZW50aWFscycsXG4gICAgICBjcmVkZW50aWFsczoge1xuICAgICAgICBlbWFpbDogeyBsYWJlbDogJ0VtYWlsJywgdHlwZTogJ3RleHQnIH0sXG4gICAgICAgIHBhc3N3b3JkOiB7IGxhYmVsOiAnUGFzc3dvcmQnLCB0eXBlOiAncGFzc3dvcmQnIH0sXG4gICAgICB9LFxuICAgICAgYXN5bmMgYXV0aG9yaXplKGNyZWRlbnRpYWxzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKCFjcmVkZW50aWFscz8uZW1haWwgfHwgIWNyZWRlbnRpYWxzPy5wYXNzd29yZCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gTWFrZSBhIHJlcXVlc3QgdG8geW91ciBhdXRoZW50aWNhdGlvbiBBUElcbiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zSW5zdGFuY2UucG9zdCgnL2FwaS9hdXRoL3NpZ25pbi8nLCB7XG4gICAgICAgICAgICBlbWFpbDogY3JlZGVudGlhbHMuZW1haWwsXG4gICAgICAgICAgICBwYXNzd29yZDogY3JlZGVudGlhbHMucGFzc3dvcmQsXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSAmJiByZXNwb25zZS5kYXRhLnVzZXIpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIGlkOiByZXNwb25zZS5kYXRhLnVzZXIuaWQsXG4gICAgICAgICAgICAgIGVtYWlsOiByZXNwb25zZS5kYXRhLnVzZXIuZW1haWwsXG4gICAgICAgICAgICAgIG5hbWU6IGAke3Jlc3BvbnNlLmRhdGEudXNlci5maXJzdF9uYW1lfSAke3Jlc3BvbnNlLmRhdGEudXNlci5sYXN0X25hbWV9YCxcbiAgICAgICAgICAgICAgYWNjZXNzVG9rZW46IHJlc3BvbnNlLmRhdGEuYWNjZXNzVG9rZW4sXG4gICAgICAgICAgICAgIHJlZnJlc2hUb2tlbjogcmVzcG9uc2UuZGF0YS5yZWZyZXNoVG9rZW4sXG4gICAgICAgICAgICAgIHRlbmFudElkOiByZXNwb25zZS5kYXRhLnRlbmFudElkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgbG9nZ2VyLmVycm9yKCdbTmV4dEF1dGhdIEF1dGhvcml6YXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pLFxuICBdLFxuICBzZXNzaW9uOiB7XG4gICAgc3RyYXRlZ3k6ICdqd3QnLFxuICAgIG1heEFnZTogMzAgKiAyNCAqIDYwICogNjAsIC8vIDMwIGRheXNcbiAgfSxcbiAgY2FsbGJhY2tzOiB7XG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4uaWQgPSB1c2VyLmlkO1xuICAgICAgICB0b2tlbi5lbWFpbCA9IHVzZXIuZW1haWw7XG4gICAgICAgIHRva2VuLm5hbWUgPSB1c2VyLm5hbWU7XG4gICAgICAgIHRva2VuLmFjY2Vzc1Rva2VuID0gdXNlci5hY2Nlc3NUb2tlbjtcbiAgICAgICAgdG9rZW4ucmVmcmVzaFRva2VuID0gdXNlci5yZWZyZXNoVG9rZW47XG4gICAgICAgIHRva2VuLnRlbmFudElkID0gdXNlci50ZW5hbnRJZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0b2tlbjtcbiAgICB9LFxuICAgIGFzeW5jIHNlc3Npb24oeyBzZXNzaW9uLCB0b2tlbiB9KSB7XG4gICAgICBzZXNzaW9uLnVzZXIgPSB7XG4gICAgICAgIGlkOiB0b2tlbi5pZCxcbiAgICAgICAgZW1haWw6IHRva2VuLmVtYWlsLFxuICAgICAgICBuYW1lOiB0b2tlbi5uYW1lLFxuICAgICAgfTtcbiAgICAgIHNlc3Npb24uYWNjZXNzVG9rZW4gPSB0b2tlbi5hY2Nlc3NUb2tlbjtcbiAgICAgIHNlc3Npb24ucmVmcmVzaFRva2VuID0gdG9rZW4ucmVmcmVzaFRva2VuO1xuICAgICAgc2Vzc2lvbi50ZW5hbnRJZCA9IHRva2VuLnRlbmFudElkO1xuICAgICAgXG4gICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9LFxuICB9LFxuICBwYWdlczoge1xuICAgIHNpZ25JbjogJy9hdXRoL3NpZ25pbicsXG4gICAgZXJyb3I6ICcvYXV0aC9lcnJvcicsXG4gIH0sXG4gIGRlYnVnOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyxcbn07XG5cbi8qKlxuICogR2V0IHRlbmFudCBJRCBmcm9tIGEgc2Vzc2lvbiBvciBKV1QgdG9rZW5cbiAqIEBwYXJhbSB7b2JqZWN0fSBzZXNzaW9uIC0gVGhlIHNlc3Npb24gb2JqZWN0IGZyb20gZ2V0U2VydmVyU2Vzc2lvblxuICogQHJldHVybnMge3N0cmluZ3xudWxsfSBUaGUgdGVuYW50IElEIG9yIG51bGxcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFRlbmFudElkRnJvbVNlc3Npb24gPSAoc2Vzc2lvbikgPT4ge1xuICBpZiAoIXNlc3Npb24pIHJldHVybiBudWxsO1xuICByZXR1cm4gc2Vzc2lvbi50ZW5hbnRJZCB8fCBudWxsO1xufTtcblxuLyoqXG4gKiBWZXJpZnkgaWYgYSB1c2VyIGhhcyB0aGUgcmVxdWlyZWQgcm9sZVxuICogQHBhcmFtIHtvYmplY3R9IHNlc3Npb24gLSBUaGUgc2Vzc2lvbiBvYmplY3QgZnJvbSBnZXRTZXJ2ZXJTZXNzaW9uXG4gKiBAcGFyYW0ge3N0cmluZ1tdfSByZXF1aXJlZFJvbGVzIC0gQXJyYXkgb2YgcmVxdWlyZWQgcm9sZXNcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB1c2VyIGhhcyBvbmUgb2YgdGhlIHJlcXVpcmVkIHJvbGVzXG4gKi9cbmV4cG9ydCBjb25zdCBoYXNSb2xlID0gKHNlc3Npb24sIHJlcXVpcmVkUm9sZXMpID0+IHtcbiAgaWYgKCFzZXNzaW9uIHx8ICFzZXNzaW9uLnVzZXIgfHwgIXNlc3Npb24udXNlci5yb2xlcykgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gc2Vzc2lvbi51c2VyLnJvbGVzLnNvbWUocm9sZSA9PiByZXF1aXJlZFJvbGVzLmluY2x1ZGVzKHJvbGUpKTtcbn07XG5cbi8qKlxuICogR2V0cyBhdXRoZW50aWNhdGlvbiBpbmZvcm1hdGlvbiBmcm9tIHRoZSBzZXJ2ZXIgY29udGV4dFxuICogVGhpcyBpcyB1c2VkIGJ5IEFQSSByb3V0ZXMgdG8gZ2V0IHRoZSBjdXJyZW50IHVzZXIgYW5kIHRva2Vuc1xuICogQHJldHVybnMge1Byb21pc2U8e3VzZXI6IG9iamVjdHxudWxsLCBhY2Nlc3NUb2tlbjogc3RyaW5nfG51bGwsIGlkVG9rZW46IHN0cmluZ3xudWxsfT59XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBdXRoKCkge1xuICB0cnkge1xuICAgIC8vIEZpcnN0IHRyeSB0byBnZXQgYXV0aCBmcm9tIGNvb2tpZXMgdXNpbmcgdGhlIGhlbHBlciBmdW5jdGlvblxuICAgIGNvbnN0IGNvb2tpZVN0b3JlID0gYXdhaXQgZ2V0Q29va2llU3RvcmUoKTtcbiAgICBsZXQgYWNjZXNzVG9rZW4gPSBjb29raWVTdG9yZS5nZXQoJ2FjY2Vzc1Rva2VuJyk/LnZhbHVlO1xuICAgIGxldCBpZFRva2VuID0gY29va2llU3RvcmUuZ2V0KCdpZFRva2VuJyk/LnZhbHVlO1xuICAgIGxldCB0ZW5hbnRJZCA9IGNvb2tpZVN0b3JlLmdldCgndGVuYW50SWQnKT8udmFsdWU7XG4gICAgbGV0IHVzZXJJZCA9IGNvb2tpZVN0b3JlLmdldCgndXNlcklkJyk/LnZhbHVlO1xuICAgIGxldCB1c2VyRW1haWwgPSBjb29raWVTdG9yZS5nZXQoJ3VzZXJFbWFpbCcpPy52YWx1ZTtcbiAgICBcbiAgICAvLyBMb2cgd2hhdCB3ZSBmb3VuZCBmb3IgZGVidWdnaW5nXG4gICAgbG9nZ2VyLmRlYnVnKCdbQXV0aF0gZ2V0QXV0aCBmdW5jdGlvbiBjYWxsZWQnLCB7IFxuICAgICAgaGFzQWNjZXNzVG9rZW46ICEhYWNjZXNzVG9rZW4sXG4gICAgICBoYXNJZFRva2VuOiAhIWlkVG9rZW4sXG4gICAgICBoYXNUZW5hbnRJZDogISF0ZW5hbnRJZCxcbiAgICAgIGhhc1VzZXJJZDogISF1c2VySWRcbiAgICB9KTtcbiAgICBcbiAgICAvLyBJZiB3ZSBkb24ndCBoYXZlIHRva2VucyBpbiBjb29raWVzLCB0cnkgdG8gZ2V0IGZyb20gQW1wbGlmeVxuICAgIGlmICghYWNjZXNzVG9rZW4gfHwgIWlkVG9rZW4pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxvZ2dlci5kZWJ1ZygnW0F1dGhdIE5vIHRva2VucyBpbiBjb29raWVzLCB0cnlpbmcgQW1wbGlmeScpO1xuICAgICAgICBjb25zdCB7IHRva2VucyB9ID0gYXdhaXQgZmV0Y2hBdXRoU2Vzc2lvbigpO1xuICAgICAgICBcbiAgICAgICAgaWYgKHRva2Vucykge1xuICAgICAgICAgIGFjY2Vzc1Rva2VuID0gdG9rZW5zLmFjY2Vzc1Rva2VuPy50b1N0cmluZygpO1xuICAgICAgICAgIGlkVG9rZW4gPSB0b2tlbnMuaWRUb2tlbj8udG9TdHJpbmcoKTtcbiAgICAgICAgICBcbiAgICAgICAgICBsb2dnZXIuaW5mbygnW0F1dGhdIFJldHJpZXZlZCB0b2tlbnMgZnJvbSBBbXBsaWZ5Jyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbG9nZ2VyLndhcm4oJ1tBdXRoXSBObyB0b2tlbnMgYXZhaWxhYmxlIGZyb20gQW1wbGlmeScpO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChhbXBsaWZ5RXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLndhcm4oJ1tBdXRoXSBFcnJvciBmZXRjaGluZyBBbXBsaWZ5IHNlc3Npb246JywgYW1wbGlmeUVycm9yKTtcbiAgICAgICAgLy8gQ29udGludWUgd2l0aCB0b2tlbnMgZnJvbSBjb29raWVzIChpZiBhbnkpXG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIElmIHdlIHN0aWxsIGRvbid0IGhhdmUgdG9rZW5zLCBhdXRoZW50aWNhdGlvbiBoYXMgZmFpbGVkXG4gICAgaWYgKCFhY2Nlc3NUb2tlbikge1xuICAgICAgbG9nZ2VyLndhcm4oJ1tBdXRoXSBObyBhdXRoZW50aWNhdGlvbiB0b2tlbnMgYXZhaWxhYmxlJyk7XG4gICAgICByZXR1cm4geyB1c2VyOiBudWxsLCBhY2Nlc3NUb2tlbjogbnVsbCwgaWRUb2tlbjogbnVsbCB9O1xuICAgIH1cbiAgICBcbiAgICAvLyBJZiB3ZSBoYXZlIHRva2VucyBidXQgbm8gdGVuYW50SWQsIGNoZWNrIGlmIHdlIGNhbiBmaW5kIGRlZmF1bHQgdGVuYW50IElEXG4gICAgaWYgKCF0ZW5hbnRJZCkge1xuICAgICAgdGVuYW50SWQgPSAnMTg2MDllZDItMWE0Ni00ZDUwLWJjNGUtNDgzZDZlMzQwNWZmJzsgLy8gVXNlIGZhbGxiYWNrIHRlbmFudCBJRFxuICAgICAgbG9nZ2VyLmluZm8oJ1tBdXRoXSBObyB0ZW5hbnQgSUQgYXZhaWxhYmxlLCB1c2luZyBmYWxsYmFjazonLCB0ZW5hbnRJZCk7XG4gICAgfVxuICAgIFxuICAgIC8vIEVuc3VyZSB3ZSBoYXZlIGEgdXNlcklkIGV2ZW4gaWYgY29va2llcyBkb24ndCBoYXZlIGl0XG4gICAgaWYgKCF1c2VySWQgJiYgaWRUb2tlbikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVHJ5IHRvIGV4dHJhY3Qgc3ViIGZyb20gaWRUb2tlblxuICAgICAgICAvLyBUaGlzIGlzIHNpbXBsaWZpZWQgLSBpbiBwcm9kdWN0aW9uIHdvdWxkIHVzZSBwcm9wZXIgSldUIHZhbGlkYXRpb25cbiAgICAgICAgY29uc3QgdG9rZW5QYXJ0cyA9IGlkVG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKHRva2VuUGFydHMubGVuZ3RoID09PSAzKSB7XG4gICAgICAgICAgY29uc3QgcGF5bG9hZCA9IEpTT04ucGFyc2UoQnVmZmVyLmZyb20odG9rZW5QYXJ0c1sxXSwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCkpO1xuICAgICAgICAgIGlmIChwYXlsb2FkLnN1Yikge1xuICAgICAgICAgICAgdXNlcklkID0gcGF5bG9hZC5zdWI7XG4gICAgICAgICAgICBsb2dnZXIuaW5mbygnW0F1dGhdIEV4dHJhY3RlZCB1c2VyIElEIGZyb20gdG9rZW46JywgdXNlcklkKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKHRva2VuRXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLndhcm4oJ1tBdXRoXSBFcnJvciBleHRyYWN0aW5nIHVzZXIgSUQgZnJvbSB0b2tlbjonLCB0b2tlbkVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gQ3JlYXRlIHVzZXIgb2JqZWN0IC0gbXVzdCBpbmNsdWRlIHRlbmFudElkIGZvciBSTFNcbiAgICBjb25zdCB1c2VyID0ge1xuICAgICAgaWQ6IHVzZXJJZCB8fCAnYW5vbnltb3VzJyxcbiAgICAgIGVtYWlsOiB1c2VyRW1haWwgfHwgJ3Vua25vd24nLFxuICAgICAgdGVuYW50SWQ6IHRlbmFudElkXG4gICAgfTtcbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgdXNlcixcbiAgICAgIGFjY2Vzc1Rva2VuLFxuICAgICAgaWRUb2tlblxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdbQXV0aF0gRXJyb3IgaW4gZ2V0QXV0aDonLCBlcnJvcik7XG4gICAgXG4gICAgLy8gRXZlbiBvbiBlcnJvciwgcmV0dXJuIGEgdXNlciB3aXRoIGZhbGxiYWNrIHRlbmFudCBJRCB0byBhbGxvdyBvcGVyYXRpb25zIHRvIHdvcmtcbiAgICByZXR1cm4geyBcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgaWQ6ICdhbm9ueW1vdXMnLFxuICAgICAgICBlbWFpbDogJ3Vua25vd24nLFxuICAgICAgICB0ZW5hbnRJZDogJzE4NjA5ZWQyLTFhNDYtNGQ1MC1iYzRlLTQ4M2Q2ZTM0MDVmZidcbiAgICAgIH0sIFxuICAgICAgYWNjZXNzVG9rZW46IG51bGwsIFxuICAgICAgaWRUb2tlbjogbnVsbCBcbiAgICB9O1xuICB9XG59Il0sIm5hbWVzIjpbIk5leHRBdXRoT3B0aW9ucyIsIkpXVCIsIkNyZWRlbnRpYWxzUHJvdmlkZXIiLCJheGlvc0luc3RhbmNlIiwibG9nZ2VyIiwiY29va2llcyIsImZldGNoQXV0aFNlc3Npb24iLCJnZXRDb29raWVTdG9yZSIsImVycm9yIiwid2FybiIsImdldCIsImdldEFsbCIsImF1dGhPcHRpb25zIiwicHJvdmlkZXJzIiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJwYXNzd29yZCIsImF1dGhvcml6ZSIsInJlc3BvbnNlIiwicG9zdCIsImRhdGEiLCJ1c2VyIiwiaWQiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwiYWNjZXNzVG9rZW4iLCJyZWZyZXNoVG9rZW4iLCJ0ZW5hbnRJZCIsInNlc3Npb24iLCJzdHJhdGVneSIsIm1heEFnZSIsImNhbGxiYWNrcyIsImp3dCIsInRva2VuIiwicGFnZXMiLCJzaWduSW4iLCJkZWJ1ZyIsInByb2Nlc3MiLCJnZXRUZW5hbnRJZEZyb21TZXNzaW9uIiwiaGFzUm9sZSIsInJlcXVpcmVkUm9sZXMiLCJyb2xlcyIsInNvbWUiLCJyb2xlIiwiaW5jbHVkZXMiLCJnZXRBdXRoIiwiY29va2llU3RvcmUiLCJ2YWx1ZSIsImlkVG9rZW4iLCJ1c2VySWQiLCJ1c2VyRW1haWwiLCJoYXNBY2Nlc3NUb2tlbiIsImhhc0lkVG9rZW4iLCJoYXNUZW5hbnRJZCIsImhhc1VzZXJJZCIsInRva2VucyIsInRvU3RyaW5nIiwiaW5mbyIsImFtcGxpZnlFcnJvciIsInRva2VuUGFydHMiLCJzcGxpdCIsImxlbmd0aCIsInBheWxvYWQiLCJKU09OIiwicGFyc2UiLCJCdWZmZXIiLCJmcm9tIiwic3ViIiwidG9rZW5FcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/auth.js\n");

/***/ }),

/***/ "(rsc)/./src/lib/axiosConfig.js":
/*!********************************!*\
  !*** ./src/lib/axiosConfig.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   axiosInstance: () => (/* binding */ axiosInstance),
/* harmony export */   backendAxiosInstance: () => (/* binding */ backendAxiosInstance),
/* harmony export */   enhancedAxiosInstance: () => (/* binding */ enhancedAxiosInstance),
/* harmony export */   initAxiosDebug: () => (/* binding */ initAxiosDebug),
/* harmony export */   retryRequest: () => (/* binding */ retryRequest),
/* harmony export */   serverAxiosInstance: () => (/* binding */ serverAxiosInstance),
/* harmony export */   testEnhancedTimeout: () => (/* binding */ testEnhancedTimeout),
/* harmony export */   testRetryMechanism: () => (/* binding */ testRetryMechanism),
/* harmony export */   testStandardTimeout: () => (/* binding */ testStandardTimeout),
/* harmony export */   useApi: () => (/* binding */ useApi)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);

const axiosInstance = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call axiosInstance() from the server but axiosInstance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"axiosInstance",
);const serverAxiosInstance = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call serverAxiosInstance() from the server but serverAxiosInstance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"serverAxiosInstance",
);const backendAxiosInstance = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call backendAxiosInstance() from the server but backendAxiosInstance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"backendAxiosInstance",
);const enhancedAxiosInstance = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call enhancedAxiosInstance() from the server but enhancedAxiosInstance is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"enhancedAxiosInstance",
);const retryRequest = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call retryRequest() from the server but retryRequest is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"retryRequest",
);const testStandardTimeout = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call testStandardTimeout() from the server but testStandardTimeout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"testStandardTimeout",
);const testEnhancedTimeout = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call testEnhancedTimeout() from the server but testEnhancedTimeout is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"testEnhancedTimeout",
);const testRetryMechanism = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call testRetryMechanism() from the server but testRetryMechanism is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"testRetryMechanism",
);const initAxiosDebug = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call initAxiosDebug() from the server but initAxiosDebug is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"initAxiosDebug",
);const useApi = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call useApi() from the server but useApi is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/axiosConfig.js",
"useApi",
);

/***/ }),

/***/ "(rsc)/./src/lib/cognito.js":
/*!****************************!*\
  !*** ./src/lib/cognito.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCognitoTokens: () => (/* binding */ getCognitoTokens),\n/* harmony export */   getCognitoUser: () => (/* binding */ getCognitoUser),\n/* harmony export */   getSession: () => (/* binding */ getSession),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated),\n/* harmony export */   updateUserAttributes: () => (/* binding */ updateUserAttributes)\n/* harmony export */ });\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+auth@6.12.1_@aws-amplify+core@6.11.1/node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/getCurrentUser.mjs\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+auth@6.12.1_@aws-amplify+core@6.11.1/node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/updateUserAttributes.mjs\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+core@6.11.1/node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+auth@6.12.1_@aws-amplify+core@6.11.1/node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchUserAttributes.mjs\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/logger */ \"(rsc)/./src/utils/logger.js\");\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _utils_env_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/env-helpers */ \"(rsc)/./src/utils/env-helpers.js\");\n/* harmony import */ var _utils_serverLogger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n///Users/kuoldeng/projectx/frontend/pyfactor_next/src/lib/cognito.js\n\n\n\n\n// Import server logger for server-side contexts\n\n// Create server logger for server-side operations\nconst serverLogger = (0,_utils_serverLogger__WEBPACK_IMPORTED_MODULE_3__.createServerLogger)('cognito');\n// Helper to get the appropriate logger based on context\nconst getLogger = ()=>(0,_utils_env_helpers__WEBPACK_IMPORTED_MODULE_2__.isServerSide)() ? serverLogger : _utils_logger__WEBPACK_IMPORTED_MODULE_0__.logger;\n/**\n * Updates user attributes in AWS Cognito\n * @param {Object} attributes - The user attributes to update\n */ async function updateUserAttributes(attributes) {\n    try {\n        getLogger().debug('Updating user attributes:', {\n            attributes,\n            timestamp: new Date().toISOString()\n        });\n        // First check if user is authenticated\n        const user = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_4__.getCurrentUser)();\n        if (!user) {\n            throw new Error('No authenticated user found');\n        }\n        // Update attributes\n        await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_5__.updateUserAttributes)({\n            userAttributes: attributes\n        });\n        getLogger().debug('User attributes updated successfully');\n        return true;\n    } catch (error) {\n        getLogger().error('Failed to update user attributes:', {\n            error: error.message,\n            stack: error.stack,\n            attributes\n        });\n        throw error;\n    }\n}\n/**\n * Get the current authenticated session\n */ async function getSession() {\n    try {\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__.fetchAuthSession)();\n        return session;\n    } catch (error) {\n        getLogger().error('Failed to get session:', error);\n        return null;\n    }\n}\n/**\n * Check if user is authenticated\n */ async function isAuthenticated() {\n    try {\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__.fetchAuthSession)();\n        return !!session?.tokens?.accessToken;\n    } catch  {\n        return false;\n    }\n}\n/**\n * Get the current Cognito user\n * @returns {Promise<Object|null>} The user object or null if not authenticated\n */ async function getCognitoUser() {\n    try {\n        // Try fetching the session first\n        try {\n            const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__.fetchAuthSession)();\n            if (session?.tokens?.idToken) {\n                console.info('[getCognitoUser] Found user from session tokens');\n                return session.tokens.idToken.payload;\n            }\n        } catch (sessionError) {\n            console.warn('[getCognitoUser] Error getting auth session:', sessionError.message);\n        // Continue to other methods\n        }\n        // If running on server, try to get user info from cookies\n        if ((0,_utils_env_helpers__WEBPACK_IMPORTED_MODULE_2__.isServerSide)()) {\n            try {\n                const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_1__.cookies)();\n                // Check for ID token in cookies\n                const idTokenCookie = cookieStore.get('idToken')?.value;\n                if (idTokenCookie) {\n                    try {\n                        // Parse the JWT token\n                        const payload = parseJwtToken(idTokenCookie);\n                        if (payload) {\n                            console.info('[getCognitoUser] Found user from server-side ID token cookie');\n                            return payload;\n                        }\n                    } catch (parseError) {\n                        console.error('[getCognitoUser] Error parsing ID token:', parseError);\n                    }\n                }\n                // Check for Cognito cookies\n                const lastAuthUser = cookieStore.get('CognitoIdentityServiceProvider.1o5v84mrgn4gt87khtr179uc5b.LastAuthUser')?.value;\n                if (lastAuthUser) {\n                    const userIdToken = cookieStore.get(`CognitoIdentityServiceProvider.1o5v84mrgn4gt87khtr179uc5b.${lastAuthUser}.idToken`)?.value;\n                    if (userIdToken) {\n                        try {\n                            const payload = parseJwtToken(userIdToken);\n                            if (payload) {\n                                console.info('[getCognitoUser] Found user from server-side Cognito cookie');\n                                return payload;\n                            }\n                        } catch (parseError) {\n                            console.error('[getCognitoUser] Error parsing Cognito token:', parseError);\n                        }\n                    }\n                }\n                // Check for a businessid cookie as fallback\n                const businessIdCookie = cookieStore.get('businessid')?.value;\n                const businessNameCookie = cookieStore.get('businessName')?.value;\n                if (businessIdCookie || businessNameCookie) {\n                    console.info('[getCognitoUser] Creating fallback user from business cookies');\n                    const fallbackUser = {\n                        // Use some dummy values that are safe for tenant creation\n                        sub: 'anonymous-' + Date.now(),\n                        email: 'anonymous@example.com',\n                        'custom:businessid': businessIdCookie || null,\n                        'custom:businessname': businessNameCookie || 'My Business'\n                    };\n                    return fallbackUser;\n                }\n            } catch (cookieError) {\n                console.error('[getCognitoUser] Error accessing cookies:', cookieError);\n            }\n            console.warn('[getCognitoUser] No user found in server context, using fallback user');\n            // Return a fallback anonymous user for server-side operations\n            // This allows the API to still function without full authentication\n            return {\n                sub: 'anonymous-' + Date.now(),\n                email: 'anonymous@example.com',\n                'custom:businessid': null,\n                anonymous: true\n            };\n        }\n        // On client-side, try getting the current user directly\n        try {\n            const user = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_4__.getCurrentUser)();\n            if (user) {\n                const userAttributes = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_7__.fetchUserAttributes)();\n                console.info('[getCognitoUser] Found user attributes from client-side');\n                // Add user ID to attributes if not present\n                if (!userAttributes.sub && user.userId) {\n                    userAttributes.sub = user.userId;\n                }\n                return userAttributes;\n            }\n        } catch (userError) {\n            console.warn('[getCognitoUser] Error getting current user:', userError.message);\n        }\n        // Try local storage as a last resort on client-side\n        if (!(0,_utils_env_helpers__WEBPACK_IMPORTED_MODULE_2__.isServerSide)()) {\n            try {\n                const idToken = localStorage.getItem('idToken');\n                if (idToken) {\n                    try {\n                        const payload = parseJwtToken(idToken);\n                        if (payload) {\n                            console.info('[getCognitoUser] Found user from localStorage token');\n                            return payload;\n                        }\n                    } catch (parseError) {\n                        console.error('[getCognitoUser] Error parsing localStorage token:', parseError);\n                    }\n                }\n            } catch (storageError) {\n                console.warn('[getCognitoUser] Error accessing localStorage:', storageError);\n            }\n        }\n        console.warn('[getCognitoUser] No authenticated user found');\n        return null;\n    } catch (error) {\n        console.error('[getCognitoUser] Authentication error:', error);\n        return null;\n    }\n}\n/**\n * Parse a JWT token string\n * @param {string} token - The JWT token to parse\n * @returns {Object|null} The parsed token payload or null if invalid\n */ function parseJwtToken(token) {\n    if (!token) return null;\n    try {\n        const base64Url = token.split('.')[1];\n        if (!base64Url) return null;\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = Buffer.from(base64, 'base64').toString('utf8');\n        return JSON.parse(jsonPayload);\n    } catch (e) {\n        console.error('[parseJwtToken] Error parsing token:', e);\n        return null;\n    }\n}\n/**\n * Get JWT tokens for the current user\n * @returns {Promise<Object|null>} Object containing accessToken and idToken or null\n */ async function getCognitoTokens() {\n    try {\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_6__.fetchAuthSession)();\n        if (!session?.tokens?.idToken || !session?.tokens?.accessToken) {\n            getLogger().warn('[getCognitoTokens] No valid tokens found');\n            return null;\n        }\n        return {\n            accessToken: session.tokens.accessToken.toString(),\n            idToken: session.tokens.idToken.toString(),\n            refreshToken: session.tokens.refreshToken?.toString() || null,\n            expiration: session.tokens.accessToken.payload.exp * 1000\n        };\n    } catch (error) {\n        getLogger().error('[getCognitoTokens] Error fetching tokens:', error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cognito.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/env-helpers.js":
/*!**********************************!*\
  !*** ./src/utils/env-helpers.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEnvironment: () => (/* binding */ getEnvironment),\n/* harmony export */   getUserAgent: () => (/* binding */ getUserAgent),\n/* harmony export */   isDevelopment: () => (/* binding */ isDevelopment),\n/* harmony export */   isProduction: () => (/* binding */ isProduction),\n/* harmony export */   isServerSide: () => (/* binding */ isServerSide),\n/* harmony export */   makeServerSafe: () => (/* binding */ makeServerSafe)\n/* harmony export */ });\n/**\n * Environment helpers for detecting server/client contexts\n * Used across the app for safe code execution in different contexts\n */ /**\n * Check if code is running on server side\n * @returns {boolean} True if running on server\n */ const isServerSide = ()=>\"undefined\" === 'undefined';\n/**\n * Create a server-safe version of a function\n * Returns the fallback value when running on server\n * @param {Function} fn - Function to make server-safe\n * @param {any} fallbackValue - Value to return on server\n * @returns {Function} Server-safe function\n */ const makeServerSafe = (fn, fallbackValue = null)=>{\n    return (...args)=>{\n        if (isServerSide()) {\n            return fallbackValue;\n        }\n        return fn(...args);\n    };\n};\n/**\n * Get browser user agent safely\n * @returns {string|null} User agent or null on server\n */ const getUserAgent = ()=>{\n    if (isServerSide()) return null;\n    return window.navigator.userAgent;\n};\n/**\n * Get current environment (development/production)\n * @returns {string} Current environment\n */ const getEnvironment = ()=>{\n    return \"development\" || 0;\n};\n/**\n * Check if in development mode\n * @returns {boolean} True if in development\n */ const isDevelopment = ()=>getEnvironment() === 'development';\n/**\n * Check if in production mode\n * @returns {boolean} True if in production\n */ const isProduction = ()=>getEnvironment() === 'production';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdXRpbHMvZW52LWhlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7OztDQUdDLEdBRUQ7OztDQUdDLEdBQ00sTUFBTUEsZUFBZSxJQUFNLGdCQUFrQixZQUFZO0FBRWhFOzs7Ozs7Q0FNQyxHQUNNLE1BQU1DLGlCQUFpQixDQUFDQyxJQUFJQyxnQkFBZ0IsSUFBSTtJQUNyRCxPQUFPLENBQUMsR0FBR0M7UUFDVCxJQUFJSixnQkFBZ0I7WUFDbEIsT0FBT0c7UUFDVDtRQUNBLE9BQU9ELE1BQU1FO0lBQ2Y7QUFDRixFQUFFO0FBRUY7OztDQUdDLEdBQ00sTUFBTUMsZUFBZTtJQUMxQixJQUFJTCxnQkFBZ0IsT0FBTztJQUMzQixPQUFPTSxPQUFPQyxTQUFTLENBQUNDLFNBQVM7QUFDbkMsRUFBRTtBQUVGOzs7Q0FHQyxHQUNNLE1BQU1DLGlCQUFpQjtJQUM1QixPQUFPQyxpQkFBd0IsQ0FBYTtBQUM5QyxFQUFFO0FBRUY7OztDQUdDLEdBQ00sTUFBTUMsZ0JBQWdCLElBQU1GLHFCQUFxQixjQUFjO0FBRXRFOzs7Q0FHQyxHQUNNLE1BQU1HLGVBQWUsSUFBTUgscUJBQXFCLGFBQWEiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW9sZGVuZy9wcm9qZWN0eC9mcm9udGVuZC9weWZhY3Rvcl9uZXh0L3NyYy91dGlscy9lbnYtaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVudmlyb25tZW50IGhlbHBlcnMgZm9yIGRldGVjdGluZyBzZXJ2ZXIvY2xpZW50IGNvbnRleHRzXG4gKiBVc2VkIGFjcm9zcyB0aGUgYXBwIGZvciBzYWZlIGNvZGUgZXhlY3V0aW9uIGluIGRpZmZlcmVudCBjb250ZXh0c1xuICovXG5cbi8qKlxuICogQ2hlY2sgaWYgY29kZSBpcyBydW5uaW5nIG9uIHNlcnZlciBzaWRlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBydW5uaW5nIG9uIHNlcnZlclxuICovXG5leHBvcnQgY29uc3QgaXNTZXJ2ZXJTaWRlID0gKCkgPT4gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCc7XG5cbi8qKlxuICogQ3JlYXRlIGEgc2VydmVyLXNhZmUgdmVyc2lvbiBvZiBhIGZ1bmN0aW9uXG4gKiBSZXR1cm5zIHRoZSBmYWxsYmFjayB2YWx1ZSB3aGVuIHJ1bm5pbmcgb24gc2VydmVyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiAtIEZ1bmN0aW9uIHRvIG1ha2Ugc2VydmVyLXNhZmVcbiAqIEBwYXJhbSB7YW55fSBmYWxsYmFja1ZhbHVlIC0gVmFsdWUgdG8gcmV0dXJuIG9uIHNlcnZlclxuICogQHJldHVybnMge0Z1bmN0aW9ufSBTZXJ2ZXItc2FmZSBmdW5jdGlvblxuICovXG5leHBvcnQgY29uc3QgbWFrZVNlcnZlclNhZmUgPSAoZm4sIGZhbGxiYWNrVmFsdWUgPSBudWxsKSA9PiB7XG4gIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgIGlmIChpc1NlcnZlclNpZGUoKSkge1xuICAgICAgcmV0dXJuIGZhbGxiYWNrVmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBmbiguLi5hcmdzKTtcbiAgfTtcbn07XG5cbi8qKlxuICogR2V0IGJyb3dzZXIgdXNlciBhZ2VudCBzYWZlbHlcbiAqIEByZXR1cm5zIHtzdHJpbmd8bnVsbH0gVXNlciBhZ2VudCBvciBudWxsIG9uIHNlcnZlclxuICovXG5leHBvcnQgY29uc3QgZ2V0VXNlckFnZW50ID0gKCkgPT4ge1xuICBpZiAoaXNTZXJ2ZXJTaWRlKCkpIHJldHVybiBudWxsO1xuICByZXR1cm4gd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7XG59O1xuXG4vKipcbiAqIEdldCBjdXJyZW50IGVudmlyb25tZW50IChkZXZlbG9wbWVudC9wcm9kdWN0aW9uKVxuICogQHJldHVybnMge3N0cmluZ30gQ3VycmVudCBlbnZpcm9ubWVudFxuICovXG5leHBvcnQgY29uc3QgZ2V0RW52aXJvbm1lbnQgPSAoKSA9PiB7XG4gIHJldHVybiBwcm9jZXNzLmVudi5OT0RFX0VOViB8fCAnZGV2ZWxvcG1lbnQnO1xufTtcblxuLyoqXG4gKiBDaGVjayBpZiBpbiBkZXZlbG9wbWVudCBtb2RlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBpbiBkZXZlbG9wbWVudFxuICovXG5leHBvcnQgY29uc3QgaXNEZXZlbG9wbWVudCA9ICgpID0+IGdldEVudmlyb25tZW50KCkgPT09ICdkZXZlbG9wbWVudCc7XG5cbi8qKlxuICogQ2hlY2sgaWYgaW4gcHJvZHVjdGlvbiBtb2RlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBpbiBwcm9kdWN0aW9uXG4gKi9cbmV4cG9ydCBjb25zdCBpc1Byb2R1Y3Rpb24gPSAoKSA9PiBnZXRFbnZpcm9ubWVudCgpID09PSAncHJvZHVjdGlvbic7ICJdLCJuYW1lcyI6WyJpc1NlcnZlclNpZGUiLCJtYWtlU2VydmVyU2FmZSIsImZuIiwiZmFsbGJhY2tWYWx1ZSIsImFyZ3MiLCJnZXRVc2VyQWdlbnQiLCJ3aW5kb3ciLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJnZXRFbnZpcm9ubWVudCIsInByb2Nlc3MiLCJpc0RldmVsb3BtZW50IiwiaXNQcm9kdWN0aW9uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/env-helpers.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/logger.js":
/*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),
/* harmony export */   logger: () => (/* binding */ logger)
/* harmony export */ });
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js");
/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);

const logger = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call logger() from the server but logger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/utils/logger.js",
"logger",
);const createServerLogger = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(
function() { throw new Error("Attempted to call createServerLogger() from the server but createServerLogger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component."); },
"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/utils/logger.js",
"createServerLogger",
);

/***/ }),

/***/ "(rsc)/./src/utils/serverLogger.js":
/*!***********************************!*\
  !*** ./src/utils/serverLogger.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextualServerLogger: () => (/* binding */ createContextualServerLogger),\n/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   info: () => (/* binding */ info),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   serverLogger: () => (/* binding */ serverLogger),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n// Server-side logger implementation\n// This file should be imported in API routes instead of the client-side logger\n/**\n * Server-side logger utility\n * \n * This logger is specifically designed for server components and API routes\n * where the client-side logger with browser-specific APIs can't be used.\n */ /**\n * Format log prefix to include timestamp and context\n */ function formatPrefix(level, context = {}) {\n    const timestamp = new Date().toISOString();\n    const tenantId = context.tenantId || 'no-tenant';\n    return `[${timestamp}] [SERVER:${level}] [${tenantId}]`;\n}\n/**\n * Server logger instance with standard logging methods\n */ const serverLogger = {\n    /**\n   * Log at DEBUG level\n   */ debug: (message, data, context = {})=>{\n        const prefix = formatPrefix('DEBUG', context);\n        if (data !== undefined) {\n            console.debug(`${prefix} ${message}`, data);\n        } else {\n            console.debug(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at INFO level\n   */ info: (message, data, context = {})=>{\n        const prefix = formatPrefix('INFO', context);\n        if (data !== undefined) {\n            console.info(`${prefix} ${message}`, data);\n        } else {\n            console.info(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at WARN level\n   */ warn: (message, data, context = {})=>{\n        const prefix = formatPrefix('WARN', context);\n        if (data !== undefined) {\n            console.warn(`${prefix} ${message}`, data);\n        } else {\n            console.warn(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at ERROR level\n   */ error: (message, data, context = {})=>{\n        const prefix = formatPrefix('ERROR', context);\n        if (data !== undefined) {\n            console.error(`${prefix} ${message}`, data);\n        } else {\n            console.error(`${prefix} ${message}`);\n        }\n    }\n};\n/**\n * Create a contextualized server logger with pre-bound context\n */ function createContextualServerLogger(context = {}) {\n    return {\n        debug: (message, data)=>serverLogger.debug(message, data, context),\n        info: (message, data)=>serverLogger.info(message, data, context),\n        warn: (message, data)=>serverLogger.warn(message, data, context),\n        error: (message, data)=>serverLogger.error(message, data, context)\n    };\n}\n/**\n * Legacy function for backward compatibility with existing imports\n * Creates a logger with a namespace\n */ function createServerLogger(namespace = 'API') {\n    return {\n        debug: (message, ...args)=>serverLogger.debug(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        info: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        warn: (message, ...args)=>serverLogger.warn(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        error: (message, ...args)=>serverLogger.error(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        log: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined)\n    };\n}\n// Create a default server logger instance for compatibility with existing imports\nconst logger = createServerLogger('API');\n// Export individual functions directly from serverLogger for convenience\nconst debug = serverLogger.debug;\nconst info = serverLogger.info;\nconst warn = serverLogger.warn;\nconst error = serverLogger.error;\n// For CommonJS compatibility\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    serverLogger,\n    logger,\n    debug,\n    info,\n    warn,\n    error,\n    createContextualServerLogger,\n    createServerLogger\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/serverLogger.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/tenantUtils.js":
/*!**********************************!*\
  !*** ./src/utils/tenantUtils.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTenantToUrl: () => (/* binding */ addTenantToUrl),\n/* harmony export */   clearTenantStorage: () => (/* binding */ clearTenantStorage),\n/* harmony export */   extractTenantId: () => (/* binding */ extractTenantId),\n/* harmony export */   forceValidateTenantId: () => (/* binding */ forceValidateTenantId),\n/* harmony export */   getSchemaName: () => (/* binding */ getSchemaName),\n/* harmony export */   getTenantFromToken: () => (/* binding */ getTenantFromToken),\n/* harmony export */   getTenantHeaders: () => (/* binding */ getTenantHeaders),\n/* harmony export */   getTenantId: () => (/* binding */ getTenantId),\n/* harmony export */   setTokens: () => (/* binding */ setTokens),\n/* harmony export */   storeTenantId: () => (/* binding */ storeTenantId),\n/* harmony export */   storeTenantInfo: () => (/* binding */ storeTenantInfo),\n/* harmony export */   syncRepairedTenantId: () => (/* binding */ syncRepairedTenantId),\n/* harmony export */   validateTenantIdFormat: () => (/* binding */ validateTenantIdFormat)\n/* harmony export */ });\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(rsc)/../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(rsc)/./src/utils/logger.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jwt-decode */ \"(rsc)/../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js\");\n\n/**\n * Enhanced tenant management utilities\n * Provides secure methods for handling tenant information\n */ \n\n\n// Helper function to detect if code is running in browser\nconst isBrowser = \"undefined\" !== 'undefined';\n// Cookie configuration\nconst COOKIE_CONFIG = {\n    path: '/',\n    secure: \"development\" === 'production',\n    sameSite: 'strict',\n    expires: 30 // 30 days\n};\n// Near the top of the file, add a caching mechanism\n// Cache for tenant ID to avoid excessive cookie reads\nlet cachedTenantId = null;\nlet lastCacheTime = 0;\nconst CACHE_DURATION = 5000; // 5 seconds\n/**\n * Get tenant ID from JWT token\n * @param {string} token - JWT token\n * @returns {string|null} - Tenant ID from token\n */ function getTenantFromToken(token) {\n    try {\n        if (!token) return null;\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_2__.jwtDecode)(token);\n        // Check various possible locations for tenant ID\n        return decoded['custom:tenant_id'] || decoded['custom:tenantId'] || decoded['custom:businessid'] || decoded.tenantId || null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant from token:', error);\n        return null;\n    }\n}\n/**\n * Store tenant ID securely\n * @param {string} tenantId - Tenant ID to store\n */ function storeTenantId(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Set in cookies (both secure and regular for compatibility)\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set('tenantId', tenantId, COOKIE_CONFIG);\n        // Set in sessionStorage (more secure than localStorage)\n        try {\n            sessionStorage.setItem('tenantId', tenantId);\n        } catch (e) {\n            // Ignore sessionStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to sessionStorage:', e);\n        }\n        // Legacy: Set in localStorage with warning (less secure)\n        try {\n            localStorage.setItem('tenantId', tenantId);\n            localStorage.setItem('businessid', tenantId); // For backward compatibility\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Tenant ID stored: ${tenantId}`);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant ID:', error);\n    }\n}\n/**\n * Get tenant ID from all available sources with priority\n * Uses caching to avoid excessive cookie reads and logging\n * @returns {string|null} - Tenant ID from most secure source\n */ function getTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        const now = Date.now();\n        // Return cached value if valid\n        if (cachedTenantId && now - lastCacheTime < CACHE_DURATION) {\n            return cachedTenantId;\n        }\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            // Only log first time or when value changes\n            if (cookieTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from cookie: ${cookieTenantId}`);\n            }\n            // Update cache\n            cachedTenantId = cookieTenantId;\n            lastCacheTime = now;\n            return cookieTenantId;\n        }\n        // Try from sessionStorage next\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            // Only log when value changes\n            if (sessionTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from sessionStorage: ${sessionTenantId}`);\n            }\n            // Sync to cookies\n            storeTenantId(sessionTenantId);\n            // Update cache\n            cachedTenantId = sessionTenantId;\n            lastCacheTime = now;\n            return sessionTenantId;\n        }\n        // Try from localStorage last (least secure)\n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            // Only log when value changes\n            if (localTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from localStorage: ${localTenantId}`);\n            }\n            // Sync to more secure storage\n            storeTenantId(localTenantId);\n            // Update cache\n            cachedTenantId = localTenantId;\n            lastCacheTime = now;\n            return localTenantId;\n        }\n        // Only log no tenant found once\n        if (cachedTenantId !== null) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] No tenant ID found in any storage');\n            cachedTenantId = null;\n        }\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error getting tenant ID:', error);\n        return null;\n    }\n}\n/**\n * Clear all tenant-related storage\n * This removes tenant IDs from cookies and storage\n */ function clearTenantStorage() {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot clear tenant storage on server side');\n        return;\n    }\n    try {\n        // Clear cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('tenantId', {\n            path: '/'\n        });\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('businessid', {\n            path: '/'\n        });\n        // Clear sessionStorage\n        try {\n            sessionStorage.removeItem('tenantId');\n        } catch (e) {\n        // Ignore errors\n        }\n        // Clear localStorage\n        try {\n            localStorage.removeItem('tenantId');\n            localStorage.removeItem('businessid');\n        } catch (e) {\n        // Ignore errors\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant storage cleared successfully');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error clearing tenant storage:', error);\n    }\n}\n/**\n * Add tenant ID to URL or API request\n * @param {string} url - URL to add tenant to\n * @param {string} [tenantIdOverride] - Optional override tenant ID\n * @returns {string} - URL with tenant ID parameter\n */ function addTenantToUrl(url, tenantIdOverride) {\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id || !url) return url;\n        const separator = url.includes('?') ? '&' : '?';\n        return `${url}${separator}tenantId=${id}`;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error adding tenant to URL:', error);\n        return url;\n    }\n}\n/**\n * Generate headers with tenant ID for API requests\n * @param {Object} [existingHeaders={}] - Existing headers\n * @param {string} [tenantIdOverride] - Optional override tenant ID \n * @returns {Object} - Headers with tenant ID\n */ function getTenantHeaders(existingHeaders = {}, tenantIdOverride) {\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id) return existingHeaders;\n        return {\n            ...existingHeaders,\n            'X-Tenant-ID': id\n        };\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error generating tenant headers:', error);\n        return existingHeaders;\n    }\n}\n/**\n * Synchronize a repaired tenant ID by updating cookies and localStorage\n * @param {string} oldTenantId - The old/invalid tenant ID\n * @param {string} newTenantId - The new/valid tenant ID to use\n */ async function syncRepairedTenantId(oldTenantId, newTenantId) {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot sync tenant IDs on server side');\n        return;\n    }\n    try {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Syncing repaired tenant ID', {\n            oldTenantId,\n            newTenantId\n        });\n        // Update localStorage\n        try {\n            localStorage.setItem('tenantId', newTenantId);\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        // Update cookies\n        document.cookie = `tenantId=${newTenantId}; path=/; max-age=${60 * 60 * 24 * 30}; SameSite=Lax`;\n        document.cookie = `businessid=${newTenantId}; path=/; max-age=${60 * 60 * 24 * 30}; SameSite=Lax`;\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant ID sync complete');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error syncing tenant ID:', error);\n    }\n}\n/**\n * Convert tenant ID to schema name format\n */ function getSchemaName(tenantId) {\n    if (!tenantId) return null;\n    try {\n        // Schema name is typically tenant_ followed by tenant ID\n        // Ensure tenant ID is formatted correctly for database schema\n        const sanitizedTenantId = tenantId.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase();\n        return `tenant_${sanitizedTenantId}`;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error formatting schema name', error);\n        return null;\n    }\n}\n/**\n * Store tenant information in localStorage and cookies\n * @param {string} tenantId - The tenant ID to store\n */ function storeTenantInfo(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Store in localStorage\n        localStorage.setItem('tenantId', tenantId);\n        // Store in cookies\n        const expires = new Date();\n        expires.setDate(expires.getDate() + 30); // 30 days expiry\n        document.cookie = `tenantId=${tenantId}; path=/; expires=${expires.toUTCString()}; SameSite=Lax`;\n        document.cookie = `businessid=${tenantId}; path=/; expires=${expires.toUTCString()}; SameSite=Lax`;\n        // Update cache\n        cachedTenantId = tenantId;\n        lastCacheTime = Date.now();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant info stored:', tenantId);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant info:', error);\n    }\n}\n/**\n * Validate tenant ID format (UUID)\n * @param {string} tenantId - The tenant ID to validate\n * @returns {boolean} True if valid\n */ function validateTenantIdFormat(tenantId) {\n    if (!tenantId || typeof tenantId !== 'string') {\n        return false;\n    }\n    // Basic UUID validation regex\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    return uuidRegex.test(tenantId);\n}\n/**\n * Force validation of tenant ID\n * @returns {Promise<string|null>} The validated tenant ID\n */ async function forceValidateTenantId() {\n    try {\n        const tenantId = getTenantId();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Force validating tenant ID:', tenantId);\n        if (!tenantId) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found during force validation');\n            return null;\n        }\n        return tenantId;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error in force validation:', error);\n        return null;\n    }\n}\n/**\n * Set authentication tokens\n * @param {Object} tokens - Object containing accessToken and idToken\n */ function setTokens(tokens = {}) {\n    if (!isBrowser) {\n        return;\n    }\n    try {\n        if (tokens.accessToken || tokens.idToken) {\n            // Store tokens in localStorage\n            const existingTokens = JSON.parse(localStorage.getItem('tokens') || '{}');\n            const updatedTokens = {\n                ...existingTokens,\n                ...tokens.accessToken ? {\n                    accessToken: tokens.accessToken\n                } : {},\n                ...tokens.idToken ? {\n                    idToken: tokens.idToken\n                } : {}\n            };\n            localStorage.setItem('tokens', JSON.stringify(updatedTokens));\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tokens updated');\n        }\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error setting tokens:', error);\n    }\n}\n/**\n * Extract the tenant ID from all available sources for RLS\n * This function is used on the client side to get the tenant ID for API requests\n * @returns {string|null} The tenant ID or null if not found\n */ function extractTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            return cookieTenantId;\n        }\n        // Try from localStorage \n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            return localTenantId;\n        }\n        // Try from sessionStorage\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            return sessionTenantId;\n        }\n        // Final fallback - check URL/search params if available\n        if (false) {}\n        // Log a warning if no tenant ID was found\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found in client storage');\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant ID:', error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/tenantUtils.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/uuid-helpers.js":
/*!***********************************!*\
  !*** ./src/utils/uuid-helpers.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanUuid: () => (/* binding */ cleanUuid),\n/* harmony export */   extractUuid: () => (/* binding */ extractUuid),\n/* harmony export */   isUUID: () => (/* binding */ isUUID),\n/* harmony export */   validateAndRepairUuid: () => (/* binding */ validateAndRepairUuid)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/version.js\");\n/* harmony import */ var _serverLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/**\n * UUID validation and repair utilities\n * Used across all services for consistent UUID handling\n */ \n\n// Create logger for this module\nconst logger = (0,_serverLogger__WEBPACK_IMPORTED_MODULE_0__.createServerLogger)('uuid-helpers');\n/**\n * Check if a string is a valid UUID\n * @param {string} uuid - UUID to validate\n * @param {number} version - UUID version to validate against (defaults to 4)\n * @returns {boolean} Whether the UUID is valid\n */ function isUUID(uuid, version = 4) {\n    if (!uuid) return false;\n    try {\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(uuid) && (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(uuid) === version;\n    } catch (error) {\n        logger.warn(`Failed to validate UUID: ${uuid}`, {\n            error: error.message\n        });\n        return false;\n    }\n}\n/**\n * Validates a UUID and attempts to repair common issues\n * @param {string} uuid - UUID string that might need repair\n * @returns {string} Repaired UUID or original if already valid\n */ function validateAndRepairUuid(uuid) {\n    if (!uuid) return uuid;\n    // If already valid, return as is\n    if (isUUID(uuid)) {\n        return uuid;\n    }\n    let repairedUuid = uuid;\n    try {\n        // Replace underscores with hyphens (common issue)\n        if (uuid.includes('_')) {\n            repairedUuid = uuid.replace(/_/g, '-');\n            logger.info('Repaired UUID:', {\n                original: uuid,\n                repaired: repairedUuid\n            });\n            // Check if repair worked\n            if (isUUID(repairedUuid)) {\n                return repairedUuid;\n            }\n        }\n        // Check for missing hyphens in standard positions\n        if (uuid.length === 32) {\n            repairedUuid = [\n                uuid.slice(0, 8),\n                uuid.slice(8, 12),\n                uuid.slice(12, 16),\n                uuid.slice(16, 20),\n                uuid.slice(20)\n            ].join('-');\n            logger.info('Added hyphens to UUID:', {\n                original: uuid,\n                repaired: repairedUuid\n            });\n            // Check if repair worked\n            if (isUUID(repairedUuid)) {\n                return repairedUuid;\n            }\n        }\n        // If UUID is not valid even after repair attempts, log warning\n        if (!isUUID(repairedUuid)) {\n            logger.warn(`Could not repair invalid UUID: ${uuid}`);\n            // Return original to avoid data corruption\n            return uuid;\n        }\n        return repairedUuid;\n    } catch (error) {\n        logger.error(`Error repairing UUID: ${uuid}`, {\n            error: error.message\n        });\n        // Return original to avoid data corruption\n        return uuid;\n    }\n}\n/**\n * Clean a UUID by enforcing standard format\n * @param {string} uuid - UUID to clean\n * @returns {string} Cleaned UUID\n */ function cleanUuid(uuid) {\n    if (!uuid) return null;\n    try {\n        // Attempt to repair first\n        const repairedUuid = validateAndRepairUuid(uuid);\n        // Convert to lowercase\n        return repairedUuid.toLowerCase();\n    } catch (error) {\n        logger.error(`Error cleaning UUID: ${uuid}`, {\n            error: error.message\n        });\n        // Return null for invalid UUIDs\n        return null;\n    }\n}\n/**\n * Extract a valid UUID from a string that might contain other text\n * @param {string} text - Text that might contain a UUID\n * @returns {string|null} Extracted UUID or null if not found\n */ function extractUuid(text) {\n    if (!text) return null;\n    try {\n        // UUID v4 regex pattern\n        const uuidPattern = /([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})/i;\n        const match = text.match(uuidPattern);\n        if (match && match[1]) {\n            return match[1].toLowerCase();\n        }\n        return null;\n    } catch (error) {\n        logger.error(`Error extracting UUID from text: ${text}`, {\n            error: error.message\n        });\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/uuid-helpers.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true!":

  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/lib/axiosConfig.js */ \"(ssr)/./src/lib/axiosConfig.js\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/utils/logger.js */ \"(ssr)/./src/utils/logger.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMi4yX0BiYWJlbCtjb3JlQDcuMjYuMTBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRmt1b2xkZW5nJTJGcHJvamVjdHglMkZmcm9udGVuZCUyRnB5ZmFjdG9yX25leHQlMkZzcmMlMkZsaWIlMkZheGlvc0NvbmZpZy5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmF4aW9zSW5zdGFuY2UlMjIlMkMlMjJwb3N0JTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGa3VvbGRlbmclMkZwcm9qZWN0eCUyRmZyb250ZW5kJTJGcHlmYWN0b3JfbmV4dCUyRnNyYyUyRnV0aWxzJTJGbG9nZ2VyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyKiUyMiUyQyUyMmxvZ2dlciUyMiUyQyUyMmVycm9yJTIyJTJDJTIyZGVidWclMjIlMkMlMjJ3YXJuJTIyJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSw0SkFBcUo7QUFDcko7QUFDQSxzSkFBd0ciLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcImF4aW9zSW5zdGFuY2VcIixcInBvc3RcIl0gKi8gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvbGliL2F4aW9zQ29uZmlnLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvdXRpbHMvbG9nZ2VyLmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Flib%2FaxiosConfig.js%22%2C%22ids%22%3A%5B%22axiosInstance%22%2C%22post%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Futils%2Flogger.js%22%2C%22ids%22%3A%5B%22*%22%2C%22logger%22%2C%22error%22%2C%22debug%22%2C%22warn%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./src/lib/axiosConfig.js":
/*!********************************!*\
  !*** ./src/lib/axiosConfig.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   axiosInstance: () => (/* binding */ axiosInstance),\n/* harmony export */   backendAxiosInstance: () => (/* binding */ backendAxiosInstance),\n/* harmony export */   enhancedAxiosInstance: () => (/* binding */ enhancedAxiosInstance),\n/* harmony export */   initAxiosDebug: () => (/* binding */ initAxiosDebug),\n/* harmony export */   retryRequest: () => (/* binding */ retryRequest),\n/* harmony export */   serverAxiosInstance: () => (/* binding */ serverAxiosInstance),\n/* harmony export */   testEnhancedTimeout: () => (/* binding */ testEnhancedTimeout),\n/* harmony export */   testRetryMechanism: () => (/* binding */ testRetryMechanism),\n/* harmony export */   testStandardTimeout: () => (/* binding */ testStandardTimeout),\n/* harmony export */   useApi: () => (/* binding */ useApi)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(ssr)/../../node_modules/.pnpm/axios@1.8.4_debug@4.4.0/node_modules/axios/lib/axios.js\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aws-amplify/auth */ \"(ssr)/../../node_modules/.pnpm/@aws-amplify+core@6.11.1/node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs\");\n/* harmony import */ var _utils_tenantUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/utils/tenantUtils */ \"(ssr)/./src/utils/tenantUtils.js\");\n/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/logger */ \"(ssr)/./src/utils/logger.js\");\n/* __next_internal_client_entry_do_not_use__ axiosInstance,serverAxiosInstance,backendAxiosInstance,enhancedAxiosInstance,retryRequest,testStandardTimeout,testEnhancedTimeout,testRetryMechanism,initAxiosDebug,useApi auto */ /**\n * Simple axios configuration file using only named exports\n * - No default exports\n * - No module.exports (CommonJS)\n * - Only ESM exports with simplified initialization\n */ \n\n\n\n// Use the current origin as the base URL unless defined\nconst BASE_URL =  false ? 0 : \"http://localhost:3001\" || 0;\nconst BACKEND_API_URL = process.env.BACKEND_API_URL || 'http://localhost:8000';\n// Create main axios instance for API calls\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: '/api',\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Token refresh function\nconst refreshTokenAndRetry = async (config)=>{\n    try {\n        // Get fresh tokens\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_3__.fetchAuthSession)();\n        if (!session?.tokens?.idToken) {\n            throw new Error('No id token in session');\n        }\n        const token = session.tokens.idToken.toString();\n        // Create new config with fresh token\n        const newConfig = {\n            ...config,\n            headers: {\n                ...config.headers,\n                Authorization: `Bearer ${token}`\n            }\n        };\n        // Add tenant headers if available\n        const tenantId = (0,_utils_tenantUtils__WEBPACK_IMPORTED_MODULE_0__.getTenantId)();\n        if (tenantId) {\n            newConfig.headers = {\n                ...newConfig.headers,\n                'X-Tenant-ID': tenantId\n            };\n        }\n        // Retry the request with new config\n        return (0,axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(newConfig);\n    } catch (error) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Error refreshing token:', error);\n        return Promise.reject(error);\n    }\n};\n// Circuit breaker implementation\nconst circuitBreakers = {};\nclass CircuitBreaker {\n    constructor(name, options = {}){\n        this.name = name;\n        this.failureThreshold = options.failureThreshold || 3;\n        this.resetTimeout = options.resetTimeout || 30000; // 30 seconds\n        this.state = 'CLOSED'; // CLOSED, OPEN, HALF_OPEN\n        this.failureCount = 0;\n        this.lastFailureTime = null;\n        this.pendingRequests = 0;\n        this.maxPendingRequests = options.maxPendingRequests || 5;\n    }\n    canRequest() {\n        const now = Date.now();\n        // Check if too many requests are already pending for this endpoint\n        if (this.pendingRequests >= this.maxPendingRequests) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[CircuitBreaker] Too many pending requests (${this.pendingRequests}) for ${this.name}`);\n            return false;\n        }\n        if (this.state === 'OPEN') {\n            // Check if the circuit has been open long enough to try again\n            if (now - this.lastFailureTime > this.resetTimeout) {\n                this.state = 'HALF_OPEN';\n                _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`[CircuitBreaker] ${this.name} state changed from OPEN to HALF_OPEN`);\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n    recordRequest() {\n        this.pendingRequests++;\n    }\n    recordSuccess() {\n        this.pendingRequests = Math.max(0, this.pendingRequests - 1);\n        if (this.state === 'HALF_OPEN') {\n            this.failureCount = 0;\n            this.state = 'CLOSED';\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(`[CircuitBreaker] ${this.name} state changed from HALF_OPEN to CLOSED`);\n        }\n    }\n    recordFailure() {\n        this.pendingRequests = Math.max(0, this.pendingRequests - 1);\n        this.failureCount++;\n        this.lastFailureTime = Date.now();\n        if (this.state === 'CLOSED' && this.failureCount >= this.failureThreshold) {\n            this.state = 'OPEN';\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[CircuitBreaker] ${this.name} state changed from CLOSED to OPEN after ${this.failureCount} failures`);\n        } else if (this.state === 'HALF_OPEN') {\n            this.state = 'OPEN';\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[CircuitBreaker] ${this.name} state changed from HALF_OPEN to OPEN after test request failed`);\n        }\n    }\n}\n// Get or create a circuit breaker for an endpoint\nconst getCircuitBreaker = (endpoint)=>{\n    const key = endpoint.split('?')[0]; // Ignore query params for circuit breaking\n    if (!circuitBreakers[key]) {\n        circuitBreakers[key] = new CircuitBreaker(key);\n    }\n    return circuitBreakers[key];\n};\n// Add circuit breaker to request interceptor\naxiosInstance.interceptors.request.use(async (config)=>{\n    try {\n        // Add tenant headers for all requests\n        const tenantId = (0,_utils_tenantUtils__WEBPACK_IMPORTED_MODULE_0__.getTenantId)();\n        if (tenantId) {\n            config.headers = {\n                ...config.headers,\n                'X-Tenant-ID': tenantId\n            };\n        }\n        // Add authorization header for authenticated requests\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_3__.fetchAuthSession)();\n        if (session?.tokens?.idToken) {\n            config.headers.Authorization = `Bearer ${session.tokens.idToken.toString()}`;\n        }\n        // Circuit breaker pattern\n        const url = config.url?.split('?')[0] || '';\n        const cb = getCircuitBreaker(url);\n        if (!cb.canRequest()) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[axiosConfig] Circuit breaker open for ${url}, rejecting request`);\n            return Promise.reject(new Error(`Circuit breaker open for ${url}`));\n        }\n        // Track this request\n        cb.recordRequest();\n        config._circuitBreakerHandled = true;\n        return config;\n    } catch (error) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Error in request interceptor:', error);\n        return config;\n    }\n}, (error)=>Promise.reject(error));\n// Add circuit breaker to response interceptor\naxiosInstance.interceptors.response.use((response)=>{\n    try {\n        // Record success in circuit breaker if available\n        const url = response.config.url?.split('?')[0] || '';\n        const cb = getCircuitBreaker(url);\n        if (response.config._circuitBreakerHandled) {\n            cb.recordSuccess();\n        }\n    } catch (e) {\n        // Don't let circuit breaker errors affect response\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Error in circuit breaker success handling:', e);\n    }\n    return response;\n}, async (error)=>{\n    const originalRequest = error.config;\n    try {\n        // Record failure in circuit breaker if available\n        if (originalRequest?._circuitBreakerHandled) {\n            const url = originalRequest.url?.split('?')[0] || '';\n            const cb = getCircuitBreaker(url);\n            cb.recordFailure();\n        }\n    } catch (e) {\n        // Don't let circuit breaker errors affect error response\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Error in circuit breaker failure handling:', e);\n    }\n    // If error is 401 Unauthorized and we haven't retried yet\n    if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n            return await refreshTokenAndRetry(originalRequest);\n        } catch (refreshError) {\n            _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Token refresh failed:', refreshError);\n            // Redirect to login on refresh failure\n            if (false) {}\n            return Promise.reject(refreshError);\n        }\n    }\n    // Handle ECONNABORTED errors (request timeouts and aborts)\n    if (error.code === 'ECONNABORTED' && !originalRequest._abortRetry) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[axiosConfig] Request aborted or timed out, retrying...');\n        // Mark as retry attempt to prevent infinite loops\n        originalRequest._abortRetry = true;\n        // Increase timeout for retry\n        originalRequest.timeout = originalRequest.timeout ? originalRequest.timeout * 1.5 : 45000;\n        // Add a delay before retrying\n        return new Promise((resolve)=>{\n            setTimeout(()=>{\n                resolve(axiosInstance(originalRequest));\n            }, 1000);\n        });\n    }\n    // Handle tenant errors\n    if (error.response?.status === 403 && error.response?.data?.message?.includes('tenant')) {\n        _utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[axiosConfig] Tenant access denied:', error.response.data);\n    // Could redirect to tenant selection page\n    // window.location.href = '/tenant/select';\n    }\n    return Promise.reject(error);\n});\n// Alias for compatibility with code using useApi\nconst useApi = axiosInstance;\n// Create a server-side safe axios instance that doesn't use client-side utilities\nconst serverAxiosInstance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: BASE_URL,\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add simpler interceptors for server-side that don't depend on client-side auth\nserverAxiosInstance.interceptors.response.use((response)=>response, (error)=>{\n    // Handle errors in server components\n    console.error('[Server] API request error:', error.message);\n    return Promise.reject(error);\n});\n// Create a backend axios instance specifically for server-to-server communication\nconst backendAxiosInstance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: BACKEND_API_URL,\n    timeout: 30000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\nconst enhancedAxiosInstance = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: BASE_URL,\n    timeout: 40000,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n// Add the same interceptors to the enhanced instance\nenhancedAxiosInstance.interceptors.request.use(async (config)=>{\n    try {\n        const authSession = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_3__.fetchAuthSession)();\n        if (authSession?.tokens?.idToken) {\n            config.headers['Authorization'] = `Bearer ${authSession.tokens.idToken.toString()}`;\n            config.headers['x-id-token'] = authSession.tokens.idToken.toString();\n            if (false) {}\n        }\n        return config;\n    } catch (error) {\n        console.warn('Failed to get auth session for enhanced API request', error);\n        return config;\n    }\n}, (error)=>Promise.reject(error));\n// Simple retry mechanism\nconst retryRequest = async (requestFn, maxRetries = 3, delay = 1000)=>{\n    let lastError;\n    for(let attempt = 0; attempt <= maxRetries; attempt++){\n        try {\n            return await requestFn();\n        } catch (error) {\n            lastError = error;\n            // Don't retry 4xx client errors except timeout/abort\n            if (error.response && error.response.status >= 400 && error.response.status < 500 && error.code !== 'ECONNABORTED') {\n                throw error;\n            }\n            // If this was the last attempt, throw the error\n            if (attempt === maxRetries) {\n                throw error;\n            }\n            // Wait before trying again with exponential backoff\n            await new Promise((resolve)=>setTimeout(resolve, delay * Math.pow(2, attempt)));\n        }\n    }\n    throw lastError;\n};\n// Test functions\nconst testStandardTimeout = async (url, timeout)=>{\n    return axiosInstance.get(url, {\n        timeout\n    });\n};\nconst testEnhancedTimeout = async (url, timeout)=>{\n    return enhancedAxiosInstance.get(url, {\n        timeout\n    });\n};\nconst testRetryMechanism = async (url, timeout, maxRetries)=>{\n    const config = {\n        url,\n        method: 'get',\n        timeout,\n        maxRetries\n    };\n    return retryRequest(config);\n};\n// Debug function\nconst initAxiosDebug = ()=>{\n    if (false) {}\n};\n// Export all functions and instances\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/axiosConfig.js\n");

/***/ }),

/***/ "(ssr)/./src/utils/logger.js":
/*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var _tenantUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tenantUtils */ \"(ssr)/./src/utils/tenantUtils.js\");\n/* __next_internal_client_entry_do_not_use__ logger,createServerLogger auto */ /**\n * Logger utility for consistent application logging\n * Includes tenant context in logs for easier debugging\n */ \n// Log levels\nconst LOG_LEVELS = {\n    DEBUG: 0,\n    INFO: 1,\n    WARN: 2,\n    ERROR: 3,\n    NONE: 4\n};\n// Current log level - can be overridden with environment variables\nlet currentLogLevel =  false ? 0 : LOG_LEVELS.DEBUG;\n// Allow log level to be set via localStorage for debugging\nif (false) {}\n// Message throttling mechanism to avoid excessive logs\nconst messageCache = new Map();\nconst MESSAGE_THROTTLE_INTERVAL = 5000; // 5 seconds\n// Service Management specific throttling\nconst SERVICE_MANAGEMENT_THROTTLE_INTERVAL = 2000; // 2 seconds\nconst RENDERING_THROTTLE_INTERVAL = 1000; // 1 second for rendering logs\n// Patterns for messages that should be heavily throttled\nconst THROTTLE_PATTERNS = [\n    '[TenantUtils]',\n    '[apiService] Added tenant headers',\n    'Normalized subscription type',\n    '[useSession]',\n    'Session fetched successfully',\n    '[Dashboard]',\n    '[ServiceManagement] Rendering',\n    '[ServiceManagement] Component mounted',\n    '[ApiRequest] GET',\n    'Fetching services',\n    'with schema: tenant_',\n    'with activeTab',\n    'GET /api/'\n];\n/**\n * Should the message be logged based on throttling rules\n * @param {string} message - Message to check\n * @returns {boolean} - Whether to log the message\n */ function shouldLogMessage(message) {\n    // Check if this message matches any throttle pattern\n    let needsThrottling = false;\n    let throttleInterval = MESSAGE_THROTTLE_INTERVAL;\n    for (const pattern of THROTTLE_PATTERNS){\n        if (message.includes(pattern)) {\n            needsThrottling = true;\n            // Apply different throttle intervals based on pattern\n            if (pattern.startsWith('[ServiceManagement] Rendering')) {\n                throttleInterval = RENDERING_THROTTLE_INTERVAL;\n            } else if (pattern.startsWith('[ServiceManagement]')) {\n                throttleInterval = SERVICE_MANAGEMENT_THROTTLE_INTERVAL;\n            } else if (pattern.startsWith('[ApiRequest]')) {\n                throttleInterval = RENDERING_THROTTLE_INTERVAL;\n            }\n            break;\n        }\n    }\n    // If it doesn't need throttling, log it\n    if (!needsThrottling) {\n        return true;\n    }\n    const now = Date.now();\n    const lastLogTime = messageCache.get(message);\n    // If this exact message hasn't been logged recently, allow it\n    if (!lastLogTime || now - lastLogTime > throttleInterval) {\n        messageCache.set(message, now);\n        // Cleanup old messages from cache to prevent memory leaks\n        if (messageCache.size > 100) {\n            const oldMessages = [];\n            messageCache.forEach((time, msg)=>{\n                if (now - time > throttleInterval) {\n                    oldMessages.push(msg);\n                }\n            });\n            oldMessages.forEach((msg)=>messageCache.delete(msg));\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Format log messages with additional context\n */ function formatMessage(message) {\n    try {\n        const timestamp = new Date().toISOString();\n        const tenantId =  false ? 0 : 'server';\n        return `[${timestamp}] [${tenantId || 'no-tenant'}] ${message}`;\n    } catch (error) {\n        return message; // Fallback to original message if formatting fails\n    }\n}\n/**\n * Logger instance with methods for different log levels\n */ const logger = {\n    /**\n   * Set the current log level\n   * @param {string} level - One of DEBUG, INFO, WARN, ERROR, NONE\n   */ setLogLevel: (level)=>{\n        if (LOG_LEVELS[level] !== undefined) {\n            currentLogLevel = LOG_LEVELS[level];\n            if (false) {}\n            console.info(`Log level set to ${level}`);\n        }\n    },\n    /**\n   * Log at DEBUG level\n   */ debug: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.DEBUG) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for debug messages\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.debug(formattedMessage, data);\n                } else {\n                    console.debug(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at INFO level\n   */ info: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.INFO) {\n            const formattedMessage = formatMessage(message);\n            // Apply some throttling for info messages too\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.info(formattedMessage, data);\n                } else {\n                    console.info(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at WARN level\n   */ warn: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.WARN) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for warnings that match patterns\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.warn(formattedMessage, data);\n                } else {\n                    console.warn(formattedMessage);\n                }\n            }\n        }\n    },\n    /**\n   * Log at ERROR level\n   */ error: (message, data)=>{\n        if (currentLogLevel <= LOG_LEVELS.ERROR) {\n            const formattedMessage = formatMessage(message);\n            // Apply throttling for errors that match patterns\n            if (shouldLogMessage(formattedMessage)) {\n                if (data !== undefined) {\n                    console.error(formattedMessage, data);\n                } else {\n                    console.error(formattedMessage);\n                }\n            }\n        }\n    }\n};\n/**\n * Create a server-side logger\n * Used for API routes\n */ function createServerLogger(context = {}) {\n    return {\n        debug: (message, data)=>{\n            console.debug(`[SERVER] [${context.tenantId || 'no-tenant'}] ${message}`, data || '');\n        },\n        info: (message, data)=>{\n            console.info(`[SERVER] [${context.tenantId || 'no-tenant'}] ${message}`, data || '');\n        },\n        warn: (message, data)=>{\n            console.warn(`[SERVER] [${context.tenantId || 'no-tenant'}] ${message}`, data || '');\n        },\n        error: (message, data)=>{\n            console.error(`[SERVER] [${context.tenantId || 'no-tenant'}] ${message}`, data || '');\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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a0RBQWtEO1lBQ2xELElBQUlELGlCQUFpQjhCLG1CQUFtQjtnQkFDdEMsSUFBSUQsU0FBU3RDLFdBQVc7b0JBQ3RCRSxRQUFRRCxLQUFLLENBQUNzQyxrQkFBa0JEO2dCQUNsQyxPQUFPO29CQUNMcEMsUUFBUUQsS0FBSyxDQUFDc0M7Z0JBQ2hCO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YsRUFBRTtBQUVGOzs7Q0FHQyxHQUNNLFNBQVNFLG1CQUFtQkMsVUFBVSxDQUFDLENBQUM7SUFDN0MsT0FBTztRQUNMTCxPQUFPLENBQUMzQixTQUFTNEI7WUFDZnBDLFFBQVFtQyxLQUFLLENBQUMsQ0FBQyxVQUFVLEVBQUVLLFFBQVFYLFFBQVEsSUFBSSxZQUFZLEVBQUUsRUFBRXJCLFNBQVMsRUFBRTRCLFFBQVE7UUFDcEY7UUFDQUYsTUFBTSxDQUFDMUIsU0FBUzRCO1lBQ2RwQyxRQUFRa0MsSUFBSSxDQUFDLENBQUMsVUFBVSxFQUFFTSxRQUFRWCxRQUFRLElBQUksWUFBWSxFQUFFLEVBQUVyQixTQUFTLEVBQUU0QixRQUFRO1FBQ25GO1FBQ0FFLE1BQU0sQ0FBQzlCLFNBQVM0QjtZQUNkcEMsUUFBUXNDLElBQUksQ0FBQyxDQUFDLFVBQVUsRUFBRUUsUUFBUVgsUUFBUSxJQUFJLFlBQVksRUFBRSxFQUFFckIsU0FBUyxFQUFFNEIsUUFBUTtRQUNuRjtRQUNBckMsT0FBTyxDQUFDUyxTQUFTNEI7WUFDZnBDLFFBQVFELEtBQUssQ0FBQyxDQUFDLFVBQVUsRUFBRXlDLFFBQVFYLFFBQVEsSUFBSSxZQUFZLEVBQUUsRUFBRXJCLFNBQVMsRUFBRTRCLFFBQVE7UUFDcEY7SUFDRjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvdXRpbHMvbG9nZ2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuLyoqXG4gKiBMb2dnZXIgdXRpbGl0eSBmb3IgY29uc2lzdGVudCBhcHBsaWNhdGlvbiBsb2dnaW5nXG4gKiBJbmNsdWRlcyB0ZW5hbnQgY29udGV4dCBpbiBsb2dzIGZvciBlYXNpZXIgZGVidWdnaW5nXG4gKi9cblxuaW1wb3J0IHsgZ2V0VGVuYW50SWQgfSBmcm9tICcuL3RlbmFudFV0aWxzJztcblxuLy8gTG9nIGxldmVsc1xuY29uc3QgTE9HX0xFVkVMUyA9IHtcbiAgREVCVUc6IDAsXG4gIElORk86IDEsXG4gIFdBUk46IDIsXG4gIEVSUk9SOiAzLFxuICBOT05FOiA0XG59O1xuXG4vLyBDdXJyZW50IGxvZyBsZXZlbCAtIGNhbiBiZSBvdmVycmlkZGVuIHdpdGggZW52aXJvbm1lbnQgdmFyaWFibGVzXG5sZXQgY3VycmVudExvZ0xldmVsID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyBcbiAgPyBMT0dfTEVWRUxTLklORk8gXG4gIDogTE9HX0xFVkVMUy5ERUJVRztcblxuLy8gQWxsb3cgbG9nIGxldmVsIHRvIGJlIHNldCB2aWEgbG9jYWxTdG9yYWdlIGZvciBkZWJ1Z2dpbmdcbmlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICB0cnkge1xuICAgIGNvbnN0IHN0b3JlZExvZ0xldmVsID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xvZ0xldmVsJyk7XG4gICAgaWYgKHN0b3JlZExvZ0xldmVsICYmIExPR19MRVZFTFNbc3RvcmVkTG9nTGV2ZWxdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGN1cnJlbnRMb2dMZXZlbCA9IExPR19MRVZFTFNbc3RvcmVkTG9nTGV2ZWxdO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciByZWFkaW5nIGxvZyBsZXZlbCBmcm9tIGxvY2FsU3RvcmFnZScsIGVycm9yKTtcbiAgfVxufVxuXG4vLyBNZXNzYWdlIHRocm90dGxpbmcgbWVjaGFuaXNtIHRvIGF2b2lkIGV4Y2Vzc2l2ZSBsb2dzXG5jb25zdCBtZXNzYWdlQ2FjaGUgPSBuZXcgTWFwKCk7XG5jb25zdCBNRVNTQUdFX1RIUk9UVExFX0lOVEVSVkFMID0gNTAwMDsgLy8gNSBzZWNvbmRzXG5cbi8vIFNlcnZpY2UgTWFuYWdlbWVudCBzcGVjaWZpYyB0aHJvdHRsaW5nXG5jb25zdCBTRVJWSUNFX01BTkFHRU1FTlRfVEhST1RUTEVfSU5URVJWQUwgPSAyMDAwOyAvLyAyIHNlY29uZHNcbmNvbnN0IFJFTkRFUklOR19USFJPVFRMRV9JTlRFUlZBTCA9IDEwMDA7IC8vIDEgc2Vjb25kIGZvciByZW5kZXJpbmcgbG9nc1xuXG4vLyBQYXR0ZXJucyBmb3IgbWVzc2FnZXMgdGhhdCBzaG91bGQgYmUgaGVhdmlseSB0aHJvdHRsZWRcbmNvbnN0IFRIUk9UVExFX1BBVFRFUk5TID0gW1xuICAnW1RlbmFudFV0aWxzXScsXG4gICdbYXBpU2VydmljZV0gQWRkZWQgdGVuYW50IGhlYWRlcnMnLFxuICAnTm9ybWFsaXplZCBzdWJzY3JpcHRpb24gdHlwZScsXG4gICdbdXNlU2Vzc2lvbl0nLFxuICAnU2Vzc2lvbiBmZXRjaGVkIHN1Y2Nlc3NmdWxseScsXG4gICdbRGFzaGJvYXJkXScsXG4gICdbU2VydmljZU1hbmFnZW1lbnRdIFJlbmRlcmluZycsXG4gICdbU2VydmljZU1hbmFnZW1lbnRdIENvbXBvbmVudCBtb3VudGVkJyxcbiAgJ1tBcGlSZXF1ZXN0XSBHRVQnLFxuICAnRmV0Y2hpbmcgc2VydmljZXMnLFxuICAnd2l0aCBzY2hlbWE6IHRlbmFudF8nLFxuICAnd2l0aCBhY3RpdmVUYWInLFxuICAnR0VUIC9hcGkvJ1xuXTtcblxuLyoqXG4gKiBTaG91bGQgdGhlIG1lc3NhZ2UgYmUgbG9nZ2VkIGJhc2VkIG9uIHRocm90dGxpbmcgcnVsZXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0gTWVzc2FnZSB0byBjaGVja1xuICogQHJldHVybnMge2Jvb2xlYW59IC0gV2hldGhlciB0byBsb2cgdGhlIG1lc3NhZ2VcbiAqL1xuZnVuY3Rpb24gc2hvdWxkTG9nTWVzc2FnZShtZXNzYWdlKSB7XG4gIC8vIENoZWNrIGlmIHRoaXMgbWVzc2FnZSBtYXRjaGVzIGFueSB0aHJvdHRsZSBwYXR0ZXJuXG4gIGxldCBuZWVkc1Rocm90dGxpbmcgPSBmYWxzZTtcbiAgbGV0IHRocm90dGxlSW50ZXJ2YWwgPSBNRVNTQUdFX1RIUk9UVExFX0lOVEVSVkFMO1xuICBcbiAgZm9yIChjb25zdCBwYXR0ZXJuIG9mIFRIUk9UVExFX1BBVFRFUk5TKSB7XG4gICAgaWYgKG1lc3NhZ2UuaW5jbHVkZXMocGF0dGVybikpIHtcbiAgICAgIG5lZWRzVGhyb3R0bGluZyA9IHRydWU7XG4gICAgICBcbiAgICAgIC8vIEFwcGx5IGRpZmZlcmVudCB0aHJvdHRsZSBpbnRlcnZhbHMgYmFzZWQgb24gcGF0dGVyblxuICAgICAgaWYgKHBhdHRlcm4uc3RhcnRzV2l0aCgnW1NlcnZpY2VNYW5hZ2VtZW50XSBSZW5kZXJpbmcnKSkge1xuICAgICAgICB0aHJvdHRsZUludGVydmFsID0gUkVOREVSSU5HX1RIUk9UVExFX0lOVEVSVkFMO1xuICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLnN0YXJ0c1dpdGgoJ1tTZXJ2aWNlTWFuYWdlbWVudF0nKSkge1xuICAgICAgICB0aHJvdHRsZUludGVydmFsID0gU0VSVklDRV9NQU5BR0VNRU5UX1RIUk9UVExFX0lOVEVSVkFMO1xuICAgICAgfSBlbHNlIGlmIChwYXR0ZXJuLnN0YXJ0c1dpdGgoJ1tBcGlSZXF1ZXN0XScpKSB7XG4gICAgICAgIHRocm90dGxlSW50ZXJ2YWwgPSBSRU5ERVJJTkdfVEhST1RUTEVfSU5URVJWQUw7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICBcbiAgLy8gSWYgaXQgZG9lc24ndCBuZWVkIHRocm90dGxpbmcsIGxvZyBpdFxuICBpZiAoIW5lZWRzVGhyb3R0bGluZykge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIFxuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBjb25zdCBsYXN0TG9nVGltZSA9IG1lc3NhZ2VDYWNoZS5nZXQobWVzc2FnZSk7XG4gIFxuICAvLyBJZiB0aGlzIGV4YWN0IG1lc3NhZ2UgaGFzbid0IGJlZW4gbG9nZ2VkIHJlY2VudGx5LCBhbGxvdyBpdFxuICBpZiAoIWxhc3RMb2dUaW1lIHx8IChub3cgLSBsYXN0TG9nVGltZSkgPiB0aHJvdHRsZUludGVydmFsKSB7XG4gICAgbWVzc2FnZUNhY2hlLnNldChtZXNzYWdlLCBub3cpO1xuICAgIFxuICAgIC8vIENsZWFudXAgb2xkIG1lc3NhZ2VzIGZyb20gY2FjaGUgdG8gcHJldmVudCBtZW1vcnkgbGVha3NcbiAgICBpZiAobWVzc2FnZUNhY2hlLnNpemUgPiAxMDApIHtcbiAgICAgIGNvbnN0IG9sZE1lc3NhZ2VzID0gW107XG4gICAgICBtZXNzYWdlQ2FjaGUuZm9yRWFjaCgodGltZSwgbXNnKSA9PiB7XG4gICAgICAgIGlmICgobm93IC0gdGltZSkgPiB0aHJvdHRsZUludGVydmFsKSB7XG4gICAgICAgICAgb2xkTWVzc2FnZXMucHVzaChtc2cpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIG9sZE1lc3NhZ2VzLmZvckVhY2gobXNnID0+IG1lc3NhZ2VDYWNoZS5kZWxldGUobXNnKSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIFxuICByZXR1cm4gZmFsc2U7XG59XG5cbi8qKlxuICogRm9ybWF0IGxvZyBtZXNzYWdlcyB3aXRoIGFkZGl0aW9uYWwgY29udGV4dFxuICovXG5mdW5jdGlvbiBmb3JtYXRNZXNzYWdlKG1lc3NhZ2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCB0aW1lc3RhbXAgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG4gICAgY29uc3QgdGVuYW50SWQgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IGdldFRlbmFudElkKCkgOiAnc2VydmVyJztcbiAgICByZXR1cm4gYFske3RpbWVzdGFtcH1dIFske3RlbmFudElkIHx8ICduby10ZW5hbnQnfV0gJHttZXNzYWdlfWA7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2U7IC8vIEZhbGxiYWNrIHRvIG9yaWdpbmFsIG1lc3NhZ2UgaWYgZm9ybWF0dGluZyBmYWlsc1xuICB9XG59XG5cbi8qKlxuICogTG9nZ2VyIGluc3RhbmNlIHdpdGggbWV0aG9kcyBmb3IgZGlmZmVyZW50IGxvZyBsZXZlbHNcbiAqL1xuZXhwb3J0IGNvbnN0IGxvZ2dlciA9IHtcbiAgLyoqXG4gICAqIFNldCB0aGUgY3VycmVudCBsb2cgbGV2ZWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxldmVsIC0gT25lIG9mIERFQlVHLCBJTkZPLCBXQVJOLCBFUlJPUiwgTk9ORVxuICAgKi9cbiAgc2V0TG9nTGV2ZWw6IChsZXZlbCkgPT4ge1xuICAgIGlmIChMT0dfTEVWRUxTW2xldmVsXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBjdXJyZW50TG9nTGV2ZWwgPSBMT0dfTEVWRUxTW2xldmVsXTtcbiAgICAgIFxuICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2xvZ0xldmVsJywgbGV2ZWwpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHNhdmluZyBsb2cgbGV2ZWwgdG8gbG9jYWxTdG9yYWdlJywgZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnNvbGUuaW5mbyhgTG9nIGxldmVsIHNldCB0byAke2xldmVsfWApO1xuICAgIH1cbiAgfSxcbiAgXG4gIC8qKlxuICAgKiBMb2cgYXQgREVCVUcgbGV2ZWxcbiAgICovXG4gIGRlYnVnOiAobWVzc2FnZSwgZGF0YSkgPT4ge1xuICAgIGlmIChjdXJyZW50TG9nTGV2ZWwgPD0gTE9HX0xFVkVMUy5ERUJVRykge1xuICAgICAgY29uc3QgZm9ybWF0dGVkTWVzc2FnZSA9IGZvcm1hdE1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICBcbiAgICAgIC8vIEFwcGx5IHRocm90dGxpbmcgZm9yIGRlYnVnIG1lc3NhZ2VzXG4gICAgICBpZiAoc2hvdWxkTG9nTWVzc2FnZShmb3JtYXR0ZWRNZXNzYWdlKSkge1xuICAgICAgICBpZiAoZGF0YSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgY29uc29sZS5kZWJ1Zyhmb3JtYXR0ZWRNZXNzYWdlLCBkYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmRlYnVnKGZvcm1hdHRlZE1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBcbiAgLyoqXG4gICAqIExvZyBhdCBJTkZPIGxldmVsXG4gICAqL1xuICBpbmZvOiAobWVzc2FnZSwgZGF0YSkgPT4ge1xuICAgIGlmIChjdXJyZW50TG9nTGV2ZWwgPD0gTE9HX0xFVkVMUy5JTkZPKSB7XG4gICAgICBjb25zdCBmb3JtYXR0ZWRNZXNzYWdlID0gZm9ybWF0TWVzc2FnZShtZXNzYWdlKTtcbiAgICAgIFxuICAgICAgLy8gQXBwbHkgc29tZSB0aHJvdHRsaW5nIGZvciBpbmZvIG1lc3NhZ2VzIHRvb1xuICAgICAgaWYgKHNob3VsZExvZ01lc3NhZ2UoZm9ybWF0dGVkTWVzc2FnZSkpIHtcbiAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnNvbGUuaW5mbyhmb3JtYXR0ZWRNZXNzYWdlLCBkYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLmluZm8oZm9ybWF0dGVkTWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIFxuICAvKipcbiAgICogTG9nIGF0IFdBUk4gbGV2ZWxcbiAgICovXG4gIHdhcm46IChtZXNzYWdlLCBkYXRhKSA9PiB7XG4gICAgaWYgKGN1cnJlbnRMb2dMZXZlbCA8PSBMT0dfTEVWRUxTLldBUk4pIHtcbiAgICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2UgPSBmb3JtYXRNZXNzYWdlKG1lc3NhZ2UpO1xuICAgICAgLy8gQXBwbHkgdGhyb3R0bGluZyBmb3Igd2FybmluZ3MgdGhhdCBtYXRjaCBwYXR0ZXJuc1xuICAgICAgaWYgKHNob3VsZExvZ01lc3NhZ2UoZm9ybWF0dGVkTWVzc2FnZSkpIHtcbiAgICAgICAgaWYgKGRhdGEgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIGNvbnNvbGUud2Fybihmb3JtYXR0ZWRNZXNzYWdlLCBkYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oZm9ybWF0dGVkTWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIFxuICAvKipcbiAgICogTG9nIGF0IEVSUk9SIGxldmVsXG4gICAqL1xuICBlcnJvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHtcbiAgICBpZiAoY3VycmVudExvZ0xldmVsIDw9IExPR19MRVZFTFMuRVJST1IpIHtcbiAgICAgIGNvbnN0IGZvcm1hdHRlZE1lc3NhZ2UgPSBmb3JtYXRNZXNzYWdlKG1lc3NhZ2UpO1xuICAgICAgLy8gQXBwbHkgdGhyb3R0bGluZyBmb3IgZXJyb3JzIHRoYXQgbWF0Y2ggcGF0dGVybnNcbiAgICAgIGlmIChzaG91bGRMb2dNZXNzYWdlKGZvcm1hdHRlZE1lc3NhZ2UpKSB7XG4gICAgICAgIGlmIChkYXRhICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGZvcm1hdHRlZE1lc3NhZ2UsIGRhdGEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZm9ybWF0dGVkTWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbi8qKlxuICogQ3JlYXRlIGEgc2VydmVyLXNpZGUgbG9nZ2VyXG4gKiBVc2VkIGZvciBBUEkgcm91dGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXJ2ZXJMb2dnZXIoY29udGV4dCA9IHt9KSB7XG4gIHJldHVybiB7XG4gICAgZGVidWc6IChtZXNzYWdlLCBkYXRhKSA9PiB7XG4gICAgICBjb25zb2xlLmRlYnVnKGBbU0VSVkVSXSBbJHtjb250ZXh0LnRlbmFudElkIHx8ICduby10ZW5hbnQnfV0gJHttZXNzYWdlfWAsIGRhdGEgfHwgJycpO1xuICAgIH0sXG4gICAgaW5mbzogKG1lc3NhZ2UsIGRhdGEpID0+IHtcbiAgICAgIGNvbnNvbGUuaW5mbyhgW1NFUlZFUl0gWyR7Y29udGV4dC50ZW5hbnRJZCB8fCAnbm8tdGVuYW50J31dICR7bWVzc2FnZX1gLCBkYXRhIHx8ICcnKTtcbiAgICB9LFxuICAgIHdhcm46IChtZXNzYWdlLCBkYXRhKSA9PiB7XG4gICAgICBjb25zb2xlLndhcm4oYFtTRVJWRVJdIFske2NvbnRleHQudGVuYW50SWQgfHwgJ25vLXRlbmFudCd9XSAke21lc3NhZ2V9YCwgZGF0YSB8fCAnJyk7XG4gICAgfSxcbiAgICBlcnJvcjogKG1lc3NhZ2UsIGRhdGEpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYFtTRVJWRVJdIFske2NvbnRleHQudGVuYW50SWQgfHwgJ25vLXRlbmFudCd9XSAke21lc3NhZ2V9YCwgZGF0YSB8fCAnJyk7XG4gICAgfVxuICB9O1xufVxuIl0sIm5hbWVzIjpbImdldFRlbmFudElkIiwiTE9HX0xFVkVMUyIsIkRFQlVHIiwiSU5GTyIsIldBUk4iLCJFUlJPUiIsIk5PTkUiLCJjdXJyZW50TG9nTGV2ZWwiLCJwcm9jZXNzIiwic3RvcmVkTG9nTGV2ZWwiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwidW5kZWZpbmVkIiwiZXJyb3IiLCJjb25zb2xlIiwibWVzc2FnZUNhY2hlIiwiTWFwIiwiTUVTU0FHRV9USFJPVFRMRV9JTlRFUlZBTCIsIlNFUlZJQ0VfTUFOQUdFTUVOVF9USFJPVFRMRV9JTlRFUlZBTCIsIlJFTkRFUklOR19USFJPVFRMRV9JTlRFUlZBTCIsIlRIUk9UVExFX1BBVFRFUk5TIiwic2hvdWxkTG9nTWVzc2FnZSIsIm1lc3NhZ2UiLCJuZWVkc1Rocm90dGxpbmciLCJ0aHJvdHRsZUludGVydmFsIiwicGF0dGVybiIsImluY2x1ZGVzIiwic3RhcnRzV2l0aCIsIm5vdyIsIkRhdGUiLCJsYXN0TG9nVGltZSIsImdldCIsInNldCIsInNpemUiLCJvbGRNZXNzYWdlcyIsImZvckVhY2giLCJ0aW1lIiwibXNnIiwicHVzaCIsImRlbGV0ZSIsImZvcm1hdE1lc3NhZ2UiLCJ0aW1lc3RhbXAiLCJ0b0lTT1N0cmluZyIsInRlbmFudElkIiwibG9nZ2VyIiwic2V0TG9nTGV2ZWwiLCJsZXZlbCIsInNldEl0ZW0iLCJpbmZvIiwiZGVidWciLCJkYXRhIiwiZm9ybWF0dGVkTWVzc2FnZSIsIndhcm4iLCJjcmVhdGVTZXJ2ZXJMb2dnZXIiLCJjb250ZXh0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/logger.js\n");

/***/ }),

/***/ "(ssr)/./src/utils/tenantUtils.js":
/*!**********************************!*\
  !*** ./src/utils/tenantUtils.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTenantToUrl: () => (/* binding */ addTenantToUrl),\n/* harmony export */   clearTenantStorage: () => (/* binding */ clearTenantStorage),\n/* harmony export */   extractTenantId: () => (/* binding */ extractTenantId),\n/* harmony export */   forceValidateTenantId: () => (/* binding */ forceValidateTenantId),\n/* harmony export */   getSchemaName: () => (/* binding */ getSchemaName),\n/* harmony export */   getTenantFromToken: () => (/* binding */ getTenantFromToken),\n/* harmony export */   getTenantHeaders: () => (/* binding */ getTenantHeaders),\n/* harmony export */   getTenantId: () => (/* binding */ getTenantId),\n/* harmony export */   setTokens: () => (/* binding */ setTokens),\n/* harmony export */   storeTenantId: () => (/* binding */ storeTenantId),\n/* harmony export */   storeTenantInfo: () => (/* binding */ storeTenantInfo),\n/* harmony export */   syncRepairedTenantId: () => (/* binding */ syncRepairedTenantId),\n/* harmony export */   validateTenantIdFormat: () => (/* binding */ validateTenantIdFormat)\n/* harmony export */ });\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(ssr)/../../node_modules/.pnpm/js-cookie@3.0.5/node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"(ssr)/./src/utils/logger.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jwt-decode */ \"(ssr)/../../node_modules/.pnpm/jwt-decode@4.0.0/node_modules/jwt-decode/build/esm/index.js\");\n\n/**\n * Enhanced tenant management utilities\n * Provides secure methods for handling tenant information\n */ \n\n\n// Helper function to detect if code is running in browser\nconst isBrowser = \"undefined\" !== 'undefined';\n// Cookie configuration\nconst COOKIE_CONFIG = {\n    path: '/',\n    secure: \"development\" === 'production',\n    sameSite: 'strict',\n    expires: 30 // 30 days\n};\n// Near the top of the file, add a caching mechanism\n// Cache for tenant ID to avoid excessive cookie reads\nlet cachedTenantId = null;\nlet lastCacheTime = 0;\nconst CACHE_DURATION = 5000; // 5 seconds\n/**\n * Get tenant ID from JWT token\n * @param {string} token - JWT token\n * @returns {string|null} - Tenant ID from token\n */ function getTenantFromToken(token) {\n    try {\n        if (!token) return null;\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_2__.jwtDecode)(token);\n        // Check various possible locations for tenant ID\n        return decoded['custom:tenant_id'] || decoded['custom:tenantId'] || decoded['custom:businessid'] || decoded.tenantId || null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant from token:', error);\n        return null;\n    }\n}\n/**\n * Store tenant ID securely\n * @param {string} tenantId - Tenant ID to store\n */ function storeTenantId(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Set in cookies (both secure and regular for compatibility)\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set('tenantId', tenantId, COOKIE_CONFIG);\n        // Set in sessionStorage (more secure than localStorage)\n        try {\n            sessionStorage.setItem('tenantId', tenantId);\n        } catch (e) {\n            // Ignore sessionStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to sessionStorage:', e);\n        }\n        // Legacy: Set in localStorage with warning (less secure)\n        try {\n            localStorage.setItem('tenantId', tenantId);\n            localStorage.setItem('businessid', tenantId); // For backward compatibility\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Tenant ID stored: ${tenantId}`);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant ID:', error);\n    }\n}\n/**\n * Get tenant ID from all available sources with priority\n * Uses caching to avoid excessive cookie reads and logging\n * @returns {string|null} - Tenant ID from most secure source\n */ function getTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        const now = Date.now();\n        // Return cached value if valid\n        if (cachedTenantId && now - lastCacheTime < CACHE_DURATION) {\n            return cachedTenantId;\n        }\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            // Only log first time or when value changes\n            if (cookieTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from cookie: ${cookieTenantId}`);\n            }\n            // Update cache\n            cachedTenantId = cookieTenantId;\n            lastCacheTime = now;\n            return cookieTenantId;\n        }\n        // Try from sessionStorage next\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            // Only log when value changes\n            if (sessionTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from sessionStorage: ${sessionTenantId}`);\n            }\n            // Sync to cookies\n            storeTenantId(sessionTenantId);\n            // Update cache\n            cachedTenantId = sessionTenantId;\n            lastCacheTime = now;\n            return sessionTenantId;\n        }\n        // Try from localStorage last (least secure)\n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            // Only log when value changes\n            if (localTenantId !== cachedTenantId) {\n                _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug(`[TenantUtils] Got tenant ID from localStorage: ${localTenantId}`);\n            }\n            // Sync to more secure storage\n            storeTenantId(localTenantId);\n            // Update cache\n            cachedTenantId = localTenantId;\n            lastCacheTime = now;\n            return localTenantId;\n        }\n        // Only log no tenant found once\n        if (cachedTenantId !== null) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] No tenant ID found in any storage');\n            cachedTenantId = null;\n        }\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error getting tenant ID:', error);\n        return null;\n    }\n}\n/**\n * Clear all tenant-related storage\n * This removes tenant IDs from cookies and storage\n */ function clearTenantStorage() {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot clear tenant storage on server side');\n        return;\n    }\n    try {\n        // Clear cookies\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('tenantId', {\n            path: '/'\n        });\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove('businessid', {\n            path: '/'\n        });\n        // Clear sessionStorage\n        try {\n            sessionStorage.removeItem('tenantId');\n        } catch (e) {\n        // Ignore errors\n        }\n        // Clear localStorage\n        try {\n            localStorage.removeItem('tenantId');\n            localStorage.removeItem('businessid');\n        } catch (e) {\n        // Ignore errors\n        }\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant storage cleared successfully');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error clearing tenant storage:', error);\n    }\n}\n/**\n * Add tenant ID to URL or API request\n * @param {string} url - URL to add tenant to\n * @param {string} [tenantIdOverride] - Optional override tenant ID\n * @returns {string} - URL with tenant ID parameter\n */ function addTenantToUrl(url, tenantIdOverride) {\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id || !url) return url;\n        const separator = url.includes('?') ? '&' : '?';\n        return `${url}${separator}tenantId=${id}`;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error adding tenant to URL:', error);\n        return url;\n    }\n}\n/**\n * Generate headers with tenant ID for API requests\n * @param {Object} [existingHeaders={}] - Existing headers\n * @param {string} [tenantIdOverride] - Optional override tenant ID \n * @returns {Object} - Headers with tenant ID\n */ function getTenantHeaders(existingHeaders = {}, tenantIdOverride) {\n    try {\n        const id = tenantIdOverride || getTenantId();\n        if (!id) return existingHeaders;\n        return {\n            ...existingHeaders,\n            'X-Tenant-ID': id\n        };\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error generating tenant headers:', error);\n        return existingHeaders;\n    }\n}\n/**\n * Synchronize a repaired tenant ID by updating cookies and localStorage\n * @param {string} oldTenantId - The old/invalid tenant ID\n * @param {string} newTenantId - The new/valid tenant ID to use\n */ async function syncRepairedTenantId(oldTenantId, newTenantId) {\n    if (!isBrowser) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Cannot sync tenant IDs on server side');\n        return;\n    }\n    try {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Syncing repaired tenant ID', {\n            oldTenantId,\n            newTenantId\n        });\n        // Update localStorage\n        try {\n            localStorage.setItem('tenantId', newTenantId);\n        } catch (e) {\n            // Ignore localStorage errors\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error saving to localStorage:', e);\n        }\n        // Update cookies\n        document.cookie = `tenantId=${newTenantId}; path=/; max-age=${60 * 60 * 24 * 30}; SameSite=Lax`;\n        document.cookie = `businessid=${newTenantId}; path=/; max-age=${60 * 60 * 24 * 30}; SameSite=Lax`;\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant ID sync complete');\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error syncing tenant ID:', error);\n    }\n}\n/**\n * Convert tenant ID to schema name format\n */ function getSchemaName(tenantId) {\n    if (!tenantId) return null;\n    try {\n        // Schema name is typically tenant_ followed by tenant ID\n        // Ensure tenant ID is formatted correctly for database schema\n        const sanitizedTenantId = tenantId.replace(/[^a-zA-Z0-9]/g, '_').toLowerCase();\n        return `tenant_${sanitizedTenantId}`;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('Error formatting schema name', error);\n        return null;\n    }\n}\n/**\n * Store tenant information in localStorage and cookies\n * @param {string} tenantId - The tenant ID to store\n */ function storeTenantInfo(tenantId) {\n    if (!isBrowser || !tenantId) {\n        return;\n    }\n    try {\n        // Store in localStorage\n        localStorage.setItem('tenantId', tenantId);\n        // Store in cookies\n        const expires = new Date();\n        expires.setDate(expires.getDate() + 30); // 30 days expiry\n        document.cookie = `tenantId=${tenantId}; path=/; expires=${expires.toUTCString()}; SameSite=Lax`;\n        document.cookie = `businessid=${tenantId}; path=/; expires=${expires.toUTCString()}; SameSite=Lax`;\n        // Update cache\n        cachedTenantId = tenantId;\n        lastCacheTime = Date.now();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tenant info stored:', tenantId);\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error storing tenant info:', error);\n    }\n}\n/**\n * Validate tenant ID format (UUID)\n * @param {string} tenantId - The tenant ID to validate\n * @returns {boolean} True if valid\n */ function validateTenantIdFormat(tenantId) {\n    if (!tenantId || typeof tenantId !== 'string') {\n        return false;\n    }\n    // Basic UUID validation regex\n    const uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    return uuidRegex.test(tenantId);\n}\n/**\n * Force validation of tenant ID\n * @returns {Promise<string|null>} The validated tenant ID\n */ async function forceValidateTenantId() {\n    try {\n        const tenantId = getTenantId();\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Force validating tenant ID:', tenantId);\n        if (!tenantId) {\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found during force validation');\n            return null;\n        }\n        return tenantId;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error in force validation:', error);\n        return null;\n    }\n}\n/**\n * Set authentication tokens\n * @param {Object} tokens - Object containing accessToken and idToken\n */ function setTokens(tokens = {}) {\n    if (!isBrowser) {\n        return;\n    }\n    try {\n        if (tokens.accessToken || tokens.idToken) {\n            // Store tokens in localStorage\n            const existingTokens = JSON.parse(localStorage.getItem('tokens') || '{}');\n            const updatedTokens = {\n                ...existingTokens,\n                ...tokens.accessToken ? {\n                    accessToken: tokens.accessToken\n                } : {},\n                ...tokens.idToken ? {\n                    idToken: tokens.idToken\n                } : {}\n            };\n            localStorage.setItem('tokens', JSON.stringify(updatedTokens));\n            _logger__WEBPACK_IMPORTED_MODULE_1__.logger.debug('[TenantUtils] Tokens updated');\n        }\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error setting tokens:', error);\n    }\n}\n/**\n * Extract the tenant ID from all available sources for RLS\n * This function is used on the client side to get the tenant ID for API requests\n * @returns {string|null} The tenant ID or null if not found\n */ function extractTenantId() {\n    if (!isBrowser) {\n        return null;\n    }\n    try {\n        // Try from cookies first (most secure)\n        const cookieTenantId = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get('tenantId');\n        if (cookieTenantId) {\n            return cookieTenantId;\n        }\n        // Try from localStorage \n        const localTenantId = localStorage.getItem('tenantId') || localStorage.getItem('businessid');\n        if (localTenantId) {\n            return localTenantId;\n        }\n        // Try from sessionStorage\n        const sessionTenantId = sessionStorage.getItem('tenantId');\n        if (sessionTenantId) {\n            return sessionTenantId;\n        }\n        // Final fallback - check URL/search params if available\n        if (false) {}\n        // Log a warning if no tenant ID was found\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[TenantUtils] No tenant ID found in client storage');\n        return null;\n    } catch (error) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[TenantUtils] Error extracting tenant ID:', error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/utils/tenantUtils.js\n");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("pg");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1","vendor-chunks/@aws-amplify+auth@6.12.1_@aws-amplify+core@6.11.1","vendor-chunks/@aws-amplify+core@6.11.1","vendor-chunks/@babel+runtime@7.27.0","vendor-chunks/tslib@2.8.1","vendor-chunks/@aws-crypto+sha256-js@5.2.0","vendor-chunks/@aws-crypto+util@5.2.0","vendor-chunks/@smithy+util-utf8@2.3.0","vendor-chunks/@smithy+util-buffer-from@2.2.0","vendor-chunks/@smithy+is-array-buffer@2.2.0","vendor-chunks/js-cookie@3.0.5","vendor-chunks/uuid@9.0.1","vendor-chunks/next-auth@4.24.11_next@15.2.2_react-dom@18.3.1_react@18.3.1","vendor-chunks/mime-db@1.52.0","vendor-chunks/axios@1.8.4_debug@4.4.0","vendor-chunks/follow-redirects@1.15.9_debug@4.4.0","vendor-chunks/debug@4.4.0","vendor-chunks/get-intrinsic@1.3.0","vendor-chunks/form-data@4.0.2","vendor-chunks/asynckit@0.4.0","vendor-chunks/combined-stream@1.0.8","vendor-chunks/mime-types@2.1.35","vendor-chunks/jwt-decode@4.0.0","vendor-chunks/proxy-from-env@1.1.0","vendor-chunks/ms@2.1.3","vendor-chunks/supports-color@7.2.0","vendor-chunks/has-symbols@1.1.0","vendor-chunks/delayed-stream@1.0.0","vendor-chunks/function-bind@1.1.2","vendor-chunks/es-set-tostringtag@2.1.0","vendor-chunks/get-proto@1.0.1","vendor-chunks/call-bind-apply-helpers@1.0.2","vendor-chunks/dunder-proto@1.0.1","vendor-chunks/math-intrinsics@1.1.0","vendor-chunks/es-errors@1.3.0","vendor-chunks/has-flag@4.0.0","vendor-chunks/gopd@1.2.0","vendor-chunks/es-define-property@1.0.1","vendor-chunks/hasown@2.0.2","vendor-chunks/has-tostringtag@1.0.2","vendor-chunks/es-object-atoms@1.1.1","vendor-chunks/uuid","vendor-chunks/jose@4.15.9","vendor-chunks/openid-client@5.7.1","vendor-chunks/oauth@0.9.15","vendor-chunks/@panva+hkdf@1.2.1","vendor-chunks/yallist@4.0.0","vendor-chunks/preact-render-to-string@5.2.6_preact@10.26.5","vendor-chunks/oidc-token-hash@5.1.0","vendor-chunks/preact@10.26.5","vendor-chunks/object-hash@2.2.0","vendor-chunks/lru-cache@6.0.0","vendor-chunks/cookie@0.7.2"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Finit%2Froute&page=%2Fapi%2Ftenant%2Finit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Finit%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();