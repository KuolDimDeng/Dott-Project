/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/tenant/create-table/route";
exports.ids = ["app/api/tenant/create-table/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fcreate-table%2Froute&page=%2Fapi%2Ftenant%2Fcreate-table%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fcreate-table%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fcreate-table%2Froute&page=%2Fapi%2Ftenant%2Fcreate-table%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fcreate-table%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_create_table_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/tenant/create-table/route.js */ \"(rsc)/./src/app/api/tenant/create-table/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/tenant/create-table/route\",\n        pathname: \"/api/tenant/create-table\",\n        filename: \"route\",\n        bundlePath: \"app/api/tenant/create-table/route\"\n    },\n    resolvedPagePath: \"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/app/api/tenant/create-table/route.js\",\n    nextConfigOutput,\n    userland: _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_create_table_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMi4yX0BiYWJlbCtjb3JlQDcuMjYuMTBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGdGVuYW50JTJGY3JlYXRlLXRhYmxlJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ0ZW5hbnQlMkZjcmVhdGUtdGFibGUlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ0ZW5hbnQlMkZjcmVhdGUtdGFibGUlMkZyb3V0ZS5qcyZhcHBEaXI9JTJGVXNlcnMlMkZrdW9sZGVuZyUyRnByb2plY3R4JTJGZnJvbnRlbmQlMkZweWZhY3Rvcl9uZXh0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmt1b2xkZW5nJTJGcHJvamVjdHglMkZmcm9udGVuZCUyRnB5ZmFjdG9yX25leHQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ3dDO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvYXBwL2FwaS90ZW5hbnQvY3JlYXRlLXRhYmxlL3JvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90ZW5hbnQvY3JlYXRlLXRhYmxlL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdGVuYW50L2NyZWF0ZS10YWJsZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdGVuYW50L2NyZWF0ZS10YWJsZS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9rdW9sZGVuZy9wcm9qZWN0eC9mcm9udGVuZC9weWZhY3Rvcl9uZXh0L3NyYy9hcHAvYXBpL3RlbmFudC9jcmVhdGUtdGFibGUvcm91dGUuanNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fcreate-table%2Froute&page=%2Fapi%2Ftenant%2Fcreate-table%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fcreate-table%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/tenant/create-table/route.js":
/*!**************************************************!*\
  !*** ./src/app/api/tenant/create-table/route.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/utils/serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/* harmony import */ var _db_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../db-config */ \"(rsc)/./src/app/api/tenant/db-config.js\");\n\n\n\n/**\n * Specialized endpoint to create the custom_auth_tenant table\n * This is helpful as a final fallback for tenant setup\n * \n * This endpoint is called automatically when a user signs in or views the dashboard\n * to ensure the required tables exist without manual intervention\n */ async function GET(request) {\n    let pool = null;\n    try {\n        // Create database pool\n        pool = await (0,_db_config__WEBPACK_IMPORTED_MODULE_2__.createDbPool)();\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__.logger.info('[CreateTenantTable] Created database pool successfully');\n        // Create tenant table with explicit schema\n        const createTableQuery = `\n      CREATE TABLE IF NOT EXISTS public.custom_auth_tenant (\n        id UUID PRIMARY KEY,\n        name VARCHAR(255) NOT NULL,\n        owner_id VARCHAR(255),\n        schema_name VARCHAR(255) NOT NULL,\n        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n        rls_enabled BOOLEAN DEFAULT TRUE,\n        rls_setup_date TIMESTAMP WITH TIME ZONE,\n        is_active BOOLEAN DEFAULT TRUE\n      );\n      \n      CREATE INDEX IF NOT EXISTS idx_tenant_owner_id ON public.custom_auth_tenant(owner_id);\n      CREATE INDEX IF NOT EXISTS idx_tenant_schema_name ON public.custom_auth_tenant(schema_name);\n    `;\n        await pool.query(createTableQuery);\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__.logger.info('[CreateTenantTable] Successfully created custom_auth_tenant table');\n        // Check if table was created\n        const checkTableQuery = `\n      SELECT EXISTS (\n        SELECT FROM information_schema.tables \n        WHERE table_schema = 'public' AND table_name = 'custom_auth_tenant'\n      );\n    `;\n        const checkResult = await pool.query(checkTableQuery);\n        const tableExists = checkResult.rows[0].exists;\n        if (!tableExists) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: \"Failed to create table\",\n                message: \"The table creation query executed but verification failed\"\n            }, {\n                status: 500\n            });\n        }\n        // Check table structure\n        const tableStructureQuery = `\n      SELECT column_name, data_type, is_nullable\n      FROM information_schema.columns\n      WHERE table_schema = 'public' AND table_name = 'custom_auth_tenant'\n      ORDER BY ordinal_position;\n    `;\n        const structureResult = await pool.query(tableStructureQuery);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Successfully created custom_auth_tenant table',\n            tableStructure: structureResult.rows,\n            dbConfig: {\n                host: (0,_db_config__WEBPACK_IMPORTED_MODULE_2__.getDbConfig)().host,\n                port: (0,_db_config__WEBPACK_IMPORTED_MODULE_2__.getDbConfig)().port,\n                database: (0,_db_config__WEBPACK_IMPORTED_MODULE_2__.getDbConfig)().database,\n                user: (0,_db_config__WEBPACK_IMPORTED_MODULE_2__.getDbConfig)().user\n            }\n        });\n    } catch (error) {\n        _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[CreateTenantTable] Error creating tenant table:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: error.message,\n            code: error.code,\n            detail: error.detail,\n            message: 'Failed to create tenant table'\n        }, {\n            status: 500\n        });\n    } finally{\n        if (pool) {\n            try {\n                await pool.end();\n                _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__.logger.info('[CreateTenantTable] Database connection closed');\n            } catch (closeError) {\n                _utils_serverLogger__WEBPACK_IMPORTED_MODULE_1__.logger.error('[CreateTenantTable] Error closing pool:', closeError.message);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS90ZW5hbnQvY3JlYXRlLXRhYmxlL3JvdXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDRztBQUNXO0FBRXpEOzs7Ozs7Q0FNQyxHQUNNLGVBQWVJLElBQUlDLE9BQU87SUFDL0IsSUFBSUMsT0FBTztJQUVYLElBQUk7UUFDRix1QkFBdUI7UUFDdkJBLE9BQU8sTUFBTUosd0RBQVlBO1FBQ3pCRCx1REFBTUEsQ0FBQ00sSUFBSSxDQUFDO1FBRVosMkNBQTJDO1FBQzNDLE1BQU1DLG1CQUFtQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7SUFlMUIsQ0FBQztRQUVELE1BQU1GLEtBQUtHLEtBQUssQ0FBQ0Q7UUFDakJQLHVEQUFNQSxDQUFDTSxJQUFJLENBQUM7UUFFWiw2QkFBNkI7UUFDN0IsTUFBTUcsa0JBQWtCLENBQUM7Ozs7O0lBS3pCLENBQUM7UUFFRCxNQUFNQyxjQUFjLE1BQU1MLEtBQUtHLEtBQUssQ0FBQ0M7UUFDckMsTUFBTUUsY0FBY0QsWUFBWUUsSUFBSSxDQUFDLEVBQUUsQ0FBQ0MsTUFBTTtRQUU5QyxJQUFJLENBQUNGLGFBQWE7WUFDaEIsT0FBT1oscURBQVlBLENBQUNlLElBQUksQ0FBQztnQkFDdkJDLFNBQVM7Z0JBQ1RDLE9BQU87Z0JBQ1BDLFNBQVM7WUFDWCxHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDbkI7UUFFQSx3QkFBd0I7UUFDeEIsTUFBTUMsc0JBQXNCLENBQUM7Ozs7O0lBSzdCLENBQUM7UUFFRCxNQUFNQyxrQkFBa0IsTUFBTWYsS0FBS0csS0FBSyxDQUFDVztRQUV6QyxPQUFPcEIscURBQVlBLENBQUNlLElBQUksQ0FBQztZQUN2QkMsU0FBUztZQUNURSxTQUFTO1lBQ1RJLGdCQUFnQkQsZ0JBQWdCUixJQUFJO1lBQ3BDVSxVQUFVO2dCQUNSQyxNQUFNckIsdURBQVdBLEdBQUdxQixJQUFJO2dCQUN4QkMsTUFBTXRCLHVEQUFXQSxHQUFHc0IsSUFBSTtnQkFDeEJDLFVBQVV2Qix1REFBV0EsR0FBR3VCLFFBQVE7Z0JBQ2hDQyxNQUFNeEIsdURBQVdBLEdBQUd3QixJQUFJO1lBQzFCO1FBQ0Y7SUFDRixFQUFFLE9BQU9WLE9BQU87UUFDZGhCLHVEQUFNQSxDQUFDZ0IsS0FBSyxDQUFDLG9EQUFvREE7UUFFakUsT0FBT2pCLHFEQUFZQSxDQUFDZSxJQUFJLENBQUM7WUFDdkJDLFNBQVM7WUFDVEMsT0FBT0EsTUFBTUMsT0FBTztZQUNwQlUsTUFBTVgsTUFBTVcsSUFBSTtZQUNoQkMsUUFBUVosTUFBTVksTUFBTTtZQUNwQlgsU0FBUztRQUNYLEdBQUc7WUFBRUMsUUFBUTtRQUFJO0lBQ25CLFNBQVU7UUFDUixJQUFJYixNQUFNO1lBQ1IsSUFBSTtnQkFDRixNQUFNQSxLQUFLd0IsR0FBRztnQkFDZDdCLHVEQUFNQSxDQUFDTSxJQUFJLENBQUM7WUFDZCxFQUFFLE9BQU93QixZQUFZO2dCQUNuQjlCLHVEQUFNQSxDQUFDZ0IsS0FBSyxDQUFDLDJDQUEyQ2MsV0FBV2IsT0FBTztZQUM1RTtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2t1b2xkZW5nL3Byb2plY3R4L2Zyb250ZW5kL3B5ZmFjdG9yX25leHQvc3JjL2FwcC9hcGkvdGVuYW50L2NyZWF0ZS10YWJsZS9yb3V0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAL3V0aWxzL3NlcnZlckxvZ2dlcic7XG5pbXBvcnQgeyBjcmVhdGVEYlBvb2wsIGdldERiQ29uZmlnIH0gZnJvbSAnLi4vZGItY29uZmlnJztcblxuLyoqXG4gKiBTcGVjaWFsaXplZCBlbmRwb2ludCB0byBjcmVhdGUgdGhlIGN1c3RvbV9hdXRoX3RlbmFudCB0YWJsZVxuICogVGhpcyBpcyBoZWxwZnVsIGFzIGEgZmluYWwgZmFsbGJhY2sgZm9yIHRlbmFudCBzZXR1cFxuICogXG4gKiBUaGlzIGVuZHBvaW50IGlzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IHdoZW4gYSB1c2VyIHNpZ25zIGluIG9yIHZpZXdzIHRoZSBkYXNoYm9hcmRcbiAqIHRvIGVuc3VyZSB0aGUgcmVxdWlyZWQgdGFibGVzIGV4aXN0IHdpdGhvdXQgbWFudWFsIGludGVydmVudGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3QpIHtcbiAgbGV0IHBvb2wgPSBudWxsO1xuICBcbiAgdHJ5IHtcbiAgICAvLyBDcmVhdGUgZGF0YWJhc2UgcG9vbFxuICAgIHBvb2wgPSBhd2FpdCBjcmVhdGVEYlBvb2woKTtcbiAgICBsb2dnZXIuaW5mbygnW0NyZWF0ZVRlbmFudFRhYmxlXSBDcmVhdGVkIGRhdGFiYXNlIHBvb2wgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgXG4gICAgLy8gQ3JlYXRlIHRlbmFudCB0YWJsZSB3aXRoIGV4cGxpY2l0IHNjaGVtYVxuICAgIGNvbnN0IGNyZWF0ZVRhYmxlUXVlcnkgPSBgXG4gICAgICBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwdWJsaWMuY3VzdG9tX2F1dGhfdGVuYW50IChcbiAgICAgICAgaWQgVVVJRCBQUklNQVJZIEtFWSxcbiAgICAgICAgbmFtZSBWQVJDSEFSKDI1NSkgTk9UIE5VTEwsXG4gICAgICAgIG93bmVyX2lkIFZBUkNIQVIoMjU1KSxcbiAgICAgICAgc2NoZW1hX25hbWUgVkFSQ0hBUigyNTUpIE5PVCBOVUxMLFxuICAgICAgICBjcmVhdGVkX2F0IFRJTUVTVEFNUCBXSVRIIFRJTUUgWk9ORSBERUZBVUxUIE5PVygpLFxuICAgICAgICB1cGRhdGVkX2F0IFRJTUVTVEFNUCBXSVRIIFRJTUUgWk9ORSBERUZBVUxUIE5PVygpLFxuICAgICAgICBybHNfZW5hYmxlZCBCT09MRUFOIERFRkFVTFQgVFJVRSxcbiAgICAgICAgcmxzX3NldHVwX2RhdGUgVElNRVNUQU1QIFdJVEggVElNRSBaT05FLFxuICAgICAgICBpc19hY3RpdmUgQk9PTEVBTiBERUZBVUxUIFRSVUVcbiAgICAgICk7XG4gICAgICBcbiAgICAgIENSRUFURSBJTkRFWCBJRiBOT1QgRVhJU1RTIGlkeF90ZW5hbnRfb3duZXJfaWQgT04gcHVibGljLmN1c3RvbV9hdXRoX3RlbmFudChvd25lcl9pZCk7XG4gICAgICBDUkVBVEUgSU5ERVggSUYgTk9UIEVYSVNUUyBpZHhfdGVuYW50X3NjaGVtYV9uYW1lIE9OIHB1YmxpYy5jdXN0b21fYXV0aF90ZW5hbnQoc2NoZW1hX25hbWUpO1xuICAgIGA7XG4gICAgXG4gICAgYXdhaXQgcG9vbC5xdWVyeShjcmVhdGVUYWJsZVF1ZXJ5KTtcbiAgICBsb2dnZXIuaW5mbygnW0NyZWF0ZVRlbmFudFRhYmxlXSBTdWNjZXNzZnVsbHkgY3JlYXRlZCBjdXN0b21fYXV0aF90ZW5hbnQgdGFibGUnKTtcbiAgICBcbiAgICAvLyBDaGVjayBpZiB0YWJsZSB3YXMgY3JlYXRlZFxuICAgIGNvbnN0IGNoZWNrVGFibGVRdWVyeSA9IGBcbiAgICAgIFNFTEVDVCBFWElTVFMgKFxuICAgICAgICBTRUxFQ1QgRlJPTSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIFxuICAgICAgICBXSEVSRSB0YWJsZV9zY2hlbWEgPSAncHVibGljJyBBTkQgdGFibGVfbmFtZSA9ICdjdXN0b21fYXV0aF90ZW5hbnQnXG4gICAgICApO1xuICAgIGA7XG4gICAgXG4gICAgY29uc3QgY2hlY2tSZXN1bHQgPSBhd2FpdCBwb29sLnF1ZXJ5KGNoZWNrVGFibGVRdWVyeSk7XG4gICAgY29uc3QgdGFibGVFeGlzdHMgPSBjaGVja1Jlc3VsdC5yb3dzWzBdLmV4aXN0cztcbiAgICBcbiAgICBpZiAoIXRhYmxlRXhpc3RzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgZXJyb3I6IFwiRmFpbGVkIHRvIGNyZWF0ZSB0YWJsZVwiLFxuICAgICAgICBtZXNzYWdlOiBcIlRoZSB0YWJsZSBjcmVhdGlvbiBxdWVyeSBleGVjdXRlZCBidXQgdmVyaWZpY2F0aW9uIGZhaWxlZFwiXG4gICAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBDaGVjayB0YWJsZSBzdHJ1Y3R1cmVcbiAgICBjb25zdCB0YWJsZVN0cnVjdHVyZVF1ZXJ5ID0gYFxuICAgICAgU0VMRUNUIGNvbHVtbl9uYW1lLCBkYXRhX3R5cGUsIGlzX251bGxhYmxlXG4gICAgICBGUk9NIGluZm9ybWF0aW9uX3NjaGVtYS5jb2x1bW5zXG4gICAgICBXSEVSRSB0YWJsZV9zY2hlbWEgPSAncHVibGljJyBBTkQgdGFibGVfbmFtZSA9ICdjdXN0b21fYXV0aF90ZW5hbnQnXG4gICAgICBPUkRFUiBCWSBvcmRpbmFsX3Bvc2l0aW9uO1xuICAgIGA7XG4gICAgXG4gICAgY29uc3Qgc3RydWN0dXJlUmVzdWx0ID0gYXdhaXQgcG9vbC5xdWVyeSh0YWJsZVN0cnVjdHVyZVF1ZXJ5KTtcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIG1lc3NhZ2U6ICdTdWNjZXNzZnVsbHkgY3JlYXRlZCBjdXN0b21fYXV0aF90ZW5hbnQgdGFibGUnLFxuICAgICAgdGFibGVTdHJ1Y3R1cmU6IHN0cnVjdHVyZVJlc3VsdC5yb3dzLFxuICAgICAgZGJDb25maWc6IHtcbiAgICAgICAgaG9zdDogZ2V0RGJDb25maWcoKS5ob3N0LFxuICAgICAgICBwb3J0OiBnZXREYkNvbmZpZygpLnBvcnQsXG4gICAgICAgIGRhdGFiYXNlOiBnZXREYkNvbmZpZygpLmRhdGFiYXNlLFxuICAgICAgICB1c2VyOiBnZXREYkNvbmZpZygpLnVzZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBsb2dnZXIuZXJyb3IoJ1tDcmVhdGVUZW5hbnRUYWJsZV0gRXJyb3IgY3JlYXRpbmcgdGVuYW50IHRhYmxlOicsIGVycm9yKTtcbiAgICBcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIGNvZGU6IGVycm9yLmNvZGUsXG4gICAgICBkZXRhaWw6IGVycm9yLmRldGFpbCxcbiAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gY3JlYXRlIHRlbmFudCB0YWJsZSdcbiAgICB9LCB7IHN0YXR1czogNTAwIH0pO1xuICB9IGZpbmFsbHkge1xuICAgIGlmIChwb29sKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBwb29sLmVuZCgpO1xuICAgICAgICBsb2dnZXIuaW5mbygnW0NyZWF0ZVRlbmFudFRhYmxlXSBEYXRhYmFzZSBjb25uZWN0aW9uIGNsb3NlZCcpO1xuICAgICAgfSBjYXRjaCAoY2xvc2VFcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoJ1tDcmVhdGVUZW5hbnRUYWJsZV0gRXJyb3IgY2xvc2luZyBwb29sOicsIGNsb3NlRXJyb3IubWVzc2FnZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImxvZ2dlciIsImNyZWF0ZURiUG9vbCIsImdldERiQ29uZmlnIiwiR0VUIiwicmVxdWVzdCIsInBvb2wiLCJpbmZvIiwiY3JlYXRlVGFibGVRdWVyeSIsInF1ZXJ5IiwiY2hlY2tUYWJsZVF1ZXJ5IiwiY2hlY2tSZXN1bHQiLCJ0YWJsZUV4aXN0cyIsInJvd3MiLCJleGlzdHMiLCJqc29uIiwic3VjY2VzcyIsImVycm9yIiwibWVzc2FnZSIsInN0YXR1cyIsInRhYmxlU3RydWN0dXJlUXVlcnkiLCJzdHJ1Y3R1cmVSZXN1bHQiLCJ0YWJsZVN0cnVjdHVyZSIsImRiQ29uZmlnIiwiaG9zdCIsInBvcnQiLCJkYXRhYmFzZSIsInVzZXIiLCJjb2RlIiwiZGV0YWlsIiwiZW5kIiwiY2xvc2VFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/tenant/create-table/route.js\n");

/***/ }),

/***/ "(rsc)/./src/app/api/tenant/db-config.js":
/*!*****************************************!*\
  !*** ./src/app/api/tenant/db-config.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDbPool: () => (/* binding */ createDbPool),\n/* harmony export */   disconnectAllClients: () => (/* binding */ disconnectAllClients),\n/* harmony export */   getDbConfig: () => (/* binding */ getDbConfig),\n/* harmony export */   getPrismaClient: () => (/* binding */ getPrismaClient),\n/* harmony export */   testDbConnection: () => (/* binding */ testDbConnection)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * Database configuration for all tenant-related endpoints\n * Provides consistent connection settings with AWS RDS\n */ \n// Cache for Prisma clients to avoid creating multiple connections\nconst prismaClients = {};\n// Connection settings optimized for AWS RDS\nconst DB_DEFAULTS = {\n    port: 5432,\n    database: 'dott_main',\n    // Connection settings - increase timeouts to prevent client-side aborts\n    connectionTimeoutMillis: 15000,\n    statement_timeout: 30000,\n    query_timeout: 30000,\n    max: 5,\n    idleTimeoutMillis: 10000,\n    // Added connection retry logic\n    retryAttempts: 3,\n    retryDelay: 1000 // 1 second between retry attempts\n};\n/**\n * Get database configuration with fallbacks\n * This ensures consistent settings across all endpoints\n * @returns {object} Database configuration\n */ function getDbConfig() {\n    console.log('Using AWS RDS database connection');\n    // Check if SSL should be disabled\n    const useSSL = process.env.DB_USE_SSL !== 'false';\n    // Base configuration using environment variables with fallbacks for AWS RDS\n    const config = {\n        user: process.env.RDS_USERNAME || process.env.DB_USER || process.env.DJANGO_DB_USER || 'dott_admin',\n        password: process.env.RDS_PASSWORD || process.env.DB_PASSWORD || process.env.DJANGO_DB_PASSWORD || 'RRfXU6uPPUbBEg1JqGTJ',\n        host: process.env.RDS_HOSTNAME || process.env.DB_HOST || process.env.DJANGO_DB_HOST || 'dott-dev.c12qgo6m085e.us-east-1.rds.amazonaws.com',\n        port: parseInt(process.env.RDS_PORT || process.env.DB_PORT || process.env.DJANGO_DB_PORT || DB_DEFAULTS.port, 10),\n        database: process.env.RDS_DB_NAME || process.env.DB_NAME || process.env.DJANGO_DB_NAME || 'dott_main',\n        // Connection settings\n        connectionTimeoutMillis: DB_DEFAULTS.connectionTimeoutMillis,\n        statement_timeout: DB_DEFAULTS.statement_timeout,\n        max: DB_DEFAULTS.max,\n        idleTimeoutMillis: DB_DEFAULTS.idleTimeoutMillis\n    };\n    // Log connection details (without password)\n    console.log('AWS RDS connection details:', {\n        host: config.host,\n        database: config.database,\n        user: config.user,\n        port: config.port\n    });\n    // Always add SSL configuration for AWS RDS unless explicitly disabled\n    if (useSSL) {\n        config.ssl = {\n            rejectUnauthorized: false // Allow self-signed certs for AWS RDS\n        };\n    }\n    return config;\n}\n/**\n * Create a database pool with proper error handlers\n * @returns {Pool} Database connection pool\n */ async function createDbPool() {\n    const { Pool } = __webpack_require__(/*! pg */ \"pg\");\n    const config = getDbConfig();\n    try {\n        console.log('[DB] Creating database pool with config:', {\n            host: config.host,\n            port: config.port,\n            database: config.database,\n            user: config.user,\n            ssl: config.ssl ? 'enabled' : 'disabled',\n            connectionTimeoutMillis: config.connectionTimeoutMillis,\n            max: config.max\n        });\n        const pool = new Pool(config);\n        // Add error handler to prevent uncaught exceptions\n        pool.on('error', (err)=>{\n            // Log full error details for debugging\n            console.error('[DB] Pool error event:', {\n                message: err.message,\n                code: err.code,\n                severity: err.severity,\n                detail: err.detail,\n                hint: err.hint,\n                where: err.where,\n                stack: err.stack\n            });\n        // Don't crash on connection errors\n        });\n        // Test connection to verify settings\n        console.log('[DB] Attempting to get client from pool...');\n        // Implement retry logic for initial connection\n        let client = null;\n        let lastError = null;\n        let attemptCount = 0;\n        while(attemptCount < DB_DEFAULTS.retryAttempts){\n            try {\n                attemptCount++;\n                console.log(`[DB] Connection attempt ${attemptCount}/${DB_DEFAULTS.retryAttempts}...`);\n                client = await pool.connect();\n                // If we got here, connection successful - break retry loop\n                console.log('[DB] Client connected successfully');\n                break;\n            } catch (connectionError) {\n                lastError = connectionError;\n                console.error(`[DB] Connection attempt ${attemptCount} failed:`, {\n                    message: connectionError.message,\n                    code: connectionError.code\n                });\n                // Don't wait on the last attempt\n                if (attemptCount < DB_DEFAULTS.retryAttempts) {\n                    console.log(`[DB] Waiting ${DB_DEFAULTS.retryDelay}ms before retry...`);\n                    await new Promise((resolve)=>setTimeout(resolve, DB_DEFAULTS.retryDelay));\n                }\n            }\n        }\n        // If all connection attempts failed, throw the last error\n        if (!client) {\n            throw lastError || new Error('Failed to connect to database after multiple attempts');\n        }\n        try {\n            console.log('[DB] Running test query...');\n            const testResult = await client.query('SELECT 1 as connection_test');\n            console.log('[DB] Database connection test successful', {\n                host: config.host,\n                database: config.database,\n                timestamp: new Date().toISOString(),\n                result: testResult.rows[0]\n            });\n        } catch (queryError) {\n            console.error('[DB] Test query failed:', {\n                message: queryError.message,\n                code: queryError.code,\n                severity: queryError.severity,\n                detail: queryError.detail\n            });\n            throw queryError;\n        } finally{\n            if (client) client.release();\n        }\n        return pool;\n    } catch (error) {\n        console.error('[DB] Error creating database pool:', {\n            message: error.message,\n            code: error.code,\n            severity: error.severity,\n            detail: error.detail\n        });\n        throw error; // Rethrow original error for proper handling\n    }\n}\n/**\n * Test database connection and return status\n * @returns {object} Connection test result\n */ async function testDbConnection() {\n    let pool = null;\n    try {\n        pool = await createDbPool();\n        const result = await pool.query('SELECT 1 as connection_test');\n        const config = getDbConfig();\n        return {\n            success: true,\n            connected: result.rows[0].connection_test === 1,\n            // Only include non-sensitive configuration details\n            config: {\n                host: config.host,\n                database: config.database,\n                port: config.port,\n                ssl: config.ssl ? 'enabled' : 'disabled'\n            },\n            database: 'aws_rds'\n        };\n    } catch (error) {\n        const config = getDbConfig();\n        return {\n            success: false,\n            error: error.message,\n            code: error.code,\n            // Only include non-sensitive configuration details\n            config: {\n                host: config.host,\n                database: config.database,\n                port: config.port,\n                ssl: config.ssl ? 'enabled' : 'disabled'\n            },\n            database: 'aws_rds'\n        };\n    } finally{\n        if (pool) await pool.end();\n    }\n}\n/**\n * Get a Prisma client for a specific schema\n * @param {string} schema - The schema name to connect to\n * @returns {PrismaClient} A Prisma client connected to the specified schema\n */ async function getPrismaClient(schema = 'public') {\n    try {\n        // Return cached client if it exists\n        if (prismaClients[schema]) {\n            console.log(`Using cached Prisma client for schema: ${schema}`);\n            return prismaClients[schema];\n        }\n        console.log(`Creating new Prisma client for schema: ${schema}`);\n        // Get appropriate database URL\n        const dbUrl = process.env.DATABASE_URL || `postgresql://dott_admin:${process.env.DB_PASSWORD || 'RRfXU6uPPUbBEg1JqGTJ'}@dott-dev.c12qgo6m085e.us-east-1.rds.amazonaws.com:5432/dott_main?schema=${schema}`;\n        console.log(`Using database URL: ${dbUrl.replace(/:[^:]*@/, ':***@')}`);\n        // Create a new Prisma client with the schema connection\n        const prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n            datasources: {\n                db: {\n                    url: dbUrl\n                }\n            },\n            // Add logging in development\n            log:  true ? [\n                {\n                    level: 'query',\n                    emit: 'event'\n                },\n                {\n                    level: 'error',\n                    emit: 'stdout'\n                },\n                {\n                    level: 'warn',\n                    emit: 'stdout'\n                }\n            ] : 0\n        });\n        // Add query logging in development\n        if (true) {\n            prisma.$on('query', (e)=>{\n                console.log(`[Prisma Query] ${e.query} (${e.duration}ms)`);\n            });\n        }\n        // Cache the client\n        prismaClients[schema] = prisma;\n        // Test the connection\n        try {\n            await prisma.$connect();\n            console.log(`Successfully connected to database schema: ${schema}`);\n            // Execute a simple query to verify\n            const result = await prisma.$queryRaw`SELECT 1 as connection_test`;\n            console.log(`Prisma connection test successful: ${JSON.stringify(result)}`);\n            return prisma;\n        } catch (error) {\n            console.error(`Failed to connect to database schema ${schema}:`, {\n                message: error.message,\n                code: error.code,\n                stack: error.stack\n            });\n            // Remove from cache if connection failed\n            delete prismaClients[schema];\n            throw error;\n        }\n    } catch (error) {\n        console.error(`Error setting up Prisma client for schema ${schema}:`, error);\n        throw error;\n    }\n}\n/**\n * Clean up all Prisma clients on server shutdown\n */ async function disconnectAllClients() {\n    for(const schema in prismaClients){\n        try {\n            await prismaClients[schema].$disconnect();\n            console.log(`Disconnected from schema: ${schema}`);\n        } catch (error) {\n            console.error(`Error disconnecting from schema ${schema}:`, error);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/tenant/db-config.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/serverLogger.js":
/*!***********************************!*\
  !*** ./src/utils/serverLogger.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextualServerLogger: () => (/* binding */ createContextualServerLogger),\n/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   info: () => (/* binding */ info),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   serverLogger: () => (/* binding */ serverLogger),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n// Server-side logger implementation\n// This file should be imported in API routes instead of the client-side logger\n/**\n * Server-side logger utility\n * \n * This logger is specifically designed for server components and API routes\n * where the client-side logger with browser-specific APIs can't be used.\n */ /**\n * Format log prefix to include timestamp and context\n */ function formatPrefix(level, context = {}) {\n    const timestamp = new Date().toISOString();\n    const tenantId = context.tenantId || 'no-tenant';\n    return `[${timestamp}] [SERVER:${level}] [${tenantId}]`;\n}\n/**\n * Server logger instance with standard logging methods\n */ const serverLogger = {\n    /**\n   * Log at DEBUG level\n   */ debug: (message, data, context = {})=>{\n        const prefix = formatPrefix('DEBUG', context);\n        if (data !== undefined) {\n            console.debug(`${prefix} ${message}`, data);\n        } else {\n            console.debug(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at INFO level\n   */ info: (message, data, context = {})=>{\n        const prefix = formatPrefix('INFO', context);\n        if (data !== undefined) {\n            console.info(`${prefix} ${message}`, data);\n        } else {\n            console.info(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at WARN level\n   */ warn: (message, data, context = {})=>{\n        const prefix = formatPrefix('WARN', context);\n        if (data !== undefined) {\n            console.warn(`${prefix} ${message}`, data);\n        } else {\n            console.warn(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at ERROR level\n   */ error: (message, data, context = {})=>{\n        const prefix = formatPrefix('ERROR', context);\n        if (data !== undefined) {\n            console.error(`${prefix} ${message}`, data);\n        } else {\n            console.error(`${prefix} ${message}`);\n        }\n    }\n};\n/**\n * Create a contextualized server logger with pre-bound context\n */ function createContextualServerLogger(context = {}) {\n    return {\n        debug: (message, data)=>serverLogger.debug(message, data, context),\n        info: (message, data)=>serverLogger.info(message, data, context),\n        warn: (message, data)=>serverLogger.warn(message, data, context),\n        error: (message, data)=>serverLogger.error(message, data, context)\n    };\n}\n/**\n * Legacy function for backward compatibility with existing imports\n * Creates a logger with a namespace\n */ function createServerLogger(namespace = 'API') {\n    return {\n        debug: (message, ...args)=>serverLogger.debug(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        info: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        warn: (message, ...args)=>serverLogger.warn(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        error: (message, ...args)=>serverLogger.error(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        log: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined)\n    };\n}\n// Create a default server logger instance for compatibility with existing imports\nconst logger = createServerLogger('API');\n// Export individual functions directly from serverLogger for convenience\nconst debug = serverLogger.debug;\nconst info = serverLogger.info;\nconst warn = serverLogger.warn;\nconst error = serverLogger.error;\n// For CommonJS compatibility\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    serverLogger,\n    logger,\n    debug,\n    info,\n    warn,\n    error,\n    createContextualServerLogger,\n    createServerLogger\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/serverLogger.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("pg");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fcreate-table%2Froute&page=%2Fapi%2Ftenant%2Fcreate-table%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fcreate-table%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();