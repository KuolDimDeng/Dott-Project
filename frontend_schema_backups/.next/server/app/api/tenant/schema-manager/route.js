/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/tenant/schema-manager/route";
exports.ids = ["app/api/tenant/schema-manager/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fschema-manager%2Froute&page=%2Fapi%2Ftenant%2Fschema-manager%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fschema-manager%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fschema-manager%2Froute&page=%2Fapi%2Ftenant%2Fschema-manager%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fschema-manager%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_schema_manager_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/tenant/schema-manager/route.js */ \"(rsc)/./src/app/api/tenant/schema-manager/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/tenant/schema-manager/route\",\n        pathname: \"/api/tenant/schema-manager\",\n        filename: \"route\",\n        bundlePath: \"app/api/tenant/schema-manager/route\"\n    },\n    resolvedPagePath: \"/Users/kuoldeng/projectx/frontend/pyfactor_next/src/app/api/tenant/schema-manager/route.js\",\n    nextConfigOutput,\n    userland: _Users_kuoldeng_projectx_frontend_pyfactor_next_src_app_api_tenant_schema_manager_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL25leHRAMTUuMi4yX0BiYWJlbCtjb3JlQDcuMjYuMTBfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjEvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyL2luZGV4LmpzP25hbWU9YXBwJTJGYXBpJTJGdGVuYW50JTJGc2NoZW1hLW1hbmFnZXIlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRlbmFudCUyRnNjaGVtYS1tYW5hZ2VyJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGdGVuYW50JTJGc2NoZW1hLW1hbmFnZXIlMkZyb3V0ZS5qcyZhcHBEaXI9JTJGVXNlcnMlMkZrdW9sZGVuZyUyRnByb2plY3R4JTJGZnJvbnRlbmQlMkZweWZhY3Rvcl9uZXh0JTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmt1b2xkZW5nJTJGcHJvamVjdHglMkZmcm9udGVuZCUyRnB5ZmFjdG9yX25leHQmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQzBDO0FBQ3ZIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvYXBwL2FwaS90ZW5hbnQvc2NoZW1hLW1hbmFnZXIvcm91dGUuanNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3RlbmFudC9zY2hlbWEtbWFuYWdlci9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3RlbmFudC9zY2hlbWEtbWFuYWdlclwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvdGVuYW50L3NjaGVtYS1tYW5hZ2VyL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL2t1b2xkZW5nL3Byb2plY3R4L2Zyb250ZW5kL3B5ZmFjdG9yX25leHQvc3JjL2FwcC9hcGkvdGVuYW50L3NjaGVtYS1tYW5hZ2VyL3JvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fschema-manager%2Froute&page=%2Fapi%2Ftenant%2Fschema-manager%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fschema-manager%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/tenant/schema-manager/route.js":
/*!****************************************************!*\
  !*** ./src/app/api/tenant/schema-manager/route.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v5.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _utils_serverLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/* harmony import */ var _utils_db_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/utils/db-config */ \"(rsc)/./src/utils/db-config.js\");\n/* harmony import */ var _utils_uuid_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/utils/uuid-helpers */ \"(rsc)/./src/utils/uuid-helpers.js\");\n/* harmony import */ var _utils_auth_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/utils/auth-helpers */ \"(rsc)/./src/utils/auth-helpers.js\");\n\n\n\n\n\n\n\n// Dedicated logger for schema operations\nconst logger = (0,_utils_serverLogger__WEBPACK_IMPORTED_MODULE_2__.createServerLogger)('schema-manager');\n// Constants\nconst TENANT_NAMESPACE = '9a551c44-4ade-4f89-b078-0af8be794c23';\nconst LOCK_TIMEOUT = 30000; // 30 seconds timeout for locks\nconst SCHEMA_NAME_PREFIX = 'tenant_';\n// In-memory cache for active schema operations\n// This acts as a semaphore to prevent concurrent operations on the same schema\nconst activeSchemaOperations = new Map();\n/**\n * Generate a deterministic schema name from a tenant ID\n */ function generateSchemaName(tenantId) {\n    // Ensure the tenantId is a valid UUID\n    const validTenantId = (0,_utils_uuid_helpers__WEBPACK_IMPORTED_MODULE_4__.validateAndRepairUuid)(tenantId);\n    return `${SCHEMA_NAME_PREFIX}${validTenantId.replace(/-/g, '_')}`;\n}\n/**\n * Generate a deterministic tenant ID from a user ID\n */ function generateTenantIdFromUserId(userId) {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(userId, TENANT_NAMESPACE);\n}\n/**\n * Create a database pool\n */ async function createPool() {\n    try {\n        const dbConfig = (0,_utils_db_config__WEBPACK_IMPORTED_MODULE_3__.getDbConfigFromEnv)();\n        return new pg__WEBPACK_IMPORTED_MODULE_1__.Pool(dbConfig);\n    } catch (error) {\n        logger.error('Failed to create database pool:', error);\n        throw error;\n    }\n}\n/**\n * Check if a schema exists in the database\n */ async function schemaExists(pool, schemaName) {\n    const result = await pool.query(`\n    SELECT EXISTS (\n      SELECT 1 FROM information_schema.schemata \n      WHERE schema_name = $1\n    );\n  `, [\n        schemaName\n    ]);\n    return result.rows[0].exists;\n}\n/**\n * Check if a tenant record exists in the database\n */ async function tenantExists(pool, tenantId) {\n    const result = await pool.query(`\n    SELECT EXISTS (\n      SELECT 1 FROM custom_auth_tenant \n      WHERE id = $1\n    );\n  `, [\n        tenantId\n    ]);\n    return result.rows[0].exists;\n}\n/**\n * Acquire a lock for schema operations\n * Returns true if lock acquired, false if already locked\n */ function acquireSchemaLock(schemaName, operation) {\n    if (activeSchemaOperations.has(schemaName)) {\n        return false;\n    }\n    // Set the lock with operation details and timestamp\n    activeSchemaOperations.set(schemaName, {\n        operation,\n        timestamp: Date.now(),\n        lockId: (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])()\n    });\n    return true;\n}\n/**\n * Release a schema lock\n */ function releaseSchemaLock(schemaName, lockId) {\n    const lock = activeSchemaOperations.get(schemaName);\n    // Only release if lockId matches or if lock has timed out\n    if (lock && (lock.lockId === lockId || Date.now() - lock.timestamp > LOCK_TIMEOUT)) {\n        activeSchemaOperations.delete(schemaName);\n        return true;\n    }\n    return false;\n}\n/**\n * Clean up expired locks\n */ function cleanupExpiredLocks() {\n    const now = Date.now();\n    for (const [schemaName, lock] of activeSchemaOperations.entries()){\n        if (now - lock.timestamp > LOCK_TIMEOUT) {\n            logger.warn(`Cleaning up expired lock for schema ${schemaName}, operation: ${lock.operation}`);\n            activeSchemaOperations.delete(schemaName);\n        }\n    }\n}\n/**\n * Create a schema if it doesn't exist\n */ async function createSchemaIfNotExists(pool, schemaName, tenantId, businessName, userId) {\n    logger.info(`Creating schema if not exists: ${schemaName} for tenant ${tenantId}`);\n    // Acquire lock for creating the schema\n    const lockId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n    if (!acquireSchemaLock(schemaName, 'create_schema')) {\n        logger.warn(`Schema creation already in progress for ${schemaName}`);\n        return {\n            success: false,\n            message: 'Schema creation already in progress',\n            locked: true\n        };\n    }\n    try {\n        // First check if schema already exists\n        const exists = await schemaExists(pool, schemaName);\n        if (exists) {\n            logger.info(`Schema ${schemaName} already exists, skipping creation`);\n            // If schema exists but tenant doesn't have a proper name, try to update it\n            if (businessName) {\n                try {\n                    // Check if tenant record exists with default/generic name\n                    const tenantCheck = await pool.query(`\n            SELECT id, name FROM custom_auth_tenant \n            WHERE id = $1 AND (name = 'Default Business' OR name = '')\n          `, [\n                        tenantId\n                    ]);\n                    if (tenantCheck.rows && tenantCheck.rows.length > 0) {\n                        // Update tenant name with real business name\n                        await pool.query(`\n              UPDATE custom_auth_tenant \n              SET name = $1, updated_at = NOW()\n              WHERE id = $2\n            `, [\n                            businessName,\n                            tenantId\n                        ]);\n                        logger.info(`Updated generic tenant name to real business name: ${businessName}`);\n                    }\n                } catch (updateError) {\n                    logger.warn(`Failed to update tenant name: ${updateError.message}`);\n                }\n            }\n            return {\n                success: true,\n                message: 'Schema already exists',\n                schemaName,\n                tenantId,\n                exists: true,\n                created: false\n            };\n        }\n        // Schema doesn't exist, create it\n        logger.info(`Creating new schema: ${schemaName}`);\n        // Begin a transaction for atomicity\n        await pool.query('BEGIN');\n        // Create the schema\n        await pool.query(`CREATE SCHEMA IF NOT EXISTS \"${schemaName}\";`);\n        // Create tenant record only if we have a real business name\n        let tenantResult = null;\n        if (businessName) {\n            tenantResult = await pool.query(`\n        INSERT INTO custom_auth_tenant (\n          id, name, owner_id, schema_name, created_at, updated_at,\n          rls_enabled, rls_setup_date\n        )\n        VALUES ($1, $2, $3, $4, NOW(), NOW(), true, NOW())\n        ON CONFLICT (id) DO UPDATE \n        SET name = EXCLUDED.name, \n            updated_at = NOW()\n        RETURNING id, name, schema_name, owner_id, rls_enabled;\n      `, [\n                tenantId,\n                businessName,\n                userId,\n                schemaName\n            ]);\n        } else {\n            // Without a business name, only create the schema - don't add to tenant table\n            logger.warn(`Skipping tenant record creation for ${tenantId} - no business name provided`);\n        }\n        // Set up permissions\n        await pool.query(`GRANT USAGE ON SCHEMA \"${schemaName}\" TO dott_admin;`);\n        await pool.query(`GRANT ALL PRIVILEGES ON SCHEMA \"${schemaName}\" TO dott_admin;`);\n        // Commit the transaction\n        await pool.query('COMMIT');\n        logger.info(`Successfully created schema ${schemaName} and tenant record`);\n        return {\n            success: true,\n            message: 'Schema created successfully',\n            schemaName,\n            tenantId,\n            tenantInfo: tenantResult?.rows[0] || null,\n            exists: false,\n            created: true\n        };\n    } catch (error) {\n        // Roll back the transaction if anything fails\n        try {\n            await pool.query('ROLLBACK');\n        } catch (rollbackError) {\n            logger.error(`Error during rollback: ${rollbackError.message}`);\n        }\n        logger.error(`Error creating schema: ${error.message}`, error);\n        return {\n            success: false,\n            message: `Failed to create schema: ${error.message}`,\n            error: error.message\n        };\n    } finally{\n        // Always release the lock\n        releaseSchemaLock(schemaName, lockId);\n    }\n}\n/**\n * Check if a schema exists without attempting to create it\n */ async function GET(request) {\n    cleanupExpiredLocks(); // Clean up any expired locks\n    // Parse query parameters\n    const url = new URL(request.url);\n    const tenantId = url.searchParams.get('tenantId');\n    if (!tenantId || !(0,_utils_uuid_helpers__WEBPACK_IMPORTED_MODULE_4__.isUUID)(tenantId)) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Invalid or missing tenant ID'\n        }, {\n            status: 400\n        });\n    }\n    const schemaName = generateSchemaName(tenantId);\n    try {\n        const pool = await createPool();\n        try {\n            // Check if schema exists\n            const exists = await schemaExists(pool, schemaName);\n            // Also check if tenant record exists\n            const tenantExists = await pool.query(`\n        SELECT id, name, schema_name, owner_id, created_at, updated_at, rls_enabled\n        FROM custom_auth_tenant\n        WHERE id = $1\n      `, [\n                tenantId\n            ]);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                schemaExists: exists,\n                tenantExists: tenantExists.rows.length > 0,\n                tenantInfo: tenantExists.rows.length > 0 ? tenantExists.rows[0] : null,\n                schemaName,\n                tenantId\n            });\n        } finally{\n            await pool.end();\n        }\n    } catch (error) {\n        logger.error(`Error checking schema existence: ${error.message}`, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Failed to check schema existence',\n            message: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n/**\n * Create a schema for a tenant\n */ async function POST(request) {\n    cleanupExpiredLocks(); // Clean up any expired locks\n    try {\n        // Get authentication information\n        const auth = await (0,_utils_auth_helpers__WEBPACK_IMPORTED_MODULE_5__.getAuth)();\n        // Parse request body\n        const body = await request.json();\n        // Check whether to force create or not\n        const forceCreate = body.forceCreate === true;\n        // Get tenant ID from request or generate a new one\n        let tenantId = body.tenantId;\n        // If no tenant ID provided but user ID is available, generate deterministic tenant ID\n        if (!tenantId && body.userId && forceCreate) {\n            tenantId = generateTenantIdFromUserId(body.userId);\n        } else if (!tenantId && auth.user?.sub && forceCreate) {\n            tenantId = generateTenantIdFromUserId(auth.user.sub);\n        } else if (!tenantId && forceCreate) {\n            tenantId = (0,uuid__WEBPACK_IMPORTED_MODULE_7__[\"default\"])();\n        } else if (!tenantId && !forceCreate) {\n            logger.warn('No tenant ID provided and forceCreate is false, refusing to create a new tenant');\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'No tenant ID provided and tenant creation not explicitly requested'\n            }, {\n                status: 400\n            });\n        }\n        // Ensure tenant ID is valid\n        tenantId = (0,_utils_uuid_helpers__WEBPACK_IMPORTED_MODULE_4__.validateAndRepairUuid)(tenantId);\n        // Get user ID from request or auth\n        const userId = body.userId || auth.user?.sub || null;\n        // Get business name from request or auth - ONLY use real data, no defaults\n        const businessName = body.businessName || auth.user?.businessName || null;\n        // If no real business name is provided, log warning but continue with schema creation\n        if (!businessName) {\n            logger.warn(`No real business name provided for tenant ${tenantId}, schema will be created but tenant record may be incomplete`);\n        }\n        // Generate schema name\n        const schemaName = generateSchemaName(tenantId);\n        logger.info(`Processing schema creation request for tenant ${tenantId}, schema ${schemaName}`);\n        // Create database pool\n        const pool = await createPool();\n        try {\n            // Check if schema exists first\n            const exists = await schemaExists(pool, schemaName);\n            // If schema doesn't exist and forceCreate is false, return error\n            if (!exists && !forceCreate) {\n                logger.warn(`Schema ${schemaName} doesn't exist and forceCreate is false, refusing to create`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    message: 'Schema does not exist and creation not explicitly requested',\n                    tenantId,\n                    schemaName,\n                    exists: false\n                }, {\n                    status: 400\n                });\n            }\n            // Create schema if it doesn't exist (and we have permission to create it)\n            const result = await createSchemaIfNotExists(pool, schemaName, tenantId, businessName, userId);\n            // Check if operation is locked by another process\n            if (!result.success && result.locked) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    message: 'Schema creation already in progress',\n                    tenantId,\n                    schemaName\n                }, {\n                    status: 409\n                } // Conflict\n                );\n            }\n            // Return the result\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result, {\n                status: result.success ? 200 : 500\n            });\n        } finally{\n            await pool.end();\n        }\n    } catch (error) {\n        logger.error(`Error in schema creation endpoint: ${error.message}`, error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Schema creation failed',\n            message: error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/tenant/schema-manager/route.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/auth-helpers.js":
/*!***********************************!*\
  !*** ./src/utils/auth-helpers.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getAuth: () => (/* binding */ getAuth),\n/* harmony export */   getAuthSession: () => (/* binding */ getAuthSession),\n/* harmony export */   getTenantId: () => (/* binding */ getTenantId),\n/* harmony export */   getUserId: () => (/* binding */ getUserId),\n/* harmony export */   isAuthenticated: () => (/* binding */ isAuthenticated)\n/* harmony export */ });\n/* harmony import */ var next_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/headers */ \"(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/api/headers.js\");\n/* harmony import */ var _logger_stub__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger-stub */ \"(rsc)/./src/utils/logger-stub.js\");\n/* harmony import */ var aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aws-amplify/auth */ \"(rsc)/../../node_modules/.pnpm/@aws-amplify+core@6.11.1/node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs\");\n/**\n * Authentication helper functions for server and client components\n * Provides consistent auth handling across the application\n */ \n\n\n// Create logger for this module\nconst log = _logger_stub__WEBPACK_IMPORTED_MODULE_1__.logger;\n/**\n * Extract authentication tokens from request or cookies\n * @param {Request} request - The incoming request (optional)\n * @returns {Object} Authentication data including tokens and user info\n */ async function getAuth(request = null) {\n    try {\n        // Get cookie store - MUST await in Next.js 15\n        const cookieStore = await (0,next_headers__WEBPACK_IMPORTED_MODULE_0__.cookies)();\n        // Check for auth token in cookies\n        const authToken = cookieStore.get('authToken')?.value;\n        const idToken = cookieStore.get('idToken')?.value;\n        // Check for Cognito cookies\n        const lastAuthUser = cookieStore.get('CognitoIdentityServiceProvider.1o5v84mrgn4gt87khtr179uc5b.LastAuthUser')?.value;\n        let cognitoIdToken = null;\n        if (lastAuthUser) {\n            cognitoIdToken = cookieStore.get(`CognitoIdentityServiceProvider.1o5v84mrgn4gt87khtr179uc5b.${lastAuthUser}.idToken`)?.value;\n        }\n        // Extract token from Authorization header if present in request\n        let headerToken = null;\n        if (request && request.headers) {\n            const authHeader = request.headers.get('Authorization');\n            if (authHeader && authHeader.startsWith('Bearer ')) {\n                headerToken = authHeader.substring(7);\n            }\n        }\n        // Get tenantId from cookies\n        const tenantId = cookieStore.get('tenantId')?.value || cookieStore.get('businessid')?.value;\n        // Check if we have any valid auth token\n        const hasAuth = Boolean(authToken || idToken || cognitoIdToken || headerToken);\n        // Get user ID if available\n        let userId = cookieStore.get('userId')?.value;\n        // For logging purposes (avoid sensitive data)\n        log.debug('Auth data collected', {\n            hasAuthToken: Boolean(authToken),\n            hasIdToken: Boolean(idToken),\n            hasCognitoIdToken: Boolean(cognitoIdToken),\n            hasHeaderToken: Boolean(headerToken),\n            hasTenantId: Boolean(tenantId),\n            hasUserId: Boolean(userId)\n        });\n        return {\n            // Auth status\n            isAuthenticated: hasAuth,\n            // Tokens\n            authToken: authToken || headerToken,\n            idToken: idToken || cognitoIdToken || headerToken,\n            // User info\n            userId,\n            tenantId,\n            // Raw tokens for specific needs\n            cognitoIdToken,\n            headerToken\n        };\n    } catch (error) {\n        log.error('Error getting auth data:', {\n            error: error.message\n        });\n        // Return safe defaults\n        return {\n            isAuthenticated: false,\n            authToken: null,\n            idToken: null,\n            userId: null,\n            tenantId: null,\n            cognitoIdToken: null,\n            headerToken: null\n        };\n    }\n}\n/**\n * Check if a user is authenticated with valid session\n * @param {Request} request - The incoming request (optional)\n * @returns {boolean} Whether the user is authenticated\n */ async function isAuthenticated(request = null) {\n    const auth = await getAuth(request);\n    return auth.isAuthenticated;\n}\n/**\n * Get the current tenant ID from cookies or request\n * @param {Request} request - The incoming request (optional)\n * @returns {string|null} Tenant ID if available\n */ async function getTenantId(request = null) {\n    const auth = await getAuth(request);\n    return auth.tenantId;\n}\n/**\n * Get the user ID from the current session\n * @param {Request} request - The incoming request (optional)\n * @returns {string|null} User ID if available\n */ async function getUserId(request = null) {\n    const auth = await getAuth(request);\n    return auth.userId;\n}\n/**\n * Get the current authenticated session\n * @returns {Promise<Object>} Session object or null\n */ const getAuthSession = async ()=>{\n    try {\n        const session = await (0,aws_amplify_auth__WEBPACK_IMPORTED_MODULE_2__.fetchAuthSession)();\n        if (!session) {\n            return {\n                user: null,\n                authenticated: false\n            };\n        }\n        const tokens = session.tokens;\n        if (!tokens || !tokens.idToken) {\n            return {\n                user: null,\n                authenticated: false\n            };\n        }\n        // Parse the user info from the ID token\n        const idToken = tokens.idToken.toString();\n        const payload = JSON.parse(Buffer.from(idToken.split('.')[1], 'base64').toString());\n        const user = {\n            id: payload.sub,\n            email: payload.email,\n            name: payload.name,\n            tenantId: payload['custom:businessid'] || payload['custom:tenantId']\n        };\n        return {\n            user,\n            authenticated: true,\n            accessToken: tokens.accessToken.toString(),\n            idToken\n        };\n    } catch (error) {\n        log.error('Failed to get auth session:', error);\n        return {\n            user: null,\n            authenticated: false\n        };\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    getAuthSession\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/auth-helpers.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/db-config.js":
/*!********************************!*\
  !*** ./src/utils/db-config.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDbPool: () => (/* binding */ createDbPool),\n/* harmony export */   getDbConfigFromEnv: () => (/* binding */ getDbConfigFromEnv),\n/* harmony export */   testDbConnection: () => (/* binding */ testDbConnection)\n/* harmony export */ });\n/* harmony import */ var _serverLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/**\n * Database configuration utilities for all services\n * Provides consistent connection settings with AWS RDS\n */ \n// Create logger for this module\nconst logger = (0,_serverLogger__WEBPACK_IMPORTED_MODULE_0__.createServerLogger)('db-config');\n// Connection settings optimized for AWS RDS\nconst DB_DEFAULTS = {\n    port: 5432,\n    database: 'dott_main',\n    // Connection settings\n    connectionTimeoutMillis: 8000,\n    statement_timeout: 15000,\n    max: 1,\n    idleTimeoutMillis: 3000\n};\n/**\n * Get database configuration from environment variables\n * This ensures consistent settings across all endpoints\n * @returns {object} Database configuration\n */ function getDbConfigFromEnv() {\n    logger.info('Using AWS RDS database connection');\n    // Check if SSL should be disabled\n    const useSSL = process.env.DB_USE_SSL !== 'false';\n    logger.info(`SSL connections ${useSSL ? 'enabled' : 'disabled'}`);\n    // Base configuration using environment variables with fallbacks\n    const config = {\n        user: process.env.RDS_USERNAME || process.env.DB_USER || process.env.DJANGO_DB_USER || 'dott_admin',\n        password: process.env.RDS_PASSWORD || process.env.DB_PASSWORD || process.env.DJANGO_DB_PASSWORD || 'RRfXU6uPPUbBEg1JqGTJ',\n        host: process.env.RDS_HOSTNAME || process.env.DB_HOST || process.env.DJANGO_DB_HOST || 'dott-dev.c12qgo6m085e.us-east-1.rds.amazonaws.com',\n        port: parseInt(process.env.RDS_PORT || process.env.DB_PORT || process.env.DJANGO_DB_PORT || DB_DEFAULTS.port, 10),\n        database: process.env.RDS_DB_NAME || process.env.DB_NAME || process.env.DJANGO_DB_NAME || 'dott_main',\n        // Connection settings\n        connectionTimeoutMillis: DB_DEFAULTS.connectionTimeoutMillis,\n        statement_timeout: DB_DEFAULTS.statement_timeout,\n        max: DB_DEFAULTS.max,\n        idleTimeoutMillis: DB_DEFAULTS.idleTimeoutMillis\n    };\n    // Log connection details (without password)\n    logger.info('Database connection details:', {\n        host: config.host,\n        database: config.database,\n        user: config.user,\n        port: config.port\n    });\n    // Only add SSL if enabled\n    if (useSSL) {\n        config.ssl = {\n            rejectUnauthorized: false,\n            ca: process.env.SSL_CERT_PATH || undefined\n        };\n        // Log SSL configuration\n        logger.info('SSL configuration enabled with rejectUnauthorized: false');\n    }\n    return config;\n}\n/**\n * Create a database pool with proper error handlers\n * @returns {Pool} Database connection pool\n */ async function createDbPool() {\n    // Dynamically import pg to avoid server/client issues\n    const { Pool } = __webpack_require__(/*! pg */ \"pg\");\n    const config = getDbConfigFromEnv();\n    try {\n        logger.info('[DB] Creating database pool with config:', {\n            host: config.host,\n            port: config.port,\n            database: config.database,\n            user: config.user,\n            ssl: config.ssl ? 'enabled' : 'disabled'\n        });\n        const pool = new Pool(config);\n        // Add error handler to prevent uncaught exceptions\n        pool.on('error', (err)=>{\n            // Log full error details for debugging\n            logger.error('[DB] Pool error event:', {\n                message: err.message,\n                code: err.code,\n                severity: err.severity,\n                detail: err.detail,\n                hint: err.hint,\n                where: err.where,\n                stack: err.stack\n            });\n        // Don't crash on connection errors\n        });\n        return pool;\n    } catch (error) {\n        logger.error('[DB] Error creating database pool:', {\n            message: error.message,\n            code: error.code,\n            severity: error.severity,\n            detail: error.detail,\n            hint: error.hint,\n            where: error.where,\n            stack: error.stack\n        });\n        throw error; // Rethrow original error for proper handling\n    }\n}\n/**\n * Test database connection and return status\n * @returns {object} Connection test result\n */ async function testDbConnection() {\n    let pool = null;\n    try {\n        pool = await createDbPool();\n        const result = await pool.query('SELECT 1 as connection_test');\n        const config = getDbConfigFromEnv();\n        return {\n            success: true,\n            connected: result.rows[0].connection_test === 1,\n            // Only include non-sensitive configuration details\n            config: {\n                host: config.host,\n                database: config.database,\n                port: config.port,\n                ssl: config.ssl ? 'enabled' : 'disabled'\n            },\n            database: 'aws_rds'\n        };\n    } catch (error) {\n        const config = getDbConfigFromEnv();\n        return {\n            success: false,\n            error: error.message,\n            code: error.code,\n            // Only include non-sensitive configuration details\n            config: {\n                host: config.host,\n                database: config.database,\n                port: config.port,\n                ssl: config.ssl ? 'enabled' : 'disabled'\n            },\n            database: 'aws_rds'\n        };\n    } finally{\n        if (pool) await pool.end();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVM7WUFDVFgsT0FBT0EsTUFBTUMsT0FBTztZQUNwQkMsTUFBTUYsTUFBTUUsSUFBSTtZQUNoQixtREFBbUQ7WUFDbkRqQyxRQUFRO2dCQUNOUyxNQUFNVCxPQUFPUyxJQUFJO2dCQUNqQnBCLFVBQVVXLE9BQU9YLFFBQVE7Z0JBQ3pCRCxNQUFNWSxPQUFPWixJQUFJO2dCQUNqQmdDLEtBQUtwQixPQUFPb0IsR0FBRyxHQUFHLFlBQVk7WUFDaEM7WUFDQS9CLFVBQVU7UUFDWjtJQUNGLFNBQVU7UUFDUixJQUFJdUMsTUFBTSxNQUFNQSxLQUFLa0IsR0FBRztJQUMxQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMva3VvbGRlbmcvcHJvamVjdHgvZnJvbnRlbmQvcHlmYWN0b3JfbmV4dC9zcmMvdXRpbHMvZGItY29uZmlnLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRGF0YWJhc2UgY29uZmlndXJhdGlvbiB1dGlsaXRpZXMgZm9yIGFsbCBzZXJ2aWNlc1xuICogUHJvdmlkZXMgY29uc2lzdGVudCBjb25uZWN0aW9uIHNldHRpbmdzIHdpdGggQVdTIFJEU1xuICovXG5cbmltcG9ydCB7IGNyZWF0ZVNlcnZlckxvZ2dlciB9IGZyb20gJy4vc2VydmVyTG9nZ2VyJztcblxuLy8gQ3JlYXRlIGxvZ2dlciBmb3IgdGhpcyBtb2R1bGVcbmNvbnN0IGxvZ2dlciA9IGNyZWF0ZVNlcnZlckxvZ2dlcignZGItY29uZmlnJyk7XG5cbi8vIENvbm5lY3Rpb24gc2V0dGluZ3Mgb3B0aW1pemVkIGZvciBBV1MgUkRTXG5jb25zdCBEQl9ERUZBVUxUUyA9IHtcbiAgcG9ydDogNTQzMixcbiAgZGF0YWJhc2U6ICdkb3R0X21haW4nLFxuICAvLyBDb25uZWN0aW9uIHNldHRpbmdzXG4gIGNvbm5lY3Rpb25UaW1lb3V0TWlsbGlzOiA4MDAwLFxuICBzdGF0ZW1lbnRfdGltZW91dDogMTUwMDAsXG4gIG1heDogMSxcbiAgaWRsZVRpbWVvdXRNaWxsaXM6IDMwMDBcbn07XG5cbi8qKlxuICogR2V0IGRhdGFiYXNlIGNvbmZpZ3VyYXRpb24gZnJvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXNcbiAqIFRoaXMgZW5zdXJlcyBjb25zaXN0ZW50IHNldHRpbmdzIGFjcm9zcyBhbGwgZW5kcG9pbnRzXG4gKiBAcmV0dXJucyB7b2JqZWN0fSBEYXRhYmFzZSBjb25maWd1cmF0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREYkNvbmZpZ0Zyb21FbnYoKSB7XG4gIGxvZ2dlci5pbmZvKCdVc2luZyBBV1MgUkRTIGRhdGFiYXNlIGNvbm5lY3Rpb24nKTtcbiAgXG4gIC8vIENoZWNrIGlmIFNTTCBzaG91bGQgYmUgZGlzYWJsZWRcbiAgY29uc3QgdXNlU1NMID0gcHJvY2Vzcy5lbnYuREJfVVNFX1NTTCAhPT0gJ2ZhbHNlJztcbiAgbG9nZ2VyLmluZm8oYFNTTCBjb25uZWN0aW9ucyAke3VzZVNTTCA/ICdlbmFibGVkJyA6ICdkaXNhYmxlZCd9YCk7XG4gIFxuICAvLyBCYXNlIGNvbmZpZ3VyYXRpb24gdXNpbmcgZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggZmFsbGJhY2tzXG4gIGNvbnN0IGNvbmZpZyA9IHtcbiAgICB1c2VyOiBwcm9jZXNzLmVudi5SRFNfVVNFUk5BTUUgfHwgcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCBwcm9jZXNzLmVudi5ESkFOR09fREJfVVNFUiB8fCAnZG90dF9hZG1pbicsXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlJEU19QQVNTV09SRCB8fCBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCB8fCBwcm9jZXNzLmVudi5ESkFOR09fREJfUEFTU1dPUkQgfHwgJ1JSZlhVNnVQUFViQkVnMUpxR1RKJyxcbiAgICBob3N0OiBwcm9jZXNzLmVudi5SRFNfSE9TVE5BTUUgfHwgcHJvY2Vzcy5lbnYuREJfSE9TVCB8fCBwcm9jZXNzLmVudi5ESkFOR09fREJfSE9TVCB8fCAnZG90dC1kZXYuYzEycWdvNm0wODVlLnVzLWVhc3QtMS5yZHMuYW1hem9uYXdzLmNvbScsXG4gICAgcG9ydDogcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkRTX1BPUlQgfHwgcHJvY2Vzcy5lbnYuREJfUE9SVCB8fCBwcm9jZXNzLmVudi5ESkFOR09fREJfUE9SVCB8fCBEQl9ERUZBVUxUUy5wb3J0LCAxMCksXG4gICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LlJEU19EQl9OQU1FIHx8IHByb2Nlc3MuZW52LkRCX05BTUUgfHwgcHJvY2Vzcy5lbnYuREpBTkdPX0RCX05BTUUgfHwgJ2RvdHRfbWFpbicsXG4gICAgLy8gQ29ubmVjdGlvbiBzZXR0aW5nc1xuICAgIGNvbm5lY3Rpb25UaW1lb3V0TWlsbGlzOiBEQl9ERUZBVUxUUy5jb25uZWN0aW9uVGltZW91dE1pbGxpcyxcbiAgICBzdGF0ZW1lbnRfdGltZW91dDogREJfREVGQVVMVFMuc3RhdGVtZW50X3RpbWVvdXQsXG4gICAgbWF4OiBEQl9ERUZBVUxUUy5tYXgsXG4gICAgaWRsZVRpbWVvdXRNaWxsaXM6IERCX0RFRkFVTFRTLmlkbGVUaW1lb3V0TWlsbGlzXG4gIH07XG4gIFxuICAvLyBMb2cgY29ubmVjdGlvbiBkZXRhaWxzICh3aXRob3V0IHBhc3N3b3JkKVxuICBsb2dnZXIuaW5mbygnRGF0YWJhc2UgY29ubmVjdGlvbiBkZXRhaWxzOicsIHsgXG4gICAgaG9zdDogY29uZmlnLmhvc3QsIFxuICAgIGRhdGFiYXNlOiBjb25maWcuZGF0YWJhc2UsIFxuICAgIHVzZXI6IGNvbmZpZy51c2VyLFxuICAgIHBvcnQ6IGNvbmZpZy5wb3J0XG4gIH0pO1xuICBcbiAgLy8gT25seSBhZGQgU1NMIGlmIGVuYWJsZWRcbiAgaWYgKHVzZVNTTCkge1xuICAgIGNvbmZpZy5zc2wgPSB7XG4gICAgICByZWplY3RVbmF1dGhvcml6ZWQ6IGZhbHNlLCAvLyBBbGxvdyBzZWxmLXNpZ25lZCBjZXJ0c1xuICAgICAgY2E6IHByb2Nlc3MuZW52LlNTTF9DRVJUX1BBVEggfHwgdW5kZWZpbmVkLCAvLyBVc2UgY3VzdG9tIENBIGlmIHByb3ZpZGVkXG4gICAgfTtcbiAgICBcbiAgICAvLyBMb2cgU1NMIGNvbmZpZ3VyYXRpb25cbiAgICBsb2dnZXIuaW5mbygnU1NMIGNvbmZpZ3VyYXRpb24gZW5hYmxlZCB3aXRoIHJlamVjdFVuYXV0aG9yaXplZDogZmFsc2UnKTtcbiAgfVxuICBcbiAgcmV0dXJuIGNvbmZpZztcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBkYXRhYmFzZSBwb29sIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsZXJzXG4gKiBAcmV0dXJucyB7UG9vbH0gRGF0YWJhc2UgY29ubmVjdGlvbiBwb29sXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVEYlBvb2woKSB7XG4gIC8vIER5bmFtaWNhbGx5IGltcG9ydCBwZyB0byBhdm9pZCBzZXJ2ZXIvY2xpZW50IGlzc3Vlc1xuICBjb25zdCB7IFBvb2wgfSA9IHJlcXVpcmUoJ3BnJyk7XG4gIGNvbnN0IGNvbmZpZyA9IGdldERiQ29uZmlnRnJvbUVudigpO1xuICBcbiAgdHJ5IHtcbiAgICBsb2dnZXIuaW5mbygnW0RCXSBDcmVhdGluZyBkYXRhYmFzZSBwb29sIHdpdGggY29uZmlnOicsIHtcbiAgICAgIGhvc3Q6IGNvbmZpZy5ob3N0LFxuICAgICAgcG9ydDogY29uZmlnLnBvcnQsXG4gICAgICBkYXRhYmFzZTogY29uZmlnLmRhdGFiYXNlLFxuICAgICAgdXNlcjogY29uZmlnLnVzZXIsXG4gICAgICBzc2w6IGNvbmZpZy5zc2wgPyAnZW5hYmxlZCcgOiAnZGlzYWJsZWQnXG4gICAgfSk7XG4gICAgXG4gICAgY29uc3QgcG9vbCA9IG5ldyBQb29sKGNvbmZpZyk7XG4gICAgXG4gICAgLy8gQWRkIGVycm9yIGhhbmRsZXIgdG8gcHJldmVudCB1bmNhdWdodCBleGNlcHRpb25zXG4gICAgcG9vbC5vbignZXJyb3InLCAoZXJyKSA9PiB7XG4gICAgICAvLyBMb2cgZnVsbCBlcnJvciBkZXRhaWxzIGZvciBkZWJ1Z2dpbmdcbiAgICAgIGxvZ2dlci5lcnJvcignW0RCXSBQb29sIGVycm9yIGV2ZW50OicsIHtcbiAgICAgICAgbWVzc2FnZTogZXJyLm1lc3NhZ2UsXG4gICAgICAgIGNvZGU6IGVyci5jb2RlLFxuICAgICAgICBzZXZlcml0eTogZXJyLnNldmVyaXR5LFxuICAgICAgICBkZXRhaWw6IGVyci5kZXRhaWwsXG4gICAgICAgIGhpbnQ6IGVyci5oaW50LFxuICAgICAgICB3aGVyZTogZXJyLndoZXJlLFxuICAgICAgICBzdGFjazogZXJyLnN0YWNrXG4gICAgICB9KTtcbiAgICAgIC8vIERvbid0IGNyYXNoIG9uIGNvbm5lY3Rpb24gZXJyb3JzXG4gICAgfSk7XG4gICAgXG4gICAgcmV0dXJuIHBvb2w7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKCdbREJdIEVycm9yIGNyZWF0aW5nIGRhdGFiYXNlIHBvb2w6Jywge1xuICAgICAgbWVzc2FnZTogZXJyb3IubWVzc2FnZSxcbiAgICAgIGNvZGU6IGVycm9yLmNvZGUsXG4gICAgICBzZXZlcml0eTogZXJyb3Iuc2V2ZXJpdHksXG4gICAgICBkZXRhaWw6IGVycm9yLmRldGFpbCxcbiAgICAgIGhpbnQ6IGVycm9yLmhpbnQsXG4gICAgICB3aGVyZTogZXJyb3Iud2hlcmUsXG4gICAgICBzdGFjazogZXJyb3Iuc3RhY2tcbiAgICB9KTtcbiAgICB0aHJvdyBlcnJvcjsgLy8gUmV0aHJvdyBvcmlnaW5hbCBlcnJvciBmb3IgcHJvcGVyIGhhbmRsaW5nXG4gIH1cbn1cblxuLyoqXG4gKiBUZXN0IGRhdGFiYXNlIGNvbm5lY3Rpb24gYW5kIHJldHVybiBzdGF0dXNcbiAqIEByZXR1cm5zIHtvYmplY3R9IENvbm5lY3Rpb24gdGVzdCByZXN1bHRcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHRlc3REYkNvbm5lY3Rpb24oKSB7XG4gIGxldCBwb29sID0gbnVsbDtcbiAgXG4gIHRyeSB7XG4gICAgcG9vbCA9IGF3YWl0IGNyZWF0ZURiUG9vbCgpO1xuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBvb2wucXVlcnkoJ1NFTEVDVCAxIGFzIGNvbm5lY3Rpb25fdGVzdCcpO1xuICAgIGNvbnN0IGNvbmZpZyA9IGdldERiQ29uZmlnRnJvbUVudigpO1xuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgY29ubmVjdGVkOiByZXN1bHQucm93c1swXS5jb25uZWN0aW9uX3Rlc3QgPT09IDEsXG4gICAgICAvLyBPbmx5IGluY2x1ZGUgbm9uLXNlbnNpdGl2ZSBjb25maWd1cmF0aW9uIGRldGFpbHNcbiAgICAgIGNvbmZpZzoge1xuICAgICAgICBob3N0OiBjb25maWcuaG9zdCxcbiAgICAgICAgZGF0YWJhc2U6IGNvbmZpZy5kYXRhYmFzZSxcbiAgICAgICAgcG9ydDogY29uZmlnLnBvcnQsXG4gICAgICAgIHNzbDogY29uZmlnLnNzbCA/ICdlbmFibGVkJyA6ICdkaXNhYmxlZCdcbiAgICAgIH0sXG4gICAgICBkYXRhYmFzZTogJ2F3c19yZHMnXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBjb25maWcgPSBnZXREYkNvbmZpZ0Zyb21FbnYoKTtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogZXJyb3IubWVzc2FnZSxcbiAgICAgIGNvZGU6IGVycm9yLmNvZGUsXG4gICAgICAvLyBPbmx5IGluY2x1ZGUgbm9uLXNlbnNpdGl2ZSBjb25maWd1cmF0aW9uIGRldGFpbHNcbiAgICAgIGNvbmZpZzoge1xuICAgICAgICBob3N0OiBjb25maWcuaG9zdCxcbiAgICAgICAgZGF0YWJhc2U6IGNvbmZpZy5kYXRhYmFzZSxcbiAgICAgICAgcG9ydDogY29uZmlnLnBvcnQsXG4gICAgICAgIHNzbDogY29uZmlnLnNzbCA/ICdlbmFibGVkJyA6ICdkaXNhYmxlZCdcbiAgICAgIH0sXG4gICAgICBkYXRhYmFzZTogJ2F3c19yZHMnXG4gICAgfTtcbiAgfSBmaW5hbGx5IHtcbiAgICBpZiAocG9vbCkgYXdhaXQgcG9vbC5lbmQoKTtcbiAgfVxufSAiXSwibmFtZXMiOlsiY3JlYXRlU2VydmVyTG9nZ2VyIiwibG9nZ2VyIiwiREJfREVGQVVMVFMiLCJwb3J0IiwiZGF0YWJhc2UiLCJjb25uZWN0aW9uVGltZW91dE1pbGxpcyIsInN0YXRlbWVudF90aW1lb3V0IiwibWF4IiwiaWRsZVRpbWVvdXRNaWxsaXMiLCJnZXREYkNvbmZpZ0Zyb21FbnYiLCJpbmZvIiwidXNlU1NMIiwicHJvY2VzcyIsImVudiIsIkRCX1VTRV9TU0wiLCJjb25maWciLCJ1c2VyIiwiUkRTX1VTRVJOQU1FIiwiREJfVVNFUiIsIkRKQU5HT19EQl9VU0VSIiwicGFzc3dvcmQiLCJSRFNfUEFTU1dPUkQiLCJEQl9QQVNTV09SRCIsIkRKQU5HT19EQl9QQVNTV09SRCIsImhvc3QiLCJSRFNfSE9TVE5BTUUiLCJEQl9IT1NUIiwiREpBTkdPX0RCX0hPU1QiLCJwYXJzZUludCIsIlJEU19QT1JUIiwiREJfUE9SVCIsIkRKQU5HT19EQl9QT1JUIiwiUkRTX0RCX05BTUUiLCJEQl9OQU1FIiwiREpBTkdPX0RCX05BTUUiLCJzc2wiLCJyZWplY3RVbmF1dGhvcml6ZWQiLCJjYSIsIlNTTF9DRVJUX1BBVEgiLCJ1bmRlZmluZWQiLCJjcmVhdGVEYlBvb2wiLCJQb29sIiwicmVxdWlyZSIsInBvb2wiLCJvbiIsImVyciIsImVycm9yIiwibWVzc2FnZSIsImNvZGUiLCJzZXZlcml0eSIsImRldGFpbCIsImhpbnQiLCJ3aGVyZSIsInN0YWNrIiwidGVzdERiQ29ubmVjdGlvbiIsInJlc3VsdCIsInF1ZXJ5Iiwic3VjY2VzcyIsImNvbm5lY3RlZCIsInJvd3MiLCJjb25uZWN0aW9uX3Rlc3QiLCJlbmQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/db-config.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/logger-stub.js":
/*!**********************************!*\
  !*** ./src/utils/logger-stub.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   info: () => (/* binding */ info),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n// This is a universal logger implementation that works in both client and server environments\n// without dependencies on external logging libraries\n// Simple logger implementation with console fallbacks\nconst createLogger = (namespace)=>{\n    // Safe log function that handles errors and circular references\n    const safeLog = (level, ...args)=>{\n        try {\n            // Convert complex objects to safe strings (avoiding circular references)\n            const safeArgs = args.map((arg)=>{\n                if (typeof arg === 'object' && arg !== null) {\n                    try {\n                        return JSON.stringify(arg);\n                    } catch (e) {\n                        return `[Complex object: ${Object.keys(arg).join(', ')}]`;\n                    }\n                }\n                return arg;\n            });\n            // Format: [namespace] message args...\n            console[level](`[${namespace}]`, ...safeArgs);\n        } catch (e) {\n            // Last-resort fallback\n            try {\n                console.log(`[ERROR] Logger failed:`, e.message);\n            } catch  {\n            // Nothing we can do at this point\n            }\n        }\n    };\n    // Create the logger object with all standard methods\n    return {\n        debug: (...args)=>safeLog('log', ...args),\n        info: (...args)=>safeLog('info', ...args),\n        warn: (...args)=>safeLog('warn', ...args),\n        error: (...args)=>safeLog('error', ...args),\n        log: (...args)=>safeLog('log', ...args)\n    };\n};\n// Create a default logger instance\nconst defaultLogger = createLogger('pyfactor');\n// Export the logger object\nconst logger = defaultLogger;\n// Also export individual functions\nconst { debug, info, warn, error, log } = defaultLogger;\n// For CommonJS compatibility\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    logger,\n    debug,\n    info,\n    warn,\n    error,\n    log,\n    createLogger\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdXRpbHMvbG9nZ2VyLXN0dWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLDhGQUE4RjtBQUM5RixxREFBcUQ7QUFFckQsc0RBQXNEO0FBQ3RELE1BQU1BLGVBQWUsQ0FBQ0M7SUFDcEIsZ0VBQWdFO0lBQ2hFLE1BQU1DLFVBQVUsQ0FBQ0MsT0FBTyxHQUFHQztRQUN6QixJQUFJO1lBQ0YseUVBQXlFO1lBQ3pFLE1BQU1DLFdBQVdELEtBQUtFLEdBQUcsQ0FBQ0MsQ0FBQUE7Z0JBQ3hCLElBQUksT0FBT0EsUUFBUSxZQUFZQSxRQUFRLE1BQU07b0JBQzNDLElBQUk7d0JBQ0YsT0FBT0MsS0FBS0MsU0FBUyxDQUFDRjtvQkFDeEIsRUFBRSxPQUFPRyxHQUFHO3dCQUNWLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRUMsT0FBT0MsSUFBSSxDQUFDTCxLQUFLTSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQzNEO2dCQUNGO2dCQUNBLE9BQU9OO1lBQ1Q7WUFFQSxzQ0FBc0M7WUFDdENPLE9BQU8sQ0FBQ1gsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFRixVQUFVLENBQUMsQ0FBQyxLQUFLSTtRQUN0QyxFQUFFLE9BQU9LLEdBQUc7WUFDVix1QkFBdUI7WUFDdkIsSUFBSTtnQkFDRkksUUFBUUMsR0FBRyxDQUFDLENBQUMsc0JBQXNCLENBQUMsRUFBRUwsRUFBRU0sT0FBTztZQUNqRCxFQUFFLE9BQU07WUFDTixrQ0FBa0M7WUFDcEM7UUFDRjtJQUNGO0lBRUEscURBQXFEO0lBQ3JELE9BQU87UUFDTEMsT0FBTyxDQUFDLEdBQUdiLE9BQVNGLFFBQVEsVUFBVUU7UUFDdENjLE1BQU0sQ0FBQyxHQUFHZCxPQUFTRixRQUFRLFdBQVdFO1FBQ3RDZSxNQUFNLENBQUMsR0FBR2YsT0FBU0YsUUFBUSxXQUFXRTtRQUN0Q2dCLE9BQU8sQ0FBQyxHQUFHaEIsT0FBU0YsUUFBUSxZQUFZRTtRQUN4Q1csS0FBSyxDQUFDLEdBQUdYLE9BQVNGLFFBQVEsVUFBVUU7SUFDdEM7QUFDRjtBQUVBLG1DQUFtQztBQUNuQyxNQUFNaUIsZ0JBQWdCckIsYUFBYTtBQUVuQywyQkFBMkI7QUFDcEIsTUFBTXNCLFNBQVNELGNBQWM7QUFFcEMsbUNBQW1DO0FBQzVCLE1BQU0sRUFBRUosS0FBSyxFQUFFQyxJQUFJLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFTCxHQUFHLEVBQUUsR0FBR00sY0FBYztBQUUvRCw2QkFBNkI7QUFDN0IsaUVBQWU7SUFDYkM7SUFDQUw7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUw7SUFDQWY7QUFDRixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9rdW9sZGVuZy9wcm9qZWN0eC9mcm9udGVuZC9weWZhY3Rvcl9uZXh0L3NyYy91dGlscy9sb2dnZXItc3R1Yi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIGEgdW5pdmVyc2FsIGxvZ2dlciBpbXBsZW1lbnRhdGlvbiB0aGF0IHdvcmtzIGluIGJvdGggY2xpZW50IGFuZCBzZXJ2ZXIgZW52aXJvbm1lbnRzXG4vLyB3aXRob3V0IGRlcGVuZGVuY2llcyBvbiBleHRlcm5hbCBsb2dnaW5nIGxpYnJhcmllc1xuXG4vLyBTaW1wbGUgbG9nZ2VyIGltcGxlbWVudGF0aW9uIHdpdGggY29uc29sZSBmYWxsYmFja3NcbmNvbnN0IGNyZWF0ZUxvZ2dlciA9IChuYW1lc3BhY2UpID0+IHtcbiAgLy8gU2FmZSBsb2cgZnVuY3Rpb24gdGhhdCBoYW5kbGVzIGVycm9ycyBhbmQgY2lyY3VsYXIgcmVmZXJlbmNlc1xuICBjb25zdCBzYWZlTG9nID0gKGxldmVsLCAuLi5hcmdzKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENvbnZlcnQgY29tcGxleCBvYmplY3RzIHRvIHNhZmUgc3RyaW5ncyAoYXZvaWRpbmcgY2lyY3VsYXIgcmVmZXJlbmNlcylcbiAgICAgIGNvbnN0IHNhZmVBcmdzID0gYXJncy5tYXAoYXJnID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIGFyZyAhPT0gbnVsbCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYXJnKTtcbiAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gYFtDb21wbGV4IG9iamVjdDogJHtPYmplY3Qua2V5cyhhcmcpLmpvaW4oJywgJyl9XWA7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhcmc7XG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gRm9ybWF0OiBbbmFtZXNwYWNlXSBtZXNzYWdlIGFyZ3MuLi5cbiAgICAgIGNvbnNvbGVbbGV2ZWxdKGBbJHtuYW1lc3BhY2V9XWAsIC4uLnNhZmVBcmdzKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAvLyBMYXN0LXJlc29ydCBmYWxsYmFja1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc29sZS5sb2coYFtFUlJPUl0gTG9nZ2VyIGZhaWxlZDpgLCBlLm1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCB7XG4gICAgICAgIC8vIE5vdGhpbmcgd2UgY2FuIGRvIGF0IHRoaXMgcG9pbnRcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLy8gQ3JlYXRlIHRoZSBsb2dnZXIgb2JqZWN0IHdpdGggYWxsIHN0YW5kYXJkIG1ldGhvZHNcbiAgcmV0dXJuIHtcbiAgICBkZWJ1ZzogKC4uLmFyZ3MpID0+IHNhZmVMb2coJ2xvZycsIC4uLmFyZ3MpLFxuICAgIGluZm86ICguLi5hcmdzKSA9PiBzYWZlTG9nKCdpbmZvJywgLi4uYXJncyksXG4gICAgd2FybjogKC4uLmFyZ3MpID0+IHNhZmVMb2coJ3dhcm4nLCAuLi5hcmdzKSxcbiAgICBlcnJvcjogKC4uLmFyZ3MpID0+IHNhZmVMb2coJ2Vycm9yJywgLi4uYXJncyksXG4gICAgbG9nOiAoLi4uYXJncykgPT4gc2FmZUxvZygnbG9nJywgLi4uYXJncylcbiAgfTtcbn07XG5cbi8vIENyZWF0ZSBhIGRlZmF1bHQgbG9nZ2VyIGluc3RhbmNlXG5jb25zdCBkZWZhdWx0TG9nZ2VyID0gY3JlYXRlTG9nZ2VyKCdweWZhY3RvcicpO1xuXG4vLyBFeHBvcnQgdGhlIGxvZ2dlciBvYmplY3RcbmV4cG9ydCBjb25zdCBsb2dnZXIgPSBkZWZhdWx0TG9nZ2VyO1xuXG4vLyBBbHNvIGV4cG9ydCBpbmRpdmlkdWFsIGZ1bmN0aW9uc1xuZXhwb3J0IGNvbnN0IHsgZGVidWcsIGluZm8sIHdhcm4sIGVycm9yLCBsb2cgfSA9IGRlZmF1bHRMb2dnZXI7XG5cbi8vIEZvciBDb21tb25KUyBjb21wYXRpYmlsaXR5XG5leHBvcnQgZGVmYXVsdCB7XG4gIGxvZ2dlcixcbiAgZGVidWcsXG4gIGluZm8sXG4gIHdhcm4sXG4gIGVycm9yLFxuICBsb2csXG4gIGNyZWF0ZUxvZ2dlclxufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVMb2dnZXIiLCJuYW1lc3BhY2UiLCJzYWZlTG9nIiwibGV2ZWwiLCJhcmdzIiwic2FmZUFyZ3MiLCJtYXAiLCJhcmciLCJKU09OIiwic3RyaW5naWZ5IiwiZSIsIk9iamVjdCIsImtleXMiLCJqb2luIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJkZWJ1ZyIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJkZWZhdWx0TG9nZ2VyIiwibG9nZ2VyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/logger-stub.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/serverLogger.js":
/*!***********************************!*\
  !*** ./src/utils/serverLogger.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContextualServerLogger: () => (/* binding */ createContextualServerLogger),\n/* harmony export */   createServerLogger: () => (/* binding */ createServerLogger),\n/* harmony export */   debug: () => (/* binding */ debug),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   error: () => (/* binding */ error),\n/* harmony export */   info: () => (/* binding */ info),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   serverLogger: () => (/* binding */ serverLogger),\n/* harmony export */   warn: () => (/* binding */ warn)\n/* harmony export */ });\n// Server-side logger implementation\n// This file should be imported in API routes instead of the client-side logger\n/**\n * Server-side logger utility\n * \n * This logger is specifically designed for server components and API routes\n * where the client-side logger with browser-specific APIs can't be used.\n */ /**\n * Format log prefix to include timestamp and context\n */ function formatPrefix(level, context = {}) {\n    const timestamp = new Date().toISOString();\n    const tenantId = context.tenantId || 'no-tenant';\n    return `[${timestamp}] [SERVER:${level}] [${tenantId}]`;\n}\n/**\n * Server logger instance with standard logging methods\n */ const serverLogger = {\n    /**\n   * Log at DEBUG level\n   */ debug: (message, data, context = {})=>{\n        const prefix = formatPrefix('DEBUG', context);\n        if (data !== undefined) {\n            console.debug(`${prefix} ${message}`, data);\n        } else {\n            console.debug(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at INFO level\n   */ info: (message, data, context = {})=>{\n        const prefix = formatPrefix('INFO', context);\n        if (data !== undefined) {\n            console.info(`${prefix} ${message}`, data);\n        } else {\n            console.info(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at WARN level\n   */ warn: (message, data, context = {})=>{\n        const prefix = formatPrefix('WARN', context);\n        if (data !== undefined) {\n            console.warn(`${prefix} ${message}`, data);\n        } else {\n            console.warn(`${prefix} ${message}`);\n        }\n    },\n    /**\n   * Log at ERROR level\n   */ error: (message, data, context = {})=>{\n        const prefix = formatPrefix('ERROR', context);\n        if (data !== undefined) {\n            console.error(`${prefix} ${message}`, data);\n        } else {\n            console.error(`${prefix} ${message}`);\n        }\n    }\n};\n/**\n * Create a contextualized server logger with pre-bound context\n */ function createContextualServerLogger(context = {}) {\n    return {\n        debug: (message, data)=>serverLogger.debug(message, data, context),\n        info: (message, data)=>serverLogger.info(message, data, context),\n        warn: (message, data)=>serverLogger.warn(message, data, context),\n        error: (message, data)=>serverLogger.error(message, data, context)\n    };\n}\n/**\n * Legacy function for backward compatibility with existing imports\n * Creates a logger with a namespace\n */ function createServerLogger(namespace = 'API') {\n    return {\n        debug: (message, ...args)=>serverLogger.debug(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        info: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        warn: (message, ...args)=>serverLogger.warn(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        error: (message, ...args)=>serverLogger.error(`[${namespace}] ${message}`, args.length ? args[0] : undefined),\n        log: (message, ...args)=>serverLogger.info(`[${namespace}] ${message}`, args.length ? args[0] : undefined)\n    };\n}\n// Create a default server logger instance for compatibility with existing imports\nconst logger = createServerLogger('API');\n// Export individual functions directly from serverLogger for convenience\nconst debug = serverLogger.debug;\nconst info = serverLogger.info;\nconst warn = serverLogger.warn;\nconst error = serverLogger.error;\n// For CommonJS compatibility\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    serverLogger,\n    logger,\n    debug,\n    info,\n    warn,\n    error,\n    createContextualServerLogger,\n    createServerLogger\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/serverLogger.js\n");

/***/ }),

/***/ "(rsc)/./src/utils/uuid-helpers.js":
/*!***********************************!*\
  !*** ./src/utils/uuid-helpers.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanUuid: () => (/* binding */ cleanUuid),\n/* harmony export */   extractUuid: () => (/* binding */ extractUuid),\n/* harmony export */   isUUID: () => (/* binding */ isUUID),\n/* harmony export */   validateAndRepairUuid: () => (/* binding */ validateAndRepairUuid)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/version.js\");\n/* harmony import */ var _serverLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./serverLogger */ \"(rsc)/./src/utils/serverLogger.js\");\n/**\n * UUID validation and repair utilities\n * Used across all services for consistent UUID handling\n */ \n\n// Create logger for this module\nconst logger = (0,_serverLogger__WEBPACK_IMPORTED_MODULE_0__.createServerLogger)('uuid-helpers');\n/**\n * Check if a string is a valid UUID\n * @param {string} uuid - UUID to validate\n * @param {number} version - UUID version to validate against (defaults to 4)\n * @returns {boolean} Whether the UUID is valid\n */ function isUUID(uuid, version = 4) {\n    if (!uuid) return false;\n    try {\n        return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(uuid) && (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(uuid) === version;\n    } catch (error) {\n        logger.warn(`Failed to validate UUID: ${uuid}`, {\n            error: error.message\n        });\n        return false;\n    }\n}\n/**\n * Validates a UUID and attempts to repair common issues\n * @param {string} uuid - UUID string that might need repair\n * @returns {string} Repaired UUID or original if already valid\n */ function validateAndRepairUuid(uuid) {\n    if (!uuid) return uuid;\n    // If already valid, return as is\n    if (isUUID(uuid)) {\n        return uuid;\n    }\n    let repairedUuid = uuid;\n    try {\n        // Replace underscores with hyphens (common issue)\n        if (uuid.includes('_')) {\n            repairedUuid = uuid.replace(/_/g, '-');\n            logger.info('Repaired UUID:', {\n                original: uuid,\n                repaired: repairedUuid\n            });\n            // Check if repair worked\n            if (isUUID(repairedUuid)) {\n                return repairedUuid;\n            }\n        }\n        // Check for missing hyphens in standard positions\n        if (uuid.length === 32) {\n            repairedUuid = [\n                uuid.slice(0, 8),\n                uuid.slice(8, 12),\n                uuid.slice(12, 16),\n                uuid.slice(16, 20),\n                uuid.slice(20)\n            ].join('-');\n            logger.info('Added hyphens to UUID:', {\n                original: uuid,\n                repaired: repairedUuid\n            });\n            // Check if repair worked\n            if (isUUID(repairedUuid)) {\n                return repairedUuid;\n            }\n        }\n        // If UUID is not valid even after repair attempts, log warning\n        if (!isUUID(repairedUuid)) {\n            logger.warn(`Could not repair invalid UUID: ${uuid}`);\n            // Return original to avoid data corruption\n            return uuid;\n        }\n        return repairedUuid;\n    } catch (error) {\n        logger.error(`Error repairing UUID: ${uuid}`, {\n            error: error.message\n        });\n        // Return original to avoid data corruption\n        return uuid;\n    }\n}\n/**\n * Clean a UUID by enforcing standard format\n * @param {string} uuid - UUID to clean\n * @returns {string} Cleaned UUID\n */ function cleanUuid(uuid) {\n    if (!uuid) return null;\n    try {\n        // Attempt to repair first\n        const repairedUuid = validateAndRepairUuid(uuid);\n        // Convert to lowercase\n        return repairedUuid.toLowerCase();\n    } catch (error) {\n        logger.error(`Error cleaning UUID: ${uuid}`, {\n            error: error.message\n        });\n        // Return null for invalid UUIDs\n        return null;\n    }\n}\n/**\n * Extract a valid UUID from a string that might contain other text\n * @param {string} text - Text that might contain a UUID\n * @returns {string|null} Extracted UUID or null if not found\n */ function extractUuid(text) {\n    if (!text) return null;\n    try {\n        // UUID v4 regex pattern\n        const uuidPattern = /([0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12})/i;\n        const match = text.match(uuidPattern);\n        if (match && match[1]) {\n            return match[1].toLowerCase();\n        }\n        return null;\n    } catch (error) {\n        logger.error(`Error extracting UUID from text: ${text}`, {\n            error: error.message\n        });\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/utils/uuid-helpers.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*******************************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("pg");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1","vendor-chunks/@aws-amplify+core@6.11.1","vendor-chunks/tslib@2.8.1","vendor-chunks/@aws-crypto+sha256-js@5.2.0","vendor-chunks/@aws-crypto+util@5.2.0","vendor-chunks/@smithy+util-utf8@2.3.0","vendor-chunks/@smithy+util-buffer-from@2.2.0","vendor-chunks/@smithy+is-array-buffer@2.2.0","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/../../node_modules/.pnpm/next@15.2.2_@babel+core@7.26.10_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Ftenant%2Fschema-manager%2Froute&page=%2Fapi%2Ftenant%2Fschema-manager%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftenant%2Fschema-manager%2Froute.js&appDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fkuoldeng%2Fprojectx%2Ffrontend%2Fpyfactor_next&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();