name: Deploy to Vercel

on:
  push:
    branches: [ main, master, Dott-Main, production ]
    paths:
      - 'frontend/**'
      - 'vercel.json'
      - '.github/workflows/vercel-deploy.yml'
  
  pull_request:
    branches: [ main, master, Dott-Main ]
    paths:
      - 'frontend/**'
      - 'vercel.json'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - preview

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        cache-dependency-path: frontend/pyfactor_next/pnpm-lock.yaml
        
    - name: Install pnpm
      run: npm install -g pnpm
      
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/Dott-Main' || github.ref == 'refs/heads/production') && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend/pyfactor_next
      
    - name: Build Project Artifacts
      run: vercel build ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/Dott-Main' || github.ref == 'refs/heads/production') && '--prod' || '' }} --token=${{ secrets.VERCEL_TOKEN }}
      working-directory: ./frontend/pyfactor_next
      
    - name: Deploy Project Artifacts to Vercel
      id: deploy
      run: |
        if [[ "${{ github.event_name }}" == "push" && ("${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" || "${{ github.ref }}" == "refs/heads/Dott-Main" || "${{ github.ref }}" == "refs/heads/production") ]]; then
          echo "Deploying to production..."
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
        else
          echo "Deploying to preview..."
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
        fi
        echo "deployment_url=$url" >> $GITHUB_OUTPUT
        echo "Deployment URL: $url"
      working-directory: ./frontend/pyfactor_next
      
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🚀 **Vercel Preview Deployment**\n\n✅ Deployment successful!\n\n🔗 **Preview URL:** ${{ steps.deploy.outputs.deployment_url }}\n\n📝 **Commit:** ${{ github.sha }}'
          })
          
    - name: Update deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Deployment completed successfully"
          echo "🔗 URL: ${{ steps.deploy.outputs.deployment_url }}"
        else
          echo "❌ Deployment failed"
        fi 